{"version":3,"sources":["config/env.config.ts","config/style.config.ts","App.root.tsx","module/auth/component/auth.component.tsx","common/component/card/card.component.tsx","common/component/divider/divider.component.tsx","common/component/header/header.component.tsx","common/component/transition/page-transition.component.tsx","common/component/field/field-input.component.tsx","common/component/field/field-password.component.tsx","common/component/table-action/table-action.component.tsx","common/component/submission/create-submission.component.tsx","service/api.service.ts","service/auth.service.ts","service/provider.service.ts","service/role.service.ts","service/service.service.ts","service/submission.service.ts","service/user.service.ts","service/_index.service.ts","store/service/auth.store.ts","store/service/provider.store.ts","store/service/role.store.ts","store/service/service.store.ts","store/service/submission.store.ts","store/service/user.store.ts","store/service/_index-service.store.ts","module/auth/component/login/component/form-login.component.tsx","module/auth/component/login/login.component.tsx","module/auth/page/login.page.tsx","module/auth/component/register/component/terms-and-conditions.component.tsx","module/auth/component/register/component/form-register.component.tsx","module/auth/component/register/register.component.tsx","module/auth/page/register.page.tsx","module/main/component/main/component/sider-icon-item.component.tsx","module/main/component/main/component/sider-icon.component.tsx","module/main/component/main/component/menu-admin.component.tsx","module/main/component/main/component/menu-helpdesk.component.tsx","module/main/component/main/component/menu-verifikator.component.tsx","module/main/component/main/component/menu-provider.component.tsx","module/main/page/main.page.tsx","common/component/modal/modal.component.tsx","module/user/component/form-user.component.tsx","module/user/component/modal-form-user.component.tsx","module/user/component/table-action.component.tsx","module/user/component/table-user.component.tsx","module/user/page/user.page.tsx","module/account/page/account.page.tsx","module/change-data/page/change-data.page.tsx","module/change-email/page/change-email.page.tsx","module/public/page/public.page.tsx","module/auth/component/password-forget/component/form-password-forget.component.tsx","module/auth/component/password-forget/password-forget.component.tsx","module/auth/page/password-forget.page.tsx","module/account/component/verification/component/table-verification.component.tsx","module/account/page/verification.page.tsx","module/account/page/verification-approval.page.tsx","module/change-data/component/table-verification.component.tsx","module/change-data/page/verification.page.tsx","module/change-data/page/verification-approval.page.tsx","module/change-email/component/table-verification.component.tsx","module/change-email/page/verification.page.tsx","module/change-email/page/verification-approval.page.tsx","module/service/component/table-action.component.tsx","module/service/component/table-service.component.tsx","module/service/component/form-service.component.tsx","module/service/component/modal-form-service.component.tsx","module/service/page/service.page.tsx","module/provider/component/table-action.component.tsx","module/provider/component/table-provider.component.tsx","module/provider/page/provider.page.tsx","module/consult-online/page/consult-online.page.tsx","module/consult-online/page/verification.page.tsx","module/consult-f2f/page/consult-f2f.page.tsx","module/consult-f2f/component/table-verification.component.tsx","module/consult-f2f/page/verification.page.tsx","module/role/component/form-role.component.tsx","module/role/component/modal-form-role.component.tsx","module/role/component/table-action.component.tsx","module/role/component/table-role.component.tsx","module/role/page/role.page.tsx","module/submission/component/form-submission-type.component.tsx","module/submission/component/modal-form-submission-type.component.tsx","module/submission/component/table-submission-type-action.component.tsx","module/submission/component/table-submission-type.component.tsx","module/submission/page/submission-type.page.tsx","module/submission/component/form-submission-type-requirement.component.tsx","module/submission/component/modal-form-submission-type-requirement.component.tsx","module/submission/component/table-submission-type-requirement-action.component.tsx","module/submission/component/table-submission-type-requirement.component.tsx","module/submission/page/submission-type-requirement.page.tsx","module/submission/page/submission.page.tsx","config/route.config.ts","module/submission/page/submission-approval.page.tsx","module/submission/page/submission-approval-verification.page.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ENV","process","STYLE","PRIMARY","ERROR","WARNING","GRAY","memo","route","renderRoutes","routes","AuthContainer","styled","div","AuthContent","children","Elevation","e100","e200","e300","e400","e500","Card","elevation","style","bodyStyle","hoverable","bordered","DividerComponent","color","PageHeader","props","ghost","marginBottom","VerticalVariants","hidden","y","opacity","visible","transition","easings","duration","exit","HorizontalVariants","x","direction","variants","initial","animate","name","label","defaultValue","placeholder","type","addonBefore","addonAfter","prefix","suffix","allowClear","maxLength","minLength","autoComplete","required","useFormContext","control","register","errors","Item","Text","strong","validateStatus","message","help","as","Password","ActionMenu","key","EditOutlined","overlay","trigger","className","onClick","e","preventDefault","EllipsisOutlined","fontSize","CreateSubmission","CreateSubmissionContainer","onCreate","description","ApiService","api","this","axios","create","baseURL","defaults","headers","common","localStorage","getItem","AuthService","loginData","post","registerData","ProviderService","get","providerData","registerProviderData","RoleService","roleData","ServiceService","serviceData","SubmissionService","submissionTypeId","submissionTypeData","submissionTypeRequirementData","providerId","submissionData","submissionRequirementId","fileUpload","put","submissionId","patch","submissionRequiremetId","reason","UserService","userData","Api","authService","providerService","roleService","serviceService","userService","submissionService","AuthStore","store","login","result","console","log","data","user","setToken","token","setUser","setItem","JSON","stringify","removeItem","ProviderStore","getProviders","providersData","createProvider","status","toJS","observable","action","computed","RoleStore","getRoles","rolesData","createRole","fetchRoles","ServiceStore","getServices","servicesData","createService","fetchServices","SubmissionStore","submissionTypeName","activeSubmissionTypeMenuData","getSubmissionTypes","submissionTypesData","createSubmisionType","fetchSubmissionTypes","getSubmissionTypeRequirements","submissionTypeRequirementsData","createSubmissionTypeRequirement","fetchSubmissionTypeRequirements","userId","createSubmission","createdBy","fetchActiveSubmission","getActiveSubmissionByProvider","activeSubmissionData","uploadData","updateSubmission","submitSubmission","cancelSubmission","getSubmissionVerificationVerifikator","submissionApprovalData","getSubmissionVerificationHelpdesk","approveRequirement","fetchSubmissionApprovalRequirement","rejectRequirement","getSubmissionRequirement","submissionApprovalRequirementData","submissionRequirements","submitApprovalHelpdesk","submitApprovalVerifikator","UserStore","getUsers","usersData","createUser","fetchUsers","context","createContext","authStore","roleStore","serviceStore","userStore","providerStore","submissionStore","useServiceStore","useContext","FormLoginSchema","yup","shape","email","defined","password","observer","useState","isSubmit","formLoginContext","useForm","resolver","yupResolver","mode","history","useHistory","onSubmitLogin","a","push","onSubmitCapture","handleSubmit","MailOutlined","LockOutlined","statusCode","htmlType","block","loading","span","to","textAlign","title","ContentContainer","FormRegisterDefaultValue","npwp","confirmPassword","isAgree","FormRegisterSchema","trim","matches","min","max","oneOf","setSubmit","formRegisterContext","defaultValues","onSubmitRegister","registerProvider","reset","UserOutlined","CreditCardOutlined","onChange","render","value","onBlur","content","target","checked","QuestionCircleOutlined","tooltip","icon","placement","SiderIconItems","AntDesignOutlined","LogoutOutlined","logout","size","map","item","index","SubMenu","Menu","changeMenu","path","setSubmissionTypeMenu","typeName","setActiveSubmissionMenu","useEffect","ApartmentOutlined","TeamOutlined","AppstoreAddOutlined","AuditOutlined","SnippetsOutlined","id","AntSider","Sider","AntContent","Header","Content","Footer","SiderIcon","SiderMenu","SiderMenuAnimationVariants","init","getUser","parse","width","marginLeft","backgroundColor","padding","info","role","show","destroyOnClose","layout","labelCol","wrapperCol","FormUserSchema","roleId","modalFormUser","useModalFormUser","formUserContext","onSubmitUser","close","showSearch","Option","ModalFormUserStore","isOpen","onCancel","footer","EyeOutlined","columns","record","dataIndex","isActive","dataSource","extra","PlusOutlined","open","Upload","multiple","text","UploadOutlined","isCreateSubmission","setCreateSubmission","pagination","showHeader","marginTop","danger","AntHeader","AntFooter","SiderContainer","SiderAnimationVariants","theme","Title","level","gutter","FormPasswordForgetSchema","formPasswordForgetContext","passwordForgetData","totalDocument","documents","length","progressDocument","total","inProgress","filter","activeDocument","Math","round","percent","rowKey","namaPerusahaan","npwpPerusahaan","contextName","file","FormServiceSchema","modalFormService","useModalFormService","formServiceContext","onSubmitRole","ModalFormServiceStore","fetchProviders","temaKonsultasi","tglKonsultasi","FormRoleSchema","modalFormRole","useModalFormRole","formRoleContext","ModalFormRoleStore","FormSubmissionTypeSchema","modalFormSubmissionType","useModalFormSubmissionType","formSubmissionTypeContext","onSubmitSubmissionType","createSubmissionType","ModalFormSubmissionTypeStore","FileOutlined","FormSubmissionTypeRequirementSchema","template","isRequired","fileList","setFileList","useParams","modalFormSubmissionTypeRequirement","useModalFormSubmissionTypeRequirement","uploadProps","accept","beforeUpload","onRemove","formSubmissionTypeRequirementContext","formData","FormData","append","ref","ModalFormSubmissionTypeRequirementStore","href","dispatchSubmissionTypeRequirementsData","ROUTE","component","AppRoot","exact","LoginPage","PasswordForgetPage","RegisterPage","MainPage","UserPage","RolePage","ProviderPage","ServicePage","SubmissionTypePage","SubmissionTypeRequirementPage","param","fontWeight","test","test2","getActiveSubmission","fetchSubmissionVerificationHelpdesk","fetchSubmissionVerificationVerifikator","getSubmissionApprovalData","getSubmissionApprovalRequirement","AccountPage","VerificationAccountPage","VerificationApprovalAccountPage","ChangeDataPage","VerificationChangeDataPage","VerificationApprovalChangeDataPage","ChangeEmailPage","VerificationChangeEmailPage","VerificationApprovalChangeEmailPage","ConsultOnlinePage","VerificationConsultationOnlinePage","ConsultF2FPage","VerificationConsultationF2FPage","PublicPage","App","location","useLocation","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","NODE_ENV","URL","origin","addEventListener","fetch","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a6434d1b.chunk.js","sourcesContent":["export const ENV = {\r\n  ...process.env\r\n}","export const STYLE = {\r\n  COLOR: {\r\n    PRIMARY: '#0052cc',\r\n    ERROR: '#de350b',\r\n    WARNING: '#ff991f',\r\n    GRAY: '#edf1f5',\r\n    // PRIMARY: '#edf1f5',\r\n    // GRAY: '#edf1f5'\r\n  }\r\n}","import { memo, FunctionComponent } from 'react'\r\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config'\r\n\r\nconst AppRoot: FunctionComponent<RouteConfigComponentProps> = ({ route }) => {\r\n  return renderRoutes(route?.routes)\r\n}\r\n\r\nexport default memo(AppRoot)\r\n","import React, { memo, FunctionComponent, ReactNode } from 'react'\r\nimport styled from \"styled-components\";\r\n\r\ninterface AuthComponentProps {\r\n  children: string | ReactNode\r\n}\r\n\r\nconst AuthContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst AuthContent = styled.div`\r\n  width: 400px;\r\n  padding: 24px;\r\n\r\n  @media (max-width: 375px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst AuthComponent: FunctionComponent<AuthComponentProps> = ({ children }) => {\r\n  return (\r\n    <AuthContainer>\r\n      <AuthContent>\r\n        {children}\r\n      </AuthContent>\r\n    </AuthContainer>\r\n  )\r\n}\r\n\r\nexport default memo(AuthComponent)\r\n","import React, { memo, FunctionComponent, ReactNode, CSSProperties } from 'react'\r\nimport { Card as AntCard } from 'antd'\r\nimport styled from 'styled-components'\r\n\r\ntype ElevationType = 'e100' | 'e200' | 'e300' | 'e400' | 'e500'\r\n\r\nconst Elevation = {\r\n  e100: 'box-shadow: rgba(9, 30, 66, 0.25) 0px 1px 1px, rgba(9, 30, 66, 0.31) 0px 0px 1px 0px;',\r\n  e200: 'box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.31) 0px 0px 1px;',\r\n  e300: 'box-shadow: rgba(9, 30, 66, 0.25) 0px 8px 16px -4px, rgba(9, 30, 66, 0.31) 0px 0px 1px;',\r\n  e400: 'box-shadow: rgba(9, 30, 66, 0.25) 0px 12px 24px -6px, rgba(9, 30, 66, 0.31) 0px 0px 1px;',\r\n  e500: 'box-shadow: rgba(9, 30, 66, 0.25) 0px 20px 32px -8px, rgba(9, 30, 66, 0.31) 0px 0px 1px;',\r\n}\r\n\r\nconst Card = styled(AntCard) <{ elevation: ElevationType }>`\r\n  ${({ elevation }) => Elevation[elevation]};\r\n`\r\n\r\ninterface CardComponentProps {\r\n  elevation?: ElevationType\r\n  children: string | ReactNode\r\n  style?: CSSProperties\r\n  bodyStyle?: CSSProperties\r\n  hoverable?: boolean\r\n}\r\n\r\nconst CardComponent: FunctionComponent<CardComponentProps> = ({ elevation = 'e100', children, style, bodyStyle, hoverable = false }) => {\r\n  return (\r\n    <Card hoverable={hoverable} elevation={elevation} bordered={false} style={{ ...style }} bodyStyle={{ ...bodyStyle }}>\r\n      {children}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default memo(CardComponent)\r\n","import { memo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { STYLE } from 'config/style.config'\r\n\r\ninterface DividerComponentProps {\r\n  color?: string\r\n}\r\n\r\nconst DividerComponent = styled.div<DividerComponentProps>`\r\n  width: 100px;\r\n  height: 4px;\r\n  border-radius: 3px;\r\n  background-color: ${({ color }) => color ? color : STYLE.COLOR.PRIMARY};\r\n`\r\n\r\nexport default memo(DividerComponent)\r\n","import React, { memo, FunctionComponent, ReactNode } from 'react'\r\nimport { PageHeaderProps } from 'antd/lib/page-header'\r\nimport styled from 'styled-components'\r\nimport { PageHeader as AntPageHeader } from 'antd'\r\nimport { DividerComponent } from '../index.component'\r\n\r\ninterface HeaderComponentProps extends PageHeaderProps {\r\n  children?: string | ReactNode\r\n}\r\n\r\nconst PageHeader = styled(AntPageHeader)`\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n  padding-top: 0;\r\n`\r\n\r\nconst HeaderComponent: FunctionComponent<HeaderComponentProps> = (props) => {\r\n  return (\r\n    <PageHeader {...props} ghost={ props.ghost || true }>\r\n      <DividerComponent style={{ marginBottom: props.children ? 16 : 0 }} />\r\n      {props.children}\r\n    </PageHeader>\r\n  )\r\n}\r\n\r\nexport default memo(HeaderComponent)\r\n","import React, { memo, FunctionComponent, ReactNode } from 'react'\r\nimport { motion } from 'framer-motion'\r\n\r\ninterface PageTransitionComponentProps {\r\n  children: string | ReactNode\r\n  direction: \"vertical\" | \"horizontal\"\r\n}\r\n\r\nconst VerticalVariants = {\r\n  hidden: {\r\n    y: 24,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    y: 0,\r\n    opacity: 1,\r\n    transition: {\r\n      easings: \"easeInOut\",\r\n      duration: 0.3\r\n    }\r\n  },\r\n  exit: {\r\n    y: 24,\r\n    opacity: 0,\r\n    transition: {\r\n      easings: \"easeInOut\",\r\n      duration: 0.1\r\n    }\r\n  }\r\n}\r\n\r\nconst HorizontalVariants = {\r\n  hidden: {\r\n    x: 24,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    x: 0,\r\n    opacity: 1,\r\n    transition: {\r\n      easings: \"easeInOut\",\r\n      duration: 0.3\r\n    }\r\n  },\r\n  exit: {\r\n    x: 24,\r\n    opacity: 0,\r\n    transition: {\r\n      easings: \"easeInOut\",\r\n      duration: 0.1\r\n    }\r\n  }\r\n}\r\n\r\nconst PageTransitionComponent: FunctionComponent<PageTransitionComponentProps> = ({\r\n  children,\r\n  direction\r\n}) => {\r\n  return (\r\n    <motion.div\r\n      variants={direction === \"vertical\" ? VerticalVariants : HorizontalVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default memo(PageTransitionComponent)\r\n","import React, { memo, FunctionComponent, ReactNode } from 'react'\r\nimport { FormItemProps } from 'antd/lib/form'\r\nimport { InputProps } from 'antd/lib/input'\r\nimport { useFormContext, Controller } from 'react-hook-form'\r\nimport { Form, Input, Typography } from 'antd'\r\n\r\ninterface FieldInputComponentProps extends FormItemProps, InputProps {\r\n  name: string\r\n  children?: string | ReactNode\r\n  onReset?: () => void\r\n}\r\n\r\nconst FieldInputComponent: FunctionComponent<FieldInputComponentProps> = ({\r\n  name,\r\n  label,\r\n  defaultValue,\r\n  placeholder,\r\n  type = 'text',\r\n  addonBefore,\r\n  addonAfter,\r\n  prefix,\r\n  suffix,\r\n  allowClear = true,\r\n  maxLength = 200,\r\n  minLength,\r\n  autoComplete = \"off\",\r\n  required,\r\n  style\r\n}) => {\r\n  // use form context\r\n  const { register, control, errors } = useFormContext()\r\n\r\n  return (\r\n    <Form.Item\r\n      label={label && <Typography.Text strong> {required && <span style={{ color: 'red' }}>*</span>} {label} </Typography.Text>}\r\n      validateStatus={errors[name]?.message && 'error'}\r\n      help={errors[name]?.message}\r\n    >\r\n      <Controller\r\n        as={\r\n          <Input\r\n            type={type}\r\n            addonBefore={addonBefore}\r\n            addonAfter={addonAfter}\r\n            prefix={prefix}\r\n            suffix={suffix}\r\n            allowClear={allowClear}\r\n            placeholder={placeholder}\r\n            autoComplete={autoComplete}\r\n            maxLength={maxLength}\r\n            minLength={minLength}\r\n            style={style}\r\n          />\r\n        }\r\n        control={control}\r\n        name={name}\r\n        defaultValue={defaultValue}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport default memo(FieldInputComponent)\r\n","import React, { memo, FunctionComponent, ReactNode } from 'react'\r\nimport { useFormContext, Controller } from 'react-hook-form'\r\nimport { Form, Input, Typography } from 'antd'\r\nimport { FormItemProps } from 'antd/lib/form'\r\nimport { InputProps } from 'antd/lib/input'\r\n\r\ninterface FieldPasswordComponentProps extends FormItemProps, InputProps {\r\n  name: string\r\n  children?: string | ReactNode\r\n  onReset?: () => void\r\n}\r\n\r\nconst FieldPasswordComponent: FunctionComponent<FieldPasswordComponentProps> = ({\r\n  name,\r\n  label,\r\n  defaultValue,\r\n  placeholder,\r\n  type = 'text',\r\n  addonBefore,\r\n  addonAfter,\r\n  prefix,\r\n  suffix,\r\n  allowClear = true,\r\n  maxLength = 200,\r\n  minLength,\r\n  autoComplete = \"off\",\r\n  required\r\n}) => {\r\n  // use form context\r\n  const { register, control, errors } = useFormContext()\r\n\r\n  return (\r\n    <Form.Item\r\n      label={label && <Typography.Text strong> {required && <span style={{ color: 'red' }}>*</span>} {label} </Typography.Text>}\r\n      validateStatus={errors[name]?.message && 'error'}\r\n      help={errors[name]?.message}\r\n    >\r\n      <Controller\r\n        as={\r\n          <Input.Password\r\n            type={type}\r\n            addonBefore={addonBefore}\r\n            addonAfter={addonAfter}\r\n            prefix={prefix}\r\n            suffix={suffix}\r\n            allowClear={allowClear}\r\n            placeholder={placeholder}\r\n            autoComplete={autoComplete}\r\n            maxLength={maxLength}\r\n            minLength={minLength}\r\n          />\r\n        }\r\n        control={control}\r\n        name={name}\r\n        defaultValue={defaultValue}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport default memo(FieldPasswordComponent)\r\n","import React, { FunctionComponent, memo } from 'react'\r\nimport TableActionMenuComponent from './table-action-menu.component'\r\nimport { EditOutlined, EllipsisOutlined } from '@ant-design/icons'\r\nimport { Dropdown, Menu } from 'antd'\r\n\r\nconst TableActionComponent: FunctionComponent = () => {\r\n\r\n  // action menu\r\n  const ActionMenu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <EditOutlined style={{ color: 'darkorange' }} /> Edit\r\n        </Menu.Item>\r\n      {/* <Menu.Item key=\"1\">\r\n          <a href=\"http://www.taobao.com/\">2nd menu item</a>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"3\">3rd menu item</Menu.Item> */}\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <Dropdown overlay={ActionMenu} trigger={['click']}>\r\n      <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n        <EllipsisOutlined style={{ fontSize: 24 }} />\r\n      </a>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default memo(TableActionComponent)\r\n","import React, { FunctionComponent, memo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Empty, Typography, Space, Form, Table, Tag, Upload as AntUpload, Alert } from 'antd'\r\nimport { UploadOutlined } from '@ant-design/icons'\r\n\r\nconst CreateSubmission = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst CreateSubmissionContainer = styled.div`\r\n  width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\n// interface props\r\ninterface CreateSubmissionComponent {\r\n  onCreate: () => void\r\n}\r\n\r\nconst CreateSubmissionComponent: FunctionComponent<CreateSubmissionComponent> = ({ onCreate }) => {\r\n  return (\r\n    <CreateSubmission>\r\n      <CreateSubmissionContainer>\r\n        <Form.Item>\r\n          <Empty description={<Typography.Text strong> Sedang tidak ada pengajuan yang aktif </Typography.Text>} />\r\n        </Form.Item>\r\n        <Button type=\"primary\" onClick={onCreate}> Buat Pengajuan </Button>\r\n      </CreateSubmissionContainer>\r\n    </CreateSubmission>\r\n  )\r\n}\r\n\r\nexport default memo(CreateSubmissionComponent)\r\n","import axios, { AxiosInstance } from 'axios'\r\nimport { ENV } from 'config/index.config'\r\n\r\nexport class ApiService {\r\n  api: AxiosInstance\r\n\r\n  constructor() {\r\n    // Set config defaults when creating the instance\r\n    this.api = axios.create({\r\n      // baseURL: ENV.REACT_APP_API_URL,\r\n      baseURL: 'http://localhost:3001/api',\r\n    });\r\n\r\n    // Alter defaults after instance has been created\r\n    this.api.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\r\n  }\r\n}","import { ApiService } from \"./api.service\";\r\n\r\nexport interface LoginDto {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nexport interface RegisterDto {\r\n  namaPerusahaan: string\r\n  npwpPerusahaan: string\r\n  email: string\r\n  password: string\r\n  confirmPassword: string\r\n}\r\n\r\nexport class AuthService extends ApiService {\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  // login\r\n  async login(loginData: LoginDto) {\r\n    return this.api.post('/auth/login', loginData)\r\n  }\r\n\r\n  async register(registerData: RegisterDto) {\r\n    return this.api.post('/auth/register', registerData)\r\n  }\r\n  \r\n}","import { ApiService } from \"./api.service\";\r\n\r\n// interface provider data\r\ninterface RegisterProviderData {\r\n  namaPerusahaan: string\r\n  npwpPerusahaan: string\r\n  email: string\r\n  password: string\r\n  confirmPassword: string\r\n  isAgree: boolean\r\n}\r\n\r\nexport class ProviderService extends ApiService {\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  // get all provider\r\n  async getProviders() {\r\n    return this.api.get('/provider')\r\n  }\r\n\r\n  // create provider\r\n  async createProvider(providerData: any) {\r\n    return this.api.post(`/auth/register`, providerData)\r\n  }\r\n\r\n  // register provider\r\n  async registerProvider(registerProviderData: RegisterProviderData) {\r\n    return this.api.post('/auth/register', registerProviderData)\r\n  }\r\n\r\n}","import { ApiService } from \"./api.service\";\r\n\r\n// create role dto\r\ninterface CreateRole {\r\n  name: string\r\n  description?: string\r\n}\r\n\r\nexport class RoleService extends ApiService {\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  // get all roles\r\n  async getRoles() {\r\n    return this.api.get(`/role`)\r\n  }\r\n\r\n  // create role\r\n  async createRole(roleData: CreateRole) {\r\n    return this.api.post('/role', roleData)\r\n  }\r\n  \r\n}","import { ApiService } from \"./api.service\";\r\n\r\n// create service dto\r\ninterface CreateService {\r\n  name: string\r\n  description?: string\r\n}\r\n\r\nexport class ServiceService extends ApiService {\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  // get all services\r\n  async getServices() {\r\n    return this.api.get(`/service`)\r\n  }\r\n\r\n  // create service\r\n  async createService(serviceData: CreateService) {\r\n    return this.api.post('/service', serviceData)\r\n  }\r\n  \r\n}","import { ApiService } from \"./api.service\";\r\n\r\nexport interface SubmissionType {\r\n  name: string\r\n  description?: string\r\n}\r\n\r\nexport interface SubmissionTypeRequirement {\r\n  name: string\r\n  description?: string\r\n  templateFile: string\r\n  isRequired: boolean\r\n}\r\n\r\nexport interface Submission {\r\n  submissionTypeId: string | number\r\n  createdBy: string | number\r\n}\r\n\r\nexport class SubmissionService extends ApiService {\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  // get all submission type\r\n  async getSubmissionTypes() {\r\n    return this.api.get(`/submission/type`)\r\n  }\r\n\r\n  // get all submission type requirement\r\n  async getSubmissionTypeRequirements(submissionTypeId: string | number) {\r\n    return this.api.get(`/submission/type/${submissionTypeId}/requirement`)\r\n  }\r\n\r\n  // create submission type\r\n  async createSubmisionType(submissionTypeData: SubmissionType) {\r\n    return this.api.post(`/submission/type`, submissionTypeData)\r\n  }\r\n\r\n  // create submission type requirement\r\n  async createSubmissionTypeRequirement(submissionTypeId: string | number, submissionTypeRequirementData: SubmissionTypeRequirement) {\r\n    return this.api.post(`/submission/type/${submissionTypeId}/requirement`, submissionTypeRequirementData)\r\n  }\r\n\r\n  // get all submission\r\n  async getSubmissions() {\r\n    return this.api.get(`/submission`)\r\n  }\r\n\r\n  // get all submission by provider\r\n  async getSubmissionsByProvider(providerId: string | number) {\r\n    return this.api.get(`/submission/provider/${providerId}`)\r\n  }\r\n\r\n  // get active submission by provider\r\n  async getActiveSubmissionByProvider(submissionTypeId: string | number, providerId: string | number) {\r\n    return this.api.get(`/submission/${submissionTypeId}/${providerId}/active`)\r\n  }\r\n\r\n  // create submission\r\n  async createSubmission(submissionData: Submission) {\r\n    return this.api.post(`/submission`, submissionData)\r\n  }\r\n\r\n  // upload file submission requirement\r\n  async updateSubmission(submissionRequirementId: string | number, fileUpload: any) {\r\n    return this.api.put(`/submission/requirement/${submissionRequirementId}`, fileUpload)\r\n  }\r\n\r\n  // submit submission\r\n  async submitSubmission(submissionId: string | number) {\r\n    return this.api.patch(`/submission/${submissionId}/submit`)\r\n  }\r\n\r\n  // cancel submission\r\n  async cancelSubmission(submissionId: string | number) {\r\n    return this.api.patch(`/submission/${submissionId}/cancel`)\r\n  }\r\n\r\n  // approve submisison\r\n  async approveRequirement(submissionRequirementId: string | number) {\r\n    return this.api.patch(`/submission/requirement/${submissionRequirementId}/approve`)\r\n  }\r\n\r\n  // reject submission\r\n  async rejectRequirement(submissionRequiremetId: string | number, reason: string) {\r\n    return this.api.patch(`/submission/requirement/${submissionRequiremetId}/reject`, reason)\r\n  }\r\n  \r\n  // get list submission approval\r\n  async getSubmissionVerificationVerifikator(submissionTypeId: string | number) {\r\n    return this.api.get(`/submission/${submissionTypeId}/verification/verifikator`)\r\n  }\r\n\r\n   \r\n  // get list submission approval\r\n  async getSubmissionVerificationHelpdesk(submissionTypeId: string | number) {\r\n    return this.api.get(`/submission/${submissionTypeId}/verification/helpdesk`)\r\n  }\r\n\r\n  // get submission requirement\r\n  async getSubmissionRequirement(submissionTypeId: string | number, submissionId: string | number) {\r\n    return this.api.get(`/submission/${submissionTypeId}/requirement/${submissionId}`)\r\n  }\r\n\r\n  async submitApprovalHelpdesk(submissionId: string | number) {\r\n    return this.api.patch(`/submission/submit/approval/helpdesk/${submissionId}`)\r\n  }\r\n\r\n  async submitApprovalVerifikator(submissionId: string | number) {\r\n    return this.api.patch(`/submission/submit/approval/verifikator/${submissionId}`)\r\n  }\r\n}","import { ApiService } from \"./api.service\";\r\n\r\ninterface CreateUser {\r\n  name: string\r\n  email: string\r\n  role: string\r\n  password: string\r\n  confirmPassword: string\r\n}\r\n\r\n// interface UpdateUserDto {\r\n//   name: string\r\n//   email: string\r\n//   role: string\r\n// }\r\n\r\n// interface ResetPassword {\r\n\r\n// }\r\n\r\nexport class UserService extends ApiService {\r\n  \r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  // get all user\r\n  async getUsers() {\r\n    return this.api.get('/user')\r\n  }\r\n\r\n  // // get user by id\r\n  // async getUserById(userId: string) {\r\n  //   return this.api.get(`/user/${userId}`)\r\n  // }\r\n\r\n  // create new user\r\n  async createUser(userData: CreateUser) {\r\n    return this.api.post('/user', userData)\r\n  }\r\n\r\n  // // update user\r\n  // async updateUser(userId: string, userData: UpdateUserDto) {\r\n  //   return this.api.put(`/user/${userId}`, userData)\r\n  // }\r\n\r\n  // // lock user\r\n  // async lock(userId: string) {\r\n  //   return this.api.patch(`/user/${userId}/lock`)\r\n  // }\r\n\r\n  // // unlock user\r\n  // async unlock(userId: string) {\r\n  //   return this.api.patch(`/user/${userId}/unlock`)\r\n  // }\r\n\r\n  // reset password\r\n\r\n}","import { AuthService } from \"./auth.service\"\r\nimport { ProviderService } from \"./provider.service\"\r\nimport { RoleService } from \"./role.service\"\r\nimport { ServiceService } from \"./service.service\"\r\nimport { SubmissionService } from \"./submission.service\"\r\nimport { UserService } from \"./user.service\"\r\n\r\nclass Service {\r\n  authService: AuthService\r\n  providerService: ProviderService\r\n  roleService: RoleService\r\n  serviceService: ServiceService\r\n  userService: UserService\r\n  submissionService: SubmissionService\r\n\r\n  constructor() {\r\n    this.authService = new AuthService()\r\n    this.providerService = new ProviderService()\r\n    this.roleService = new RoleService()\r\n    this.serviceService = new ServiceService()\r\n    this.userService = new UserService()\r\n    this.submissionService = new SubmissionService()\r\n  }\r\n}\r\n\r\nexport const Api = new Service()","import { Store } from \"store/index.store\";\r\nimport { Api } from 'service/_index.service'\r\nimport { LoginDto, RegisterDto } from 'service/auth.service'\r\n\r\nexport class AuthStore {\r\n  store: Store\r\n\r\n  constructor(store: any) {\r\n    this.store = store\r\n  }\r\n\r\n  // login\r\n  async login(loginData: LoginDto) {\r\n    const result = await Api.authService.login(loginData)\r\n    console.log(result)\r\n    if (result?.data?.user !== false) {\r\n      this.setToken(result.data.token)\r\n      this.setUser(result.data.user)\r\n      return result\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  async register(registerData: RegisterDto) {\r\n    // const result = await api.authService.register(registerData)\r\n    // console.log('register result', result)\r\n    return Api.authService.register(registerData)\r\n  }\r\n\r\n  async getToken() {\r\n    return await localStorage.getItem('token')\r\n  }\r\n\r\n  async getUser() {\r\n    return await localStorage.getItem('user')\r\n  }\r\n\r\n  async setToken(token: any) {\r\n    localStorage.setItem('token', token)\r\n  }\r\n\r\n  async setUser(user: any) {\r\n    localStorage.setItem('user', JSON.stringify(user))\r\n  }\r\n\r\n  async isLogin() {\r\n    return !!(await localStorage.getItem('token'))\r\n  }\r\n\r\n  async logout() {\r\n    localStorage.removeItem('token')\r\n  }\r\n\r\n}","import { Store } from \"store/index.store\"\r\nimport { Api } from 'service/_index.service'\r\nimport { action, computed, observable, toJS } from \"mobx\";\r\n\r\nexport class ProviderStore {\r\n  store: Store\r\n  // providers data\r\n  @observable\r\n  providersData = []\r\n\r\n  constructor(store: any) {\r\n    this.store = store\r\n  }\r\n\r\n  // fetch providers\r\n  @action\r\n  async fetchProviders() {\r\n    console.log(`[PROVIDERS] - Fetch Providers`)\r\n    const result = await Api.providerService.getProviders()\r\n    this.providersData = result.data\r\n  }\r\n\r\n  // get providers\r\n  @computed\r\n  get getProviders() {\r\n    return toJS(this.providersData)\r\n  }\r\n\r\n  // // create role\r\n  // async createRole(providerData: any) {\r\n  //   console.log(`[PROVIDERS] - Create Provider`, providerData)\r\n  //   const result = await Api.providerService.createProvider(providerData)\r\n  //   await this.fetchProviders()\r\n  //   return result.status == 200 || result.status == 201 ? true : false\r\n  // }\r\n\r\n  // register provider\r\n  async registerProvider(registerProviderData: any) {\r\n    try {\r\n      console.log(`[PROVIDERS] - Create Provider`, registerProviderData)\r\n      const result = await Api.providerService.createProvider(registerProviderData)\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      console.log('catch error', error)\r\n      return false\r\n    }\r\n  }\r\n\r\n}","import { Store } from \"store/index.store\";\r\nimport { Api } from 'service/_index.service'\r\nimport { action, computed, observable, toJS } from \"mobx\";\r\n\r\nexport class RoleStore {\r\n  store: Store\r\n  // roles data\r\n  @observable\r\n  rolesData = []\r\n\r\n  constructor(store: any) {\r\n    this.store = store\r\n  }\r\n\r\n  // fetch roles\r\n  @action\r\n  async fetchRoles() {\r\n    console.log(`[ROLES] - Fetch Roles`)\r\n    const result = await Api.roleService.getRoles()\r\n    this.rolesData = result.data\r\n  }\r\n  \r\n  // get roles\r\n  @computed\r\n  get getRoles() {\r\n    return toJS(this.rolesData)\r\n  }\r\n\r\n  // create role\r\n  async createRole(roleData: any) {\r\n    console.log(`[ROLES] - Create Role`, roleData)\r\n    const result = await Api.roleService.createRole(roleData)\r\n    await this.fetchRoles()\r\n    return result.status == 200 || result.status == 201 ? true : false\r\n  }\r\n\r\n}","import { Store } from \"store/index.store\";\r\nimport { Api } from 'service/_index.service'\r\nimport { action, computed, observable, toJS } from \"mobx\";\r\n\r\nexport class ServiceStore {\r\n  store: Store\r\n  // service data\r\n  @observable\r\n  servicesData = []\r\n\r\n  constructor(store: any) {\r\n    this.store = store\r\n  }\r\n\r\n  // fetch services\r\n  @action\r\n  async fetchServices() {\r\n    try {\r\n      console.log(`[SERVICES] - Fetch SERVICES`)\r\n      const result = await Api.serviceService.getServices()\r\n      this.servicesData = result.data\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // get services\r\n  @computed\r\n  get getServices() {\r\n    return toJS(this.servicesData)\r\n  }\r\n\r\n  // create service\r\n  async createService(serviceData: any) {\r\n    try {\r\n      console.log(`[SERVICES] - Create Service`, serviceData)\r\n      const result = await Api.serviceService.createService(serviceData)\r\n      await this.fetchServices()\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n}","import { Store } from \"store/index.store\";\r\nimport { Api } from 'service/_index.service'\r\nimport { action, computed, observable, toJS } from \"mobx\";\r\n\r\nexport class SubmissionStore {\r\n  store: Store\r\n  // submissions data\r\n  @observable submissionTypesData = []\r\n  @observable submissionTypeRequirementsData = []\r\n  @observable activeSubmissionTypeMenuData: string = ''\r\n  @observable activeSubmissionData: any\r\n  @observable submissionApprovalData = []\r\n  @observable submissionApprovalRequirementData: any = []\r\n\r\n  constructor(store: any) {\r\n    this.store = store\r\n  }\r\n\r\n  // set active submission menu\r\n  @action\r\n  setActiveSubmissionMenu(submissionTypeName: string) {\r\n    this.activeSubmissionTypeMenuData = submissionTypeName\r\n  }\r\n\r\n  // get active submission menu\r\n  @computed\r\n  get activeSubmissionTypeMenu() {\r\n    return this.activeSubmissionTypeMenuData\r\n  }\r\n\r\n  // fetch submission\r\n  @action\r\n  async fetchSubmissionTypes() {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Fetch Submission Types`)\r\n      const result = await Api.submissionService.getSubmissionTypes()\r\n      this.submissionTypesData = result.data\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // get submission types\r\n  @computed\r\n  get getSubmissionTypes() {\r\n    return toJS(this.submissionTypesData)\r\n  }\r\n\r\n  // create submission type\r\n  async createSubmissionType(submissionTypeData: any) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Create Submission Type`, submissionTypeData)\r\n      const result = await Api.submissionService.createSubmisionType(submissionTypeData)\r\n      await this.fetchSubmissionTypes()\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // fetch submission type requirement\r\n  @action\r\n  async fetchSubmissionTypeRequirements(submissionTypeId: string | number) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Fetch Submissions Type Requirements`)\r\n      const result = await Api.submissionService.getSubmissionTypeRequirements(submissionTypeId)\r\n      this.submissionTypeRequirementsData = result.data\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // get submission type requirement\r\n  @computed\r\n  get getSubmissionTypeRequirements() {\r\n    return toJS(this.submissionTypeRequirementsData)\r\n  }\r\n\r\n  // create submission type requirement\r\n  async createSubmissionTypeRequirement(submissionTypeId: string | number, submissionTypeData: any) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Create Submission Type Requirement`, submissionTypeData)\r\n      const result = await Api.submissionService.createSubmissionTypeRequirement(submissionTypeId, submissionTypeData)\r\n      await this.fetchSubmissionTypeRequirements(submissionTypeId)\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  @action\r\n  dispatchSubmissionTypeRequirementsData() {\r\n    this.submissionTypeRequirementsData = []\r\n  }\r\n\r\n  // create submission\r\n  async createSubmission(submissionTypeId: string | number, userId: string | number) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Create Submission`, submissionTypeId)\r\n      const result = await Api.submissionService.createSubmission({ submissionTypeId: submissionTypeId, createdBy: userId })\r\n      await this.fetchActiveSubmission(submissionTypeId, userId)\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // get active submission\r\n  @action\r\n  async fetchActiveSubmission(submissionTypeId: string | number, userId: string | number) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Fetch Active Submission`, submissionTypeId)\r\n      const result = await Api.submissionService.getActiveSubmissionByProvider(submissionTypeId, userId)\r\n      this.activeSubmissionData = result.data\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // get active submssion\r\n  @computed\r\n  get getActiveSubmission() {\r\n    // const json = toJS(this.activeSubmissionData)\r\n    // console.log('json active submission data', toJS(this.activeSubmissionData))\r\n    return toJS(this.activeSubmissionData)\r\n  }\r\n\r\n  // upload submission\r\n  @action\r\n  async uploadSubmission(submissionId: string | number, uploadData: any, submissionTypeId: string | number, userId: string | number) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Submit Submission`, submissionId)\r\n      const result = await Api.submissionService.updateSubmission(submissionId, uploadData)\r\n      await this.fetchActiveSubmission(submissionTypeId, userId)\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n\r\n  // submit submission\r\n  async submitSubmission(submissionId: string | number, submissionTypeId: string | number, userId: string | number) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Submit Submission`, submissionId)\r\n      const result = await Api.submissionService.submitSubmission(submissionId)\r\n      await this.fetchActiveSubmission(submissionTypeId, userId)\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // cancel submission\r\n  async cancelSubmission(submissionId: string | number, submissionTypeId: string | number, userId: string | number) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Submit Submission`, submissionId)\r\n      const result = await Api.submissionService.cancelSubmission(submissionId)\r\n      await this.fetchActiveSubmission(submissionTypeId, userId)\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // get list approval verifikator\r\n  @action\r\n  async fetchSubmissionVerificationVerifikator(submissionTypeId: string | number) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Get Submission For Verifikator`, submissionTypeId)\r\n      const result = await Api.submissionService.getSubmissionVerificationVerifikator(submissionTypeId)\r\n      // await this.fetchActiveSubmission(submissionTypeId, userId)\r\n      this.submissionApprovalData = result.data\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  @action\r\n  async fetchSubmissionVerificationHelpdesk(submissionTypeId: string | number) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Get Submission For Verifikator`, submissionTypeId)\r\n      const result = await Api.submissionService.getSubmissionVerificationHelpdesk(submissionTypeId)\r\n      // await this.fetchActiveSubmission(submissionTypeId, userId)\r\n      this.submissionApprovalData = result.data\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  @computed\r\n  get getSubmissionApprovalData() {\r\n    return toJS(this.submissionApprovalData)\r\n  }\r\n\r\n  // approve requirement\r\n  async approveRequirement(submissionTypeId: string | number, submissionId: string | number, submissionRequirementId: string | number) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Approve Requirement`, submissionRequirementId)\r\n      const result = await Api.submissionService.approveRequirement(submissionRequirementId)\r\n      // await this.fetchActiveSubmission(submissionTypeId, userId)\r\n      await this.fetchSubmissionApprovalRequirement(submissionTypeId, submissionId)\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // approve requirement\r\n  async rejectRequirement(submissionTypeId: string | number, submissionId: string | number, submissionRequirementId: string | number) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Reject Requirement`, submissionRequirementId)\r\n      const result = await Api.submissionService.rejectRequirement(submissionRequirementId, 'reject')\r\n      // await this.fetchActiveSubmission(submissionTypeId, userId)\r\n      await this.fetchSubmissionApprovalRequirement(submissionTypeId, submissionId)\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // fetch submission requirement\r\n  @action\r\n  async fetchSubmissionApprovalRequirement(submissionTypeId: string | number, submissionId: string | number) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Fetch Submission Requirement`, submissionTypeId, submissionId)\r\n      const result = await Api.submissionService.getSubmissionRequirement(submissionTypeId, submissionId)\r\n      // await this.fetchActiveSubmission(submissionTypeId, userId)\r\n      this.submissionApprovalRequirementData = result.data.submissionRequirements\r\n      // console.log('submission approval requirement', toJS(this.submissionApprovalRequirementData))\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  @computed\r\n  get getSubmissionApprovalRequirement() {\r\n    return toJS(this.submissionApprovalRequirementData)\r\n  }\r\n\r\n  // submit approva\r\n  async submitApprovalHelpdesk(submissionId: string) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Submit Approval`, submissionId)\r\n      const result = await Api.submissionService.submitApprovalHelpdesk(submissionId)\r\n      // await this.fetchActiveSubmission(submissionTypeId, userId)\r\n      // this.submissionApprovalRequirementData = result.data.submissionRequirements\r\n      // console.log('submission approval requirement', toJS(this.submissionApprovalRequirementData))\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // submit approva verifikator\r\n  async submitApprovalVerifikator(submissionId: string) {\r\n    try {\r\n      console.log(`[SUBMISSIONS] - Submit Approval`, submissionId)\r\n      const result = await Api.submissionService.submitApprovalVerifikator(submissionId)\r\n      // await this.fetchActiveSubmission(submissionTypeId, userId)\r\n      // this.submissionApprovalRequirementData = result.data.submissionRequirements\r\n      // console.log('submission approval requirement', toJS(this.submissionApprovalRequirementData))\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n}","import { Store } from \"store/index.store\";\r\nimport { Api } from 'service/_index.service'\r\nimport { action, computed, observable, toJS } from \"mobx\";\r\n\r\nexport class UserStore {\r\n  store: Store\r\n  // users data\r\n  @observable\r\n  usersData = []\r\n\r\n  constructor(store: any) {\r\n    this.store = store\r\n  }\r\n\r\n  // fetch users\r\n  @action\r\n  async fetchUsers() {\r\n    try {\r\n      console.log(`[USERS] - Fetch Users`)\r\n      const result = await Api.userService.getUsers()\r\n      this.usersData = result.data\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // get users\r\n  @computed\r\n  get getUsers() {\r\n    return toJS(this.usersData)\r\n  }\r\n\r\n  // create user\r\n  async createUser(userData: any) {\r\n    try {\r\n      console.log(`[USERS] - Create User`, userData)\r\n      const result = await Api.userService.createUser(userData)\r\n      await this.fetchUsers()\r\n      return result.status == 200 || result.status == 201 ? true : false\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n}","import { Provider } from 'mobx-react'\r\nimport { createContext, useContext } from 'react'\r\nimport { AuthStore } from './auth.store'\r\nimport { ProviderStore } from './provider.store'\r\nimport { RoleStore } from './role.store'\r\nimport { ServiceStore } from './service.store'\r\nimport { SubmissionStore } from './submission.store'\r\nimport { UserStore } from './user.store'\r\n\r\nexport class IndexServiceStore {\r\n  // store: Store\r\n  authStore: AuthStore\r\n  roleStore: RoleStore\r\n  serviceStore: ServiceStore\r\n  userStore: UserStore\r\n  providerStore: ProviderStore\r\n  submissionStore: SubmissionStore\r\n\r\n  constructor() {\r\n    // this.store = store\r\n    this.authStore = new AuthStore(this)\r\n    this.roleStore = new RoleStore(this)\r\n    this.serviceStore = new ServiceStore(this)\r\n    this.userStore = new UserStore(this)\r\n    this.providerStore = new ProviderStore(this)\r\n    this.submissionStore = new SubmissionStore(this)\r\n  }\r\n}\r\n\r\n// create context\r\nconst context = createContext(new IndexServiceStore())\r\n// use context\r\nexport const useServiceStore = () => useContext(context)","import React, { memo, FunctionComponent, useState } from 'react'\r\nimport { Form, Button, Row, Col, Alert, Typography } from 'antd'\r\nimport { FieldInputComponent, CardComponent, FieldPasswordComponent } from 'common/component/index.component'\r\nimport { FormProvider, useForm } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from '@hookform/resolvers'\r\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons'\r\nimport { STYLE } from 'config/style.config'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useStore } from 'store/index.store'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\n\r\n// \r\ninterface Submit {\r\n  loading?: boolean\r\n  statusCode?: Number\r\n  message?: string\r\n}\r\n\r\n// form login\r\ninterface FormLogin {\r\n  email: string\r\n  password: string\r\n}\r\n\r\n// form login schema\r\nconst FormLoginSchema: yup.ObjectSchema<FormLogin> = yup.object().shape({\r\n  email: yup.string().required().email().defined(),\r\n  password: yup.string().required().defined()\r\n}).defined()\r\n\r\nconst FormLoginComponent: FunctionComponent = () => {\r\n  // use store\r\n  const { authStore } = useServiceStore()\r\n  const [isSubmit, setSubmit] = useState<Submit>()\r\n\r\n  // use form\r\n  const formLoginContext = useForm<FormLogin>({\r\n    resolver: yupResolver(FormLoginSchema),\r\n    mode: 'onChange'\r\n  })\r\n\r\n  // use history\r\n  const history = useHistory()\r\n\r\n  // login handler\r\n  const onSubmitLogin = async (loginData: FormLogin) => {\r\n    const result = await authStore.login(loginData)\r\n    console.log('result login', result)\r\n    if (result) {\r\n      history.push('/main')\r\n    }\r\n    // console.log(loginData)\r\n    // try {\r\n    //   // console.log(loginData)\r\n    //   setSubmit({ loading: true })\r\n    //   const result = await serviceStore.authStore.login(loginData)\r\n    //   setSubmit({ loading: false })\r\n    //   history.push('/main/dashboard')\r\n    //   // history.push('/main')\r\n    // } catch (error) {\r\n    //   if (!error.response) {\r\n    //     setSubmit({ loading: false, statusCode: 500, message: 'Suddenly our server is currently down' })\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...formLoginContext}>\r\n      <Form onSubmitCapture={formLoginContext.handleSubmit(onSubmitLogin)}>\r\n        <Form.Item>\r\n          <CardComponent elevation=\"e300\">\r\n            <FieldInputComponent name=\"email\" placeholder=\"Email\" prefix={<MailOutlined style={{ color: STYLE.COLOR.PRIMARY }} />} />\r\n            <FieldPasswordComponent type=\"password\" name=\"password\" placeholder=\"Password\" prefix={<LockOutlined style={{ color: STYLE.COLOR.PRIMARY }} />} />\r\n          </CardComponent>\r\n        </Form.Item>\r\n\r\n        {isSubmit?.statusCode === 500 && (\r\n          <Form.Item>\r\n            <Alert type=\"error\" message={<Typography.Text strong > {isSubmit.message} </Typography.Text>} />\r\n          </Form.Item>\r\n        )}\r\n        \r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block loading={isSubmit?.loading}\r\n          // disabled={!formLoginContext.formState.isValid}\r\n          >\r\n            LOGIN\r\n          </Button>\r\n        </Form.Item>\r\n        {/* <Divider /> */}\r\n        <Form.Item>\r\n          <Row>\r\n            <Col span={12}> <Link to=\"/auth/register\"> Belum punya akun? </Link> </Col>\r\n            <Col span={12} style={{ textAlign: 'right' }}> <Link to=\"/auth/password/forget\"> Lupa password? </Link> </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col span={24} style={{ textAlign: 'center' }}> <Link to=\"/\"> Kembali ke Home </Link> </Col>\r\n          </Row>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nexport default memo(observer(FormLoginComponent))\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { HeaderComponent } from 'common/component/index.component'\r\nimport { Typography } from 'antd'\r\nimport FormLoginComponent from './component/form-login.component'\r\n\r\nconst LoginComponent: FunctionComponent = () => {\r\n  return (\r\n    <>\r\n      <HeaderComponent title=\"Layanan Registrasi, Verifikasi, dan Konsultasi Pelaku Usaha\">\r\n        <Typography.Text strong > Lakukan login dengan email dan password untuk dapat menggunakan aplikasi </Typography.Text>\r\n      </HeaderComponent>\r\n      \r\n      <FormLoginComponent />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(LoginComponent)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport AuthComponent from '../component/auth.component'\r\nimport LoginComponent from '../component/login/login.component'\r\nimport { PageTransitionComponent } from 'common/component/index.component'\r\n\r\nconst LoginPage: FunctionComponent = () => {\r\n  return (\r\n    <AuthComponent>\r\n      <PageTransitionComponent direction=\"vertical\">\r\n        <LoginComponent />\r\n      </PageTransitionComponent>\r\n    </AuthComponent>\r\n  )\r\n}\r\n\r\nexport default memo(LoginPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ContentContainer = styled.div`\r\n  width: 345px;\r\n`\r\n\r\nconst TermsAndConditionsComponent: FunctionComponent = () => {\r\n  return (\r\n    <ContentContainer>\r\n      <p> 1. Data yang diinputkan dan file yang diupload ke dalam sistem sesuai dengan dokumen <b> ASLI </b> </p>\r\n      <p> 2. Jika data file tidak sesuai dengan dokumen <b> ASLI </b> maka <b> PENDAFTAR </b> siap menerima sanksi ditolak pendaftaran sampai dengan sanksi <b> HUKUM </b> </p>\r\n    </ContentContainer>\r\n  )\r\n}\r\n\r\nexport default memo(TermsAndConditionsComponent)\r\n","import React, { memo, FunctionComponent, useState } from 'react'\r\nimport { Form, Button, Row, Col, Checkbox, Typography, Popover, Alert, Result } from 'antd'\r\nimport { CardComponent, FieldPasswordComponent, FieldInputComponent } from 'common/component/index.component'\r\nimport { FormProvider, useForm, Controller } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers'\r\nimport * as yup from 'yup'\r\nimport { LockOutlined, UserOutlined, MailOutlined, CreditCardOutlined, QuestionCircleOutlined } from '@ant-design/icons'\r\nimport { STYLE } from 'config/style.config'\r\nimport { Link } from 'react-router-dom'\r\nimport TermsAndConditionsComponent from './terms-and-conditions.component'\r\nimport { useStore } from 'store/index.store'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\n\r\n// \r\ninterface Submit {\r\n  loading?: boolean\r\n  statusCode?: Number\r\n  message?: string\r\n}\r\n\r\n// form register\r\ninterface FormRegister {\r\n  name: string\r\n  npwp: string\r\n  email: string\r\n  password: string\r\n  confirmPassword: string\r\n  isAgree: boolean\r\n}\r\n\r\n// default value\r\nconst FormRegisterDefaultValue: FormRegister = {\r\n  name: '',\r\n  npwp: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  isAgree: false,\r\n}\r\n\r\n// form register schema\r\nconst FormRegisterSchema: yup.ObjectSchema<FormRegister> = yup.object().shape({\r\n  name: yup.string().trim().required().defined(),\r\n  npwp: yup.string().trim().required().matches(/^[0-9]+$/, 'Must be a number').min(15).max(15).defined(),\r\n  email: yup.string().trim().required().email().defined(),\r\n  password: yup.string().trim().required().defined(),\r\n  confirmPassword: yup.string().trim().required().oneOf([yup.ref('password')], 'Password do not match').defined(),\r\n  isAgree: yup.boolean().required().oneOf([true]).defined()\r\n}).defined()\r\n\r\nconst FormRegisterComponent: FunctionComponent = () => {\r\n  // use store\r\n  const { providerStore } = useServiceStore()\r\n\r\n  const [isSubmit, setSubmit] = useState<Submit>({\r\n    loading: false,\r\n    statusCode: 0,\r\n    message: ''\r\n  })\r\n\r\n  // use form\r\n  const formRegisterContext = useForm<FormRegister>({\r\n    resolver: yupResolver(FormRegisterSchema),\r\n    mode: 'onChange',\r\n    defaultValues: FormRegisterDefaultValue\r\n  })\r\n\r\n  // register handler\r\n  const onSubmitRegister = async (registerData: FormRegister) => {\r\n    setSubmit({ loading: true })\r\n    const result = await providerStore.registerProvider(registerData)\r\n    if (result) {\r\n      formRegisterContext.reset(FormRegisterDefaultValue)\r\n      setSubmit({ loading: false, statusCode: 201, message: 'Register success, silahkan lakukan login' })\r\n    } else {\r\n      setSubmit({ loading: false, statusCode: 500, message: 'Register gagal' })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...formRegisterContext}>\r\n      <Form onSubmitCapture={formRegisterContext.handleSubmit(onSubmitRegister)}>\r\n        <Form.Item>\r\n          <CardComponent elevation=\"e300\">\r\n            <FieldInputComponent name=\"name\" placeholder=\"Nama Perusahaan\" prefix={<UserOutlined style={{ color: STYLE.COLOR.PRIMARY }} />} />\r\n            <FieldInputComponent name=\"npwp\" placeholder=\"NPWP Perusahaan\" prefix={<CreditCardOutlined style={{ color: STYLE.COLOR.PRIMARY }} />} />\r\n            <FieldInputComponent name=\"email\" placeholder=\"Email\" prefix={<MailOutlined style={{ color: STYLE.COLOR.PRIMARY }} />} />\r\n            <FieldPasswordComponent name=\"password\" placeholder=\"New Password\" prefix={<LockOutlined style={{ color: STYLE.COLOR.PRIMARY }} />} onChange={() => console.log('test')} />\r\n            <FieldPasswordComponent name=\"confirmPassword\" placeholder=\"Confirm New Password\" prefix={<LockOutlined style={{ color: STYLE.COLOR.PRIMARY }} />} />\r\n            <Form.Item\r\n              validateStatus={formRegisterContext.errors?.isAgree?.message && 'error'}\r\n              help={formRegisterContext.errors?.isAgree?.message}\r\n            >\r\n              <Controller\r\n                name=\"isAgree\"\r\n                control={formRegisterContext.control}\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Popover content={<TermsAndConditionsComponent />} title=\"Syarat dan Ketentuan\" trigger=\"hover\" style={{ textAlign: 'left' }}>\r\n                    <Checkbox onChange={e => { onChange(e.target.checked) }} checked={value}> <Typography.Text strong > Saya setuju dengan persyaratan yang berlaku </Typography.Text> <QuestionCircleOutlined /> </Checkbox>\r\n                  </Popover>\r\n                )}\r\n              />\r\n            </Form.Item>\r\n          </CardComponent>\r\n        </Form.Item>\r\n\r\n        {/* show alert register */}\r\n        {isSubmit?.statusCode === 201 && (\r\n          <Form.Item>\r\n            <Alert type=\"success\" message={<Typography.Text strong > {isSubmit?.message} </Typography.Text>} />\r\n          </Form.Item>\r\n        )}\r\n        {isSubmit?.statusCode == 500 && (\r\n          <Form.Item>\r\n            <Alert type=\"error\" message={<Typography.Text strong > {isSubmit?.message} </Typography.Text>} />\r\n          </Form.Item>\r\n        )}\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block loading={isSubmit.loading}>\r\n            REGISTER\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Row>\r\n            <Col span={24} style={{ textAlign: 'center' }}> <Link to=\"/auth/login\"> Sudah punya akun? </Link> </Col>\r\n            {/* <Col span={12} style={{ textAlign: 'right' }}>  <Link to=\"/password/forget\"> Lupa Password? </Link> </Col> */}\r\n          </Row>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nexport default memo(observer(FormRegisterComponent))\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { HeaderComponent } from 'common/component/index.component'\r\nimport { Typography, Form, Alert } from 'antd'\r\nimport FormRegisterComponent from './component/form-register.component'\r\n\r\nconst RegisterComponent: FunctionComponent = () => {\r\n  return (\r\n    <>\r\n      <HeaderComponent title=\"Pendaftaran Penyedia\">\r\n        <Typography.Text strong > Lakukan pendaftaran jika belum mempunyai akun </Typography.Text>\r\n      </HeaderComponent>\r\n\r\n      <Form.Item>\r\n        <Alert type=\"warning\" message={<Typography.Text strong >Pastikan data yang didaftarkan adalah data yang sama dengan akun LPSE</Typography.Text>} />\r\n      </Form.Item>\r\n\r\n      <FormRegisterComponent />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(RegisterComponent)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport AuthComponent from '../component/auth.component'\r\nimport { PageTransitionComponent } from 'common/component/index.component'\r\nimport RegisterComponent from '../component/register/register.component'\r\n\r\nconst RegisterPage: FunctionComponent = () => {\r\n  return (\r\n    <AuthComponent>\r\n      <PageTransitionComponent direction=\"vertical\">\r\n        <RegisterComponent />\r\n      </PageTransitionComponent>\r\n    </AuthComponent>\r\n  )\r\n}\r\n\r\nexport default memo(RegisterPage)\r\n","import React, { memo, FunctionComponent, ReactNode } from 'react'\r\nimport { Tooltip, Button } from 'antd'\r\n\r\ninterface SiderIconItemComponentProps {\r\n  tooltip?: string\r\n  icon: ReactNode\r\n  onClick?: () => void\r\n}\r\n\r\nexport interface SiderIconItem extends SiderIconItemComponentProps { }\r\n\r\nconst SiderIconItemComponent: FunctionComponent<SiderIconItemComponentProps> = ({\r\n  tooltip,\r\n  icon,\r\n  onClick\r\n}) => {\r\n  return (\r\n    <Tooltip title={tooltip} placement=\"right\">\r\n      <Button type=\"primary\" icon={icon} onClick={onClick} />\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default memo(SiderIconItemComponent)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport SiderIconItemComponent, { SiderIconItem } from './sider-icon-item.component'\r\nimport { AntDesignOutlined, LogoutOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Space } from 'antd'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\n\r\nconst SiderIconComponent: FunctionComponent = () => {\r\n  // use history\r\n  const history = useHistory()\r\n\r\n  // use service store\r\n  const { authStore } = useServiceStore()\r\n\r\n  const SiderIconItems: SiderIconItem[] = [\r\n    {\r\n      icon: <AntDesignOutlined />\r\n    },\r\n    {\r\n      tooltip: 'Logout',\r\n      icon: <LogoutOutlined />,\r\n      onClick: () => {\r\n        authStore.logout()\r\n        history.push('/')\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Space direction=\"vertical\" size={10}>\r\n      {SiderIconItems.map((item, index) => <SiderIconItemComponent key={index} tooltip={item.tooltip} icon={item.icon} onClick={item.onClick} />)}\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default memo(observer(SiderIconComponent))\r\n","import React, { memo, FunctionComponent, useState, useEffect } from 'react'\r\nimport { Menu as AntMenu } from 'antd'\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined, UserOutlined, TeamOutlined, SnippetsOutlined, AppstoreAddOutlined, ApartmentOutlined, AuditOutlined } from '@ant-design/icons'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\n\r\nconst { SubMenu } = AntMenu\r\n\r\nconst Menu = styled(AntMenu)`\r\n  /* height: 60px; */\r\n  border: 0;\r\n`\r\n\r\nconst MenuAdminComponent: FunctionComponent = () => {\r\n  // use state\r\n  // const [submissionType, setSubmissionType] = useState([])\r\n\r\n  // use history \r\n  const history = useHistory()\r\n\r\n  // use service store\r\n  const { submissionStore } = useServiceStore()\r\n\r\n  // change menu\r\n  const changeMenu = (path: string) => history.push(path)\r\n\r\n  // set submission type menu\r\n  const setSubmissionTypeMenu = (typeName: string, path: string) => {\r\n    submissionStore.setActiveSubmissionMenu(typeName)\r\n    changeMenu(path)\r\n  }\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    submissionStore.fetchSubmissionTypes()\r\n  }, [])\r\n\r\n  // // ini submission type menu\r\n  // const initSubmissionTypeMenu = async () => {\r\n  //   const result\r\n  // }\r\n\r\n\r\n  return (\r\n    <motion.div exit=\"out\">\r\n\r\n      <Menu mode=\"inline\" >\r\n        {/* <Menu.Item key=\"mail\" icon={<MailOutlined />}>\r\n        Navigation One\r\n      </Menu.Item>\r\n      <Menu.Item key=\"app\" disabled icon={<AppstoreOutlined />}>\r\n        Navigation Two\r\n      </Menu.Item>\r\n      <SubMenu icon={<SettingOutlined />} title=\"Navigation Three - Submenu\">\r\n        <Menu.ItemGroup title=\"Item 1\">\r\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n          <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n        </Menu.ItemGroup>\r\n        <Menu.ItemGroup title=\"Item 2\">\r\n          <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n          <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n        </Menu.ItemGroup>\r\n      </SubMenu> */}\r\n        <Menu.Item icon={<UserOutlined />} key=\"user:1\" onClick={() => changeMenu('/main/user')}> User </Menu.Item>\r\n        <Menu.Item icon={<ApartmentOutlined />} key=\"role:1\" onClick={() => changeMenu('/main/role')}> Role </Menu.Item>\r\n        <Menu.Item icon={<TeamOutlined />} key=\"provider:1\" onClick={() => changeMenu('/main/provider')}> Penyedia </Menu.Item>\r\n        <Menu.Item icon={<AppstoreAddOutlined />} key=\"service:1\" onClick={() => changeMenu('/main/service')}> Layanan </Menu.Item>\r\n        <Menu.Item icon={<AuditOutlined />} key=\"pengajuan:1\" onClick={() => changeMenu('/main/submission/type')}> Setting Pengajuan </Menu.Item>\r\n        <SubMenu icon={<SnippetsOutlined />} title=\"Registrasi dan Verifikasi\">\r\n          {/* <Menu.Item key=\"registrasi:1\" onClick={() => changeMenu('/main/account')}> Pembuatan Akun Baru </Menu.Item>\r\n          <Menu.Item key=\"registrasi:2\" onClick={() => changeMenu('/main/change-email')}> Ganti Email </Menu.Item>\r\n          <Menu.Item key=\"registrasi:3\" onClick={() => changeMenu('/main/change-data')}> Ubah Data </Menu.Item> */}\r\n          {submissionStore.getSubmissionTypes.map((item: any, index) => (\r\n            <Menu.Item key={`registrasi:${index}`} onClick={() => setSubmissionTypeMenu(item.name, `/main/submission/${item?.id}`)}> {item?.name}</Menu.Item>\r\n          ))}\r\n        </SubMenu>\r\n        <SubMenu icon={<SnippetsOutlined />} title=\"Approval Registrasi dan Verifikasi\">\r\n          {/* <Menu.Item key=\"registrasi:1\" onClick={() => changeMenu('/main/account')}> Pembuatan Akun Baru </Menu.Item>\r\n          <Menu.Item key=\"registrasi:2\" onClick={() => changeMenu('/main/change-email')}> Ganti Email </Menu.Item>\r\n          <Menu.Item key=\"registrasi:3\" onClick={() => changeMenu('/main/change-data')}> Ubah Data </Menu.Item> */}\r\n          {submissionStore.getSubmissionTypes.map((item: any, index) => (\r\n            <Menu.Item key={`verifikasiregistrasi:${index}`} onClick={() => setSubmissionTypeMenu(item.name, `/main/submission/verification/${item?.id}`)}> {item?.name}</Menu.Item>\r\n          ))}\r\n        </SubMenu>\r\n        {/* <SubMenu icon={<SnippetsOutlined />} title=\"Konsultasi\">\r\n          <Menu.Item key=\"konsultasi:1\" onClick={() => changeMenu('/main/consultation/online')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"konsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu icon={<SnippetsOutlined />} title=\"Approval Konsultasi\">\r\n          <Menu.Item key=\"konsultasi:1\" onClick={() => changeMenu('/main/consultation/online')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"konsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu> */}\r\n        {/* <SubMenu icon={<SnippetsOutlined />} title=\"Verifikasi Layanan\">\r\n          <Menu.Item key=\"verregistrasi:1\" onClick={() => changeMenu('/main/account/verification')}> Pembuatan Akun Baru </Menu.Item>\r\n          <Menu.Item key=\"verregistrasi:2\" onClick={() => changeMenu('/main/change-email/verification')}> Ganti Email </Menu.Item>\r\n          <Menu.Item key=\"verregistrasi:3\" onClick={() => changeMenu('/main/change-data/verification')}> Ubah Data </Menu.Item>\r\n          <Menu.Item key=\"verkonsultasi:1\" onClick={() => changeMenu('/main/consultation/online/verification')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"verkonsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf/verification')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu> */}\r\n      </Menu >\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default memo(observer(MenuAdminComponent))\r\n","import React, { memo, FunctionComponent, useState, useEffect } from 'react'\r\nimport { Menu as AntMenu } from 'antd'\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined, UserOutlined, TeamOutlined, SnippetsOutlined, AppstoreAddOutlined, ApartmentOutlined, AuditOutlined } from '@ant-design/icons'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\n\r\nconst { SubMenu } = AntMenu\r\n\r\nconst Menu = styled(AntMenu)`\r\n  /* height: 60px; */\r\n  border: 0;\r\n`\r\n\r\nconst MenuHelpdeskComponent: FunctionComponent = () => {\r\n  // use state\r\n  // const [submissionType, setSubmissionType] = useState([])\r\n\r\n  // use history \r\n  const history = useHistory()\r\n\r\n  // use service store\r\n  const { submissionStore } = useServiceStore()\r\n\r\n  // change menu\r\n  const changeMenu = (path: string) => history.push(path)\r\n\r\n  // set submission type menu\r\n  const setSubmissionTypeMenu = (typeName: string, path: string) => {\r\n    submissionStore.setActiveSubmissionMenu(typeName)\r\n    changeMenu(path)\r\n  }\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    submissionStore.fetchSubmissionTypes()\r\n  }, [])\r\n\r\n  // // ini submission type menu\r\n  // const initSubmissionTypeMenu = async () => {\r\n  //   const result\r\n  // }\r\n\r\n  return (\r\n    <motion.div exit=\"out\">\r\n      <Menu mode=\"inline\" >\r\n        {/* <Menu.Item key=\"mail\" icon={<MailOutlined />}>\r\n        Navigation One\r\n      </Menu.Item>\r\n      <Menu.Item key=\"app\" disabled icon={<AppstoreOutlined />}>\r\n        Navigation Two\r\n      </Menu.Item>\r\n      <SubMenu icon={<SettingOutlined />} title=\"Navigation Three - Submenu\">\r\n        <Menu.ItemGroup title=\"Item 1\">\r\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n          <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n        </Menu.ItemGroup>\r\n        <Menu.ItemGroup title=\"Item 2\">\r\n          <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n          <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n        </Menu.ItemGroup>\r\n      </SubMenu> */}\r\n        <SubMenu icon={<SnippetsOutlined />} title=\"Approval Registrasi dan Verifikasi\">\r\n          {/* <Menu.Item key=\"registrasi:1\" onClick={() => changeMenu('/main/account')}> Pembuatan Akun Baru </Menu.Item>\r\n          <Menu.Item key=\"registrasi:2\" onClick={() => changeMenu('/main/change-email')}> Ganti Email </Menu.Item>\r\n          <Menu.Item key=\"registrasi:3\" onClick={() => changeMenu('/main/change-data')}> Ubah Data </Menu.Item> */}\r\n          {submissionStore.getSubmissionTypes.map((item: any, index) => (\r\n            <Menu.Item key={`verifikasiregistrasi:${index}`} onClick={() => setSubmissionTypeMenu(item.name, `/main/submission/verification/${item?.id}`)}> {item?.name}</Menu.Item>\r\n          ))}\r\n        </SubMenu>\r\n        {/* <SubMenu icon={<SnippetsOutlined />} title=\"Konsultasi\">\r\n          <Menu.Item key=\"konsultasi:1\" onClick={() => changeMenu('/main/consultation/online')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"konsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu icon={<SnippetsOutlined />} title=\"Approval Konsultasi\">\r\n          <Menu.Item key=\"konsultasi:1\" onClick={() => changeMenu('/main/consultation/online')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"konsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu> */}\r\n        {/* <SubMenu icon={<SnippetsOutlined />} title=\"Verifikasi Layanan\">\r\n          <Menu.Item key=\"verregistrasi:1\" onClick={() => changeMenu('/main/account/verification')}> Pembuatan Akun Baru </Menu.Item>\r\n          <Menu.Item key=\"verregistrasi:2\" onClick={() => changeMenu('/main/change-email/verification')}> Ganti Email </Menu.Item>\r\n          <Menu.Item key=\"verregistrasi:3\" onClick={() => changeMenu('/main/change-data/verification')}> Ubah Data </Menu.Item>\r\n          <Menu.Item key=\"verkonsultasi:1\" onClick={() => changeMenu('/main/consultation/online/verification')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"verkonsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf/verification')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu> */}\r\n      </Menu >\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default memo(observer(MenuHelpdeskComponent))\r\n","import React, { memo, FunctionComponent, useState, useEffect } from 'react'\r\nimport { Menu as AntMenu } from 'antd'\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined, UserOutlined, TeamOutlined, SnippetsOutlined, AppstoreAddOutlined, ApartmentOutlined, AuditOutlined } from '@ant-design/icons'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\n\r\nconst { SubMenu } = AntMenu\r\n\r\nconst Menu = styled(AntMenu)`\r\n  /* height: 60px; */\r\n  border: 0;\r\n`\r\n\r\nconst MenuVerifikatorComponent: FunctionComponent = () => {\r\n   // use state\r\n  // const [submissionType, setSubmissionType] = useState([])\r\n\r\n  // use history \r\n  const history = useHistory()\r\n\r\n  // use service store\r\n  const { submissionStore } = useServiceStore()\r\n\r\n  // change menu\r\n  const changeMenu = (path: string) => history.push(path)\r\n\r\n  // set submission type menu\r\n  const setSubmissionTypeMenu = (typeName: string, path: string) => {\r\n    submissionStore.setActiveSubmissionMenu(typeName)\r\n    changeMenu(path)\r\n  }\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    submissionStore.fetchSubmissionTypes()\r\n  }, [])\r\n\r\n  // // ini submission type menu\r\n  // const initSubmissionTypeMenu = async () => {\r\n  //   const result\r\n  // }\r\n\r\n  return (\r\n    <motion.div exit=\"out\">\r\n      <Menu mode=\"inline\" >\r\n        {/* <Menu.Item key=\"mail\" icon={<MailOutlined />}>\r\n        Navigation One\r\n      </Menu.Item>\r\n      <Menu.Item key=\"app\" disabled icon={<AppstoreOutlined />}>\r\n        Navigation Two\r\n      </Menu.Item>\r\n      <SubMenu icon={<SettingOutlined />} title=\"Navigation Three - Submenu\">\r\n        <Menu.ItemGroup title=\"Item 1\">\r\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n          <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n        </Menu.ItemGroup>\r\n        <Menu.ItemGroup title=\"Item 2\">\r\n          <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n          <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n        </Menu.ItemGroup>\r\n      </SubMenu> */}\r\n        <SubMenu icon={<SnippetsOutlined />} title=\"Approval Registrasi dan Verifikasi\">\r\n          {/* <Menu.Item key=\"registrasi:1\" onClick={() => changeMenu('/main/account')}> Pembuatan Akun Baru </Menu.Item>\r\n          <Menu.Item key=\"registrasi:2\" onClick={() => changeMenu('/main/change-email')}> Ganti Email </Menu.Item>\r\n          <Menu.Item key=\"registrasi:3\" onClick={() => changeMenu('/main/change-data')}> Ubah Data </Menu.Item> */}\r\n          {submissionStore.getSubmissionTypes.map((item: any, index) => (\r\n            <Menu.Item key={`verifikasiregistrasi:${index}`} onClick={() => setSubmissionTypeMenu(item.name, `/main/submission/verification/${item?.id}`)}> {item?.name}</Menu.Item>\r\n          ))}\r\n        </SubMenu>\r\n        {/* <SubMenu icon={<SnippetsOutlined />} title=\"Konsultasi\">\r\n          <Menu.Item key=\"konsultasi:1\" onClick={() => changeMenu('/main/consultation/online')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"konsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu icon={<SnippetsOutlined />} title=\"Approval Konsultasi\">\r\n          <Menu.Item key=\"konsultasi:1\" onClick={() => changeMenu('/main/consultation/online')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"konsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu> */}\r\n        {/* <SubMenu icon={<SnippetsOutlined />} title=\"Verifikasi Layanan\">\r\n          <Menu.Item key=\"verregistrasi:1\" onClick={() => changeMenu('/main/account/verification')}> Pembuatan Akun Baru </Menu.Item>\r\n          <Menu.Item key=\"verregistrasi:2\" onClick={() => changeMenu('/main/change-email/verification')}> Ganti Email </Menu.Item>\r\n          <Menu.Item key=\"verregistrasi:3\" onClick={() => changeMenu('/main/change-data/verification')}> Ubah Data </Menu.Item>\r\n          <Menu.Item key=\"verkonsultasi:1\" onClick={() => changeMenu('/main/consultation/online/verification')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"verkonsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf/verification')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu> */}\r\n      </Menu >\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default memo(observer(MenuVerifikatorComponent))\r\n","import React, { memo, FunctionComponent, useState, useEffect } from 'react'\r\nimport { Menu as AntMenu } from 'antd'\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined, UserOutlined, TeamOutlined, SnippetsOutlined, AppstoreAddOutlined, ApartmentOutlined, AuditOutlined } from '@ant-design/icons'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\n\r\nconst { SubMenu } = AntMenu\r\n\r\nconst Menu = styled(AntMenu)`\r\n  /* height: 60px; */\r\n  border: 0;\r\n`\r\n\r\nconst MenuProviderComponent: FunctionComponent = () => {\r\n  // use state\r\n  // const [submissionType, setSubmissionType] = useState([])\r\n\r\n  // use history \r\n  const history = useHistory()\r\n\r\n  // use service store\r\n  const { submissionStore } = useServiceStore()\r\n\r\n  // change menu\r\n  const changeMenu = (path: string) => history.push(path)\r\n\r\n  // set submission type menu\r\n  const setSubmissionTypeMenu = (typeName: string, path: string) => {\r\n    submissionStore.setActiveSubmissionMenu(typeName)\r\n    changeMenu(path)\r\n  }\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    submissionStore.fetchSubmissionTypes()\r\n  }, [])\r\n\r\n  // // ini submission type menu\r\n  // const initSubmissionTypeMenu = async () => {\r\n  //   const result\r\n  // }\r\n\r\n\r\n  return (\r\n    <motion.div exit=\"out\">\r\n\r\n      <Menu mode=\"inline\" >\r\n        {/* <Menu.Item key=\"mail\" icon={<MailOutlined />}>\r\n        Navigation One\r\n      </Menu.Item>\r\n      <Menu.Item key=\"app\" disabled icon={<AppstoreOutlined />}>\r\n        Navigation Two\r\n      </Menu.Item>\r\n      <SubMenu icon={<SettingOutlined />} title=\"Navigation Three - Submenu\">\r\n        <Menu.ItemGroup title=\"Item 1\">\r\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n          <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n        </Menu.ItemGroup>\r\n        <Menu.ItemGroup title=\"Item 2\">\r\n          <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n          <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n        </Menu.ItemGroup>\r\n      </SubMenu> */}\r\n        {/* <Menu.Item icon={<UserOutlined />} key=\"user:1\" onClick={() => changeMenu('/main/user')}> User </Menu.Item>\r\n        <Menu.Item icon={<ApartmentOutlined />} key=\"role:1\" onClick={() => changeMenu('/main/role')}> Role </Menu.Item>\r\n        <Menu.Item icon={<TeamOutlined />} key=\"provider:1\" onClick={() => changeMenu('/main/provider')}> Penyedia </Menu.Item>\r\n        <Menu.Item icon={<AppstoreAddOutlined />} key=\"service:1\" onClick={() => changeMenu('/main/service')}> Layanan </Menu.Item>\r\n        <Menu.Item icon={<AuditOutlined />} key=\"pengajuan:1\" onClick={() => changeMenu('/main/submission/type')}> Setting Pengajuan </Menu.Item> */}\r\n        <SubMenu icon={<SnippetsOutlined />} title=\"Registrasi dan Verifikasi\">\r\n          {/* <Menu.Item key=\"registrasi:1\" onClick={() => changeMenu('/main/account')}> Pembuatan Akun Baru </Menu.Item>\r\n          <Menu.Item key=\"registrasi:2\" onClick={() => changeMenu('/main/change-email')}> Ganti Email </Menu.Item>\r\n          <Menu.Item key=\"registrasi:3\" onClick={() => changeMenu('/main/change-data')}> Ubah Data </Menu.Item> */}\r\n          {submissionStore.getSubmissionTypes.map((item: any, index) => (\r\n            <Menu.Item key={`registrasi:${index}`} onClick={() => setSubmissionTypeMenu(item.name, `/main/submission/${item?.id}`)}> {item?.name}</Menu.Item>\r\n          ))}\r\n        </SubMenu>\r\n        {/* <SubMenu icon={<SnippetsOutlined />} title=\"Konsultasi\">\r\n          <Menu.Item key=\"konsultasi:1\" onClick={() => changeMenu('/main/consultation/online')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"konsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu icon={<SnippetsOutlined />} title=\"Approval Konsultasi\">\r\n          <Menu.Item key=\"konsultasi:1\" onClick={() => changeMenu('/main/consultation/online')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"konsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu> */}\r\n        {/* <SubMenu icon={<SnippetsOutlined />} title=\"Verifikasi Layanan\">\r\n          <Menu.Item key=\"verregistrasi:1\" onClick={() => changeMenu('/main/account/verification')}> Pembuatan Akun Baru </Menu.Item>\r\n          <Menu.Item key=\"verregistrasi:2\" onClick={() => changeMenu('/main/change-email/verification')}> Ganti Email </Menu.Item>\r\n          <Menu.Item key=\"verregistrasi:3\" onClick={() => changeMenu('/main/change-data/verification')}> Ubah Data </Menu.Item>\r\n          <Menu.Item key=\"verkonsultasi:1\" onClick={() => changeMenu('/main/consultation/online/verification')}> Konsultasi Online </Menu.Item>\r\n          <Menu.Item key=\"verkonsultasi:2\" onClick={() => changeMenu('/main/consultation/ftf/verification')}> Konsultasi Tatap Muka </Menu.Item>\r\n        </SubMenu> */}\r\n      </Menu >\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default memo(observer(MenuProviderComponent))\r\n","import React, { memo, FunctionComponent, useState, useEffect } from 'react'\r\nimport { Layout as AntLayout, Typography, Row, Col, Space, Card, Divider, Form, Button, Tooltip } from 'antd'\r\nimport styled from 'styled-components'\r\nimport MenuComponent from '../component/main/component/menu.component'\r\nimport ButtonLoginComponent from '../component/main/component/button-login.component'\r\nimport ButtonRegisterComponent from '../component/main/component/button-register.component'\r\nimport { HeaderComponent, CardComponent, PageTransitionComponent } from 'common/component/index.component'\r\nimport { RouteConfigComponentProps, renderRoutes } from 'react-router-config'\r\nimport { STYLE } from 'config/index.config'\r\nimport { LogoutOutlined } from '@ant-design/icons'\r\nimport SiderIconComponent from '../component/main/component/sider-icon.component'\r\nimport { motion } from 'framer-motion'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\nimport MenuAdminComponent from '../component/main/component/menu-admin.component'\r\nimport MenuHelpdeskComponent from '../component/main/component/menu-helpdesk.component'\r\nimport MenuVerifikatorComponent from '../component/main/component/menu-verifikator.component'\r\nimport MenuProviderComponent from '../component/main/component/menu-provider.component'\r\n\r\nconst { Sider: AntSider, Header: AntHeader, Content: AntContent, Footer: AntFooter } = AntLayout\r\n\r\nconst SiderWidth = 250\r\nconst SiderIconWidth = 50\r\n\r\n// const Sider = styled(AntSider)`\r\n//   overflow: auto;\r\n//   /* width: ${SiderWidth}px; */\r\n//   height: 100vh;\r\n//   position: fixed;\r\n//   top: 0;\r\n//   left: 0;\r\n//   bottom: 0;\r\n//   /* background: #edf1f5; */\r\n//   background: white;\r\n//   padding: 8px 24px 24px 24px;\r\n// `\r\n\r\n// const Header = styled(AntHeader)`\r\n//   width: 100%;\r\n//   /* height: 50px; */\r\n//   /* position: fixed; */\r\n//   /* top: 0; */\r\n//   /* left: 0; */\r\n//   background: #edf1f5;\r\n//   padding: 0 24px;\r\n//   /* margin-left: ${SiderWidth}px; */\r\n//   /* box-shadow: rgba(9, 30, 66, 0.25) 0px 8px 16px -4px, rgba(9, 30, 66, 0.31) 0px 0px 1px; */\r\n// `\r\n\r\nconst Content = styled(AntContent)`\r\n  /* margin-top: 65px; */\r\n  padding: 24px 50px;\r\n`\r\n// const Content = styled(AntContent)`\r\n//   padding: 8px 24px 24px 24px;\r\n//   /* margin-top: 65px; */\r\n// `\r\n\r\n// const Footer = styled(AntFooter)`\r\n//   text-align: center;\r\n// `\r\n\r\nconst SiderIcon = styled(AntSider)`\r\n  overflow: auto;\r\n  /* width: ${SiderIconWidth}px; */\r\n  height: 100vh;\r\n  background-color: ${STYLE.COLOR.PRIMARY};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  padding: 15px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst SiderMenu = styled(AntSider)`\r\n  height: 100vh;\r\n  padding: 15px;\r\n  background-color: white;\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 14px;\r\n  position: fixed;\r\n  overflow: auto;\r\n  top: 0;\r\n  bottom: 0;\r\n`\r\n\r\nconst SiderMenuAnimationVariants = {\r\n  hidden: {\r\n    x: -24,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    x: 0,\r\n    opacity: 1,\r\n    transition: {\r\n      easings: \"easeInOut\",\r\n      duration: 0.3\r\n    }\r\n  },\r\n  exit: {\r\n    x: -24,\r\n    opacity: 0,\r\n    transition: {\r\n      easings: \"easeInOut\",\r\n      duration: 0.1\r\n    }\r\n  }\r\n}\r\n\r\nconst MainPage: FunctionComponent<RouteConfigComponentProps> = (props) => {\r\n\r\n  // use service store\r\n  const { authStore } = useServiceStore()\r\n\r\n  const [user, setUser] = useState<any>()\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    init()\r\n  }, [])\r\n\r\n  const init = async () => {\r\n    const user = `${await authStore.getUser()}`\r\n    const parse = JSON.parse(user)\r\n    setUser(parse)\r\n    console.log(parse)\r\n  }\r\n\r\n  return (\r\n    // <AntLayout>\r\n    //   <Sider width={SiderWidth}>\r\n    //     <HeaderComponent title=\"Layanan Registrasi, Verifikasi, dan Konsultasi Pelaku Usaha\" />\r\n    //     <MenuComponent />\r\n    //   </Sider>\r\n    //   <AntLayout\r\n    //     style={{ marginLeft: SiderWidth }}\r\n    //   >\r\n    //     <Header>\r\n    //       <Row>\r\n    //         <Col span={12}>\r\n    //           <Typography.Text strong> PT Kereta Api Indonesia Persero Test Test </Typography.Text>\r\n    //           <Divider type=\"vertical\" style={{ borderColor: STYLE.COLOR.PRIMARY }} />\r\n    //           <Typography.Text> 10.10.10.10.10.I.10 </Typography.Text>\r\n    //         </Col>\r\n    //         <Col span={12} style={{ textAlign: \"right\" }}>\r\n    //           <Tooltip title=\"Logout\" placement=\"bottomLeft\">\r\n    //             <Button shape=\"circle-outline\" icon={<LogoutOutlined />} type=\"default\" />\r\n    //           </Tooltip>\r\n    //         </Col>\r\n    //       </Row>\r\n    //     </Header>\r\n    //     <Content>\r\n    //       {renderRoutes(props.route?.routes)}\r\n    //     </Content>\r\n    //   </AntLayout>\r\n    // </AntLayout>\r\n    // <AntLayout>\r\n    //   <Header>\r\n    //     <Row>\r\n    //       <Col span={12}>\r\n    //         <MenuComponent />\r\n    //       </Col>\r\n    //       <Col span={12} style={{ textAlign: \"right\" }}>\r\n    //         <Space direction=\"horizontal\" size={15}>\r\n    //           <ButtonLoginComponent />\r\n    //           <ButtonRegisterComponent />\r\n    //         </Space>\r\n    //       </Col>\r\n    //     </Row>\r\n    //   </Header>\r\n    //   <Content>Content</Content>\r\n    //   <Footer>\r\n    //     <Typography.Text strong> Layanan Registrasi, Verifikasi, dan Konsultasi Pelaku Usaha </Typography.Text>\r\n    //   </Footer>\r\n    // </AntLayout>\r\n    <AntLayout>\r\n      <SiderIcon width={SiderIconWidth}>\r\n        <SiderIconComponent />\r\n      </SiderIcon>\r\n      <AntLayout style={{ marginLeft: SiderIconWidth }}>\r\n        <AntContent>\r\n          <AntLayout>\r\n            <SiderMenu width={SiderWidth}>\r\n              <motion.div\r\n                variants={SiderMenuAnimationVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n              >\r\n                <div>\r\n                  <Card style={{ backgroundColor: STYLE.COLOR.GRAY }} bodyStyle={{ padding: 15 }} hoverable>\r\n                    <Typography.Text strong> {user?.info?.name} </Typography.Text>\r\n                    {/* <Divider type=\"vertical\" style={{ borderColor: STYLE.COLOR.PRIMARY }} /> */}\r\n                    {/* <Typography.Text> 10.10.10.10.10.I.10 </Typography.Text> */}\r\n                  </Card>\r\n                  {user?.role?.name == 'Admin' && <MenuAdminComponent />}\r\n                  {user?.role?.name == 'Helpdesk' && <MenuHelpdeskComponent />}\r\n                  {user?.role?.name == 'Verifikator' && <MenuVerifikatorComponent />}\r\n                  {user?.role?.name == 'Provider' && <MenuProviderComponent />}\r\n                </div>\r\n              </motion.div>\r\n\r\n            </SiderMenu>\r\n            <AntLayout style={{ marginLeft: SiderWidth }}>\r\n              <Content>\r\n                {renderRoutes(props.route?.routes)}\r\n              </Content>\r\n            </AntLayout>\r\n          </AntLayout>\r\n        </AntContent>\r\n      </AntLayout>\r\n    </AntLayout>\r\n  )\r\n}\r\n\r\nexport default memo(observer(MainPage))\r\n","import React, { memo, FunctionComponent, ReactNode } from 'react'\r\nimport { Modal } from 'antd'\r\nimport { ModalProps } from 'antd/lib/modal'\r\nimport { observable, action, computed } from 'mobx'\r\n\r\n// store \r\nexport class ModalStore {\r\n  @observable show: boolean = false\r\n  @observable data: any\r\n\r\n  @action\r\n  open(data?: any) {\r\n    this.show = true\r\n    this.data = data\r\n  }\r\n\r\n  @action\r\n  close() {\r\n    this.show = false\r\n  }\r\n\r\n  @computed\r\n  get isOpen() {\r\n    return this.show\r\n  }\r\n\r\n  @computed\r\n  get getData() {\r\n    return this.data\r\n  }\r\n}\r\n\r\ninterface ModalComponentProps extends ModalProps {\r\n  children?: string | ReactNode\r\n}\r\n\r\nconst ModalComponent: FunctionComponent<ModalComponentProps> = (props) => {\r\n  return (\r\n    <Modal {...props} destroyOnClose={true}>\r\n      {props.children}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default memo(ModalComponent)","import React, { memo, FunctionComponent, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Checkbox, Typography, Popover, Select, Input } from 'antd'\r\nimport { CardComponent, FieldPasswordComponent, FieldInputComponent } from 'common/component/index.component'\r\nimport { FormProvider, useForm, Controller } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers'\r\nimport * as yup from 'yup'\r\nimport { LockOutlined, UserOutlined, MailOutlined, CreditCardOutlined, QuestionCircleOutlined } from '@ant-design/icons'\r\nimport { STYLE } from 'config/style.config'\r\nimport { Link } from 'react-router-dom'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\nimport { useModalFormUser } from './modal-form-user.component'\r\nimport { observer } from 'mobx-react'\r\n\r\n// form layout\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 6,\r\n    span: 24\r\n  },\r\n};\r\n\r\n// form user\r\ninterface FormUser {\r\n  name: string\r\n  email: string\r\n  roleId: string\r\n  password: string\r\n  confirmPassword: string\r\n}\r\n\r\n// form user schema\r\nconst FormUserSchema: yup.ObjectSchema<FormUser> = yup.object().shape({\r\n  name: yup.string().required().defined(),\r\n  email: yup.string().required().email().defined(),\r\n  roleId: yup.string().required().defined(),\r\n  password: yup.string().required().defined(),\r\n  confirmPassword: yup.string().required().oneOf([yup.ref('password')], 'Password do not match').defined(),\r\n}).defined()\r\n\r\n\r\nconst FormUserComponent: FunctionComponent = () => {\r\n  // use store\r\n  const { userStore, roleStore } = useServiceStore()\r\n\r\n  // use form service modal\r\n  const modalFormUser = useModalFormUser()\r\n\r\n  // use form\r\n  const formUserContext = useForm<FormUser>({\r\n    resolver: yupResolver(FormUserSchema),\r\n    mode: 'onChange',\r\n  })\r\n\r\n  // submit handler\r\n  const onSubmitUser = async (userData: FormUser) => {\r\n    const result = await userStore.createUser(userData)\r\n    result && modalFormUser.close()\r\n  }\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    roleStore.fetchRoles()\r\n  }, [])\r\n\r\n  return (\r\n    <FormProvider {...formUserContext}>\r\n      <Form onSubmitCapture={formUserContext.handleSubmit(onSubmitUser)} {...layout} layout=\"horizontal\">\r\n        {/* <Form.Item> */}\r\n        {/* <CardComponent elevation=\"e300\"> */}\r\n        <FieldInputComponent required label=\"Nama\" name=\"name\" placeholder=\"Nama\" />\r\n        {/* <FieldInputComponent name=\"role\" placeholder=\"Role\"/> */}\r\n        <Form.Item\r\n          required\r\n          label={<Typography.Text strong> Role </Typography.Text>}\r\n          validateStatus={formUserContext.errors.roleId?.message && 'error'}\r\n          help={formUserContext.errors.roleId?.message}\r\n        >\r\n          <Controller\r\n            as={\r\n              <Select showSearch placeholder=\"Role\">\r\n                {/* <Select.Option value=\"Admin\"> Admin </Select.Option>\r\n                <Select.Option value=\"Verifikator\"> Verifikator </Select.Option>\r\n                <Select.Option value=\"Helpdesk\"> Helpdesk </Select.Option> */}\r\n                {roleStore.getRoles.map((item: any, index) => (\r\n                  <Select.Option value={item.id}> {item.name} </Select.Option>\r\n                ))}\r\n              </Select>\r\n            }\r\n            control={formUserContext.control}\r\n            name=\"roleId\"\r\n          // defaultValue=\"Admin\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <FieldInputComponent required label=\"Email\" name=\"email\" placeholder=\"Email\" />\r\n        <FieldPasswordComponent required label=\"Password\" name=\"password\" placeholder=\"New Password\" />\r\n        <FieldPasswordComponent required label=\"Confirm Password\" name=\"confirmPassword\" placeholder=\"Confirm New Password\" />\r\n        {/* </CardComponent> */}\r\n        {/* </Form.Item> */}\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block\r\n          // disabled={!formRegisterContext.formState.isValid}\r\n          >\r\n            SUBMIT\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nexport default memo(observer(FormUserComponent))\r\n","import React, { memo, FunctionComponent, ReactNode, createContext, useContext } from 'react'\r\nimport ModalComponent, { ModalStore } from 'common/component/modal/modal.component'\r\nimport { observer } from 'mobx-react'\r\nimport { useStore } from 'store/index.store'\r\nimport { observable, action, computed } from 'mobx'\r\nimport FormUserComponent from './form-user.component'\r\n\r\nexport class ModalFormUserStore {\r\n  @observable show: boolean = false\r\n  @observable data: any\r\n\r\n  @action\r\n  open(data?: any) {\r\n    this.show = true\r\n    this.data = data\r\n  }\r\n\r\n  @action\r\n  close() {\r\n    this.show = false\r\n  }\r\n\r\n  @computed\r\n  get isOpen() {\r\n    return this.show\r\n  }\r\n\r\n  @computed\r\n  get getData() {\r\n    return this.data\r\n  }\r\n}\r\n// create context\r\nconst context = createContext(new ModalFormUserStore)\r\n// use context\r\nexport const useModalFormUser = () => useContext(context)\r\n\r\nconst ModalFormUserComponent: FunctionComponent = () => {\r\n  // use modal form user\r\n  const modalFormUser = useModalFormUser()\r\n\r\n  // close modal\r\n  const closeModalFormUser = () => modalFormUser.close()\r\n\r\n  return (\r\n    <ModalComponent\r\n      title=\"Form User\"\r\n      visible={modalFormUser.isOpen}\r\n      onCancel={closeModalFormUser}\r\n      footer={null}\r\n    >\r\n      <FormUserComponent />\r\n    </ModalComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(ModalFormUserComponent))\r\n","import React, { FunctionComponent, memo } from 'react'\r\nimport { EditOutlined, EllipsisOutlined, EyeOutlined } from '@ant-design/icons'\r\nimport { Dropdown, Menu } from 'antd'\r\n\r\nconst TableActionComponent: FunctionComponent = () => {\r\n\r\n  // action menu\r\n  const ActionMenu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <EditOutlined style={{ color: 'darkorange' }} /> Edit\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <EyeOutlined style={{ color: 'blue' }} /> Detail\r\n      </Menu.Item>\r\n      {/* <Menu.Item key=\"1\">\r\n          <a href=\"http://www.taobao.com/\">2nd menu item</a>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"3\">3rd menu item</Menu.Item> */}\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <Dropdown overlay={ActionMenu} trigger={['click']}>\r\n      <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n        <EllipsisOutlined style={{ fontSize: 24 }} />\r\n      </a>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default memo(TableActionComponent)","import React, { memo, FunctionComponent, useEffect } from 'react'\r\nimport { Table, Tag, Space, Button, Tooltip } from 'antd'\r\nimport { ColumnsType } from 'antd/lib/table';\r\nimport { CardComponent } from 'common/component/index.component';\r\nimport { useModalFormUser } from './modal-form-user.component';\r\nimport TableActionComponent from './table-action.component';\r\nimport { useServiceStore } from 'store/service/_index-service.store';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst dataSource = [\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'admin',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'helpdesk',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'verifikator',\r\n    status: false,\r\n  },\r\n];\r\n\r\n\r\n\r\nconst TableUserComponent: FunctionComponent = () => {\r\n  // use modal form user\r\n  const modalFormUser = useModalFormUser()\r\n\r\n  // open modal form user\r\n  const openModalFormUser = () => modalFormUser.open()\r\n\r\n  // use store\r\n  const { userStore } = useServiceStore()\r\n\r\n  const columns: ColumnsType<any> = [\r\n    {\r\n      title: 'No',\r\n      key: 'no',\r\n      render: (value, record, index) => index+1,\r\n      width: 50\r\n    },\r\n    // {\r\n    //   title: 'ID',\r\n    //   dataIndex: 'id',\r\n    //   key: 'id',\r\n    // },\r\n    {\r\n      title: 'Nama',\r\n      dataIndex: 'info',\r\n      key: 'info',\r\n      render: (info) => info?.name\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Role',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      render: (role) => <Tag> {role?.name} </Tag>\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'active',\r\n      key: 'active',\r\n      render: (isActive) => <Tag color={isActive ? 'green' : 'red'}> {isActive ? 'Active' : 'Inactive'} </Tag>,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      width: 150,\r\n      render: () => (<TableActionComponent />)\r\n    },\r\n  ];\r\n\r\n  // use effce\r\n  useEffect(() => {\r\n    userStore.fetchUsers()\r\n  }, [])\r\n\r\n  return (\r\n    <CardComponent>\r\n      <Table dataSource={userStore.getUsers} columns={columns} size=\"small\" />\r\n    </CardComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(TableUserComponent))\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { HeaderComponent, PageTransitionComponent } from 'common/component/index.component'\r\nimport { Button } from 'antd'\r\nimport TableUserComponent from '../component/table-user.component'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport ModalFormUserComponent, { useModalFormUser } from '../component/modal-form-user.component'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst UserPage: FunctionComponent = () => {\r\n  // use modal form user\r\n  const modalFormUser = useModalFormUser()\r\n\r\n  // open modal\r\n  const openModalFormUser = () => modalFormUser.open()\r\n\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent\r\n        title=\"User\"\r\n        extra={[\r\n          <Button key=\"extra:1\" type=\"primary\" icon={<PlusOutlined />} onClick={openModalFormUser}> Create User </Button>\r\n        ]}\r\n      />\r\n\r\n      <TableUserComponent />\r\n\r\n      {/* MODAL CREATE OR EDIT USER */}\r\n      <ModalFormUserComponent />\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(UserPage))\r\n","import React, { memo, FunctionComponent, useState } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent, CardComponent } from 'common/component/index.component'\r\nimport styled from 'styled-components'\r\nimport { Button, Empty, Typography, Space, Form, Table, Tag, Upload as AntUpload, Alert } from 'antd'\r\nimport { UploadOutlined } from '@ant-design/icons'\r\n\r\nconst CreateSubmission = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst CreateSubmissionContainer = styled.div`\r\n  width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst Upload = styled(AntUpload)`\r\n  display: grid;\r\n  grid-template-columns: 120px 250px;\r\n`\r\n\r\nconst props = {\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  multiple: false,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Index',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any, record: any, index: number) => <b>{index + 1}</b>,\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    width: 370,\r\n    render: (text: any, record: any) => (\r\n      <Upload {...props} className=\"test\">\r\n        <Button>\r\n          <UploadOutlined /> Upload\r\n        </Button>\r\n      </Upload>\r\n    ),\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'FORMULIR KEIKUTSERTAAN',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'FORMULIR PENDAFTARAN',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'KTP DIREKTUR',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'NPWP PERUSAHAAN',\r\n  },\r\n  {\r\n    key: '5',\r\n    name: `TDP/ NIB – OSS`,\r\n  },\r\n  {\r\n    key: '6',\r\n    name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  },\r\n  {\r\n    key: '7',\r\n    name: 'IJIN LOKASI (SITU/HOG/IG/UUG) – OSS',\r\n  },\r\n  {\r\n    key: '8',\r\n    name: 'PKP/ SK – NON PKP',\r\n  },\r\n  {\r\n    key: '9',\r\n    name: 'AKTA PENDIRIAN DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  },\r\n  {\r\n    key: '10',\r\n    name: 'AKTA PERUBAHAN TERAKHIR DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  },\r\n  {\r\n    key: '11',\r\n    name: 'DOKUMEN PENDUKUNG LAINNYA',\r\n  },\r\n  // {\r\n  //   key: '12',\r\n  //   name: 'AKTA PENDIRIAN DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  // },\r\n  // {\r\n  //   key: '9',\r\n  //   name: 'AKTA PENDIRIAN DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  // },\r\n];\r\n\r\n\r\nconst AccountPage: FunctionComponent = () => {\r\n  const [isCreateSubmission, setCreateSubmission] = useState<boolean>(false)\r\n\r\n  // create submission\r\n  const createSubmission = () => setCreateSubmission(true)\r\n\r\n  // cancel create submission\r\n  const cancelSubmission = () => setCreateSubmission(false)\r\n\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Pengajuan Akun Baru\" />\r\n\r\n      {!isCreateSubmission &&\r\n        <CreateSubmission>\r\n          <CreateSubmissionContainer>\r\n            <Form.Item>\r\n              <Empty description={<Typography.Text strong> Sedang tidak ada pengajuan yang aktif </Typography.Text>} />\r\n            </Form.Item>\r\n            <Button type=\"primary\" onClick={createSubmission}> Buat Pengajuan </Button>\r\n          </CreateSubmissionContainer>\r\n        </CreateSubmission>\r\n      }\r\n\r\n      {isCreateSubmission &&\r\n        <PageTransitionComponent direction=\"vertical\">\r\n          <CardComponent elevation=\"e300\">\r\n            <HeaderComponent title=\"Upload Dokumen Persyaratan\" />\r\n            <Form.Item>\r\n              <Alert type=\"warning\" message={\r\n                <Typography.Text strong >\r\n                  Dokumen persyaratan yang diupload untuk pengajuan masih dapat diubah selama belum menekan tombol <b>SUBMIT</b>.\r\n                  Pastikan dokumen yang anda upload sudah sesuai sebelum melakukan <b>SUBMIT</b> pengajuan\r\n                </Typography.Text>\r\n              } />\r\n            </Form.Item>\r\n            <Table columns={columns} dataSource={data} pagination={false} showHeader={false} />\r\n            <div style={{ textAlign: 'center', marginTop: 15 }}>\r\n              <Space>\r\n                <Button type=\"primary\"> SUBMIT </Button>\r\n                <Button type=\"default\" danger onClick={cancelSubmission}> CANCEL </Button>\r\n              </Space>\r\n            </div>\r\n          </CardComponent>\r\n        </PageTransitionComponent>\r\n      }\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(AccountPage)\r\n","import React, { memo, FunctionComponent, useState } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent, CardComponent } from 'common/component/index.component'\r\nimport styled from 'styled-components'\r\nimport { Button, Empty, Typography, Space, Form, Table, Tag, Upload as AntUpload, Alert } from 'antd'\r\nimport { UploadOutlined } from '@ant-design/icons'\r\n\r\nconst CreateSubmission = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst CreateSubmissionContainer = styled.div`\r\n  width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst Upload = styled(AntUpload)`\r\n  display: grid;\r\n  grid-template-columns: 120px 250px;\r\n`\r\n\r\nconst props = {\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  multiple: false,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Index',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any, record: any, index: number) => <b>{index + 1}</b>,\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    width: 370,\r\n    render: (text: any, record: any) => (\r\n      <Upload {...props} className=\"test\">\r\n        <Button>\r\n          <UploadOutlined /> Upload\r\n        </Button>\r\n      </Upload>\r\n    ),\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'SURAT PERMOHONAN UBAH DATA PENYEDIA',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'KTP DIREKTUR',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'NPWP PERUSAHAAN',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  },\r\n  {\r\n    key: '5',\r\n    name: `AKTA PERUBAHAN TERAKHIR DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)`,\r\n  },\r\n  {\r\n    key: '6',\r\n    name: 'DOKUMEN PENDUKUNG LAINNYA',\r\n  },\r\n  // {\r\n  //   key: '7',\r\n  //   name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  // },\r\n  // {\r\n  //   key: '8',\r\n  //   name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  // },\r\n];\r\n\r\nconst ChangeDataPage: FunctionComponent = () => {\r\n  const [isCreateSubmission, setCreateSubmission] = useState<boolean>(false)\r\n\r\n  // create submission\r\n  const createSubmission = () => setCreateSubmission(true)\r\n\r\n  // cancel create submission\r\n  const cancelSubmission = () => setCreateSubmission(false)\r\n\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Pengajuan Ubah Data\" />\r\n\r\n      {!isCreateSubmission &&\r\n        <CreateSubmission>\r\n          <CreateSubmissionContainer>\r\n            <Form.Item>\r\n              <Empty description={<Typography.Text strong> Sedang tidak ada pengajuan yang aktif </Typography.Text>} />\r\n            </Form.Item>\r\n            <Button type=\"primary\" onClick={createSubmission}> Buat Pengajuan </Button>\r\n          </CreateSubmissionContainer>\r\n        </CreateSubmission>\r\n      }\r\n\r\n      {isCreateSubmission &&\r\n        <PageTransitionComponent direction=\"vertical\">\r\n          <CardComponent elevation=\"e300\">\r\n            <HeaderComponent title=\"Upload Dokumen Persyaratan\" />\r\n            <Form.Item>\r\n              <Alert type=\"warning\" message={\r\n                <Typography.Text strong >\r\n                  Dokumen persyaratan yang diupload untuk pengajuan masih dapat diubah selama belum menekan tombol <b>SUBMIT</b>.\r\n                  Pastikan dokumen yang anda upload sudah sesuai sebelum melakukan <b>SUBMIT</b> pengajuan\r\n            </Typography.Text>\r\n              } />\r\n            </Form.Item>\r\n            <Table columns={columns} dataSource={data} pagination={false} showHeader={false} />\r\n            <div style={{ textAlign: 'center', marginTop: 15 }}>\r\n              <Space>\r\n                <Button type=\"primary\"> SUBMIT </Button>\r\n                <Button type=\"default\" danger onClick={cancelSubmission}> CANCEL </Button>\r\n              </Space>\r\n            </div>\r\n          </CardComponent>\r\n        </PageTransitionComponent>\r\n      }\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(ChangeDataPage)\r\n","import React, { memo, FunctionComponent, useState } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent, CardComponent } from 'common/component/index.component'\r\nimport styled from 'styled-components'\r\nimport { Button, Empty, Typography, Space, Form, Table, Tag, Upload as AntUpload, Alert } from 'antd'\r\nimport { UploadOutlined } from '@ant-design/icons'\r\n\r\nconst CreateSubmission = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst CreateSubmissionContainer = styled.div`\r\n  width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst Upload = styled(AntUpload)`\r\n  display: grid;\r\n  grid-template-columns: 120px 250px;\r\n`\r\n\r\nconst props = {\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  multiple: false,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Index',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any, record: any, index: number) => <b>{index + 1}</b>,\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    width: 370,\r\n    render: (text: any, record: any) => (\r\n      <Upload {...props} className=\"test\">\r\n        <Button>\r\n          <UploadOutlined /> Upload\r\n        </Button>\r\n      </Upload>\r\n    ),\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'SURAT PERMOHONAN GANTI EMAIL',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'KTP DIREKTUR',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'NPWP PERUSAHAAN',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  },\r\n  {\r\n    key: '5',\r\n    name: `AKTA PERUBAHAN TERAKHIR DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)`,\r\n  },\r\n  {\r\n    key: '6',\r\n    name: 'DOKUMEN PENDUKUNG LAINNYA',\r\n  },\r\n  // {\r\n  //   key: '7',\r\n  //   name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  // },\r\n  // {\r\n  //   key: '8',\r\n  //   name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  // },\r\n];\r\n\r\nconst ChangeEmailPage: FunctionComponent = () => {\r\n  const [isCreateSubmission, setCreateSubmission] = useState<boolean>(false)\r\n\r\n  // create submission\r\n  const createSubmission = () => setCreateSubmission(true)\r\n\r\n  // cancel create submission\r\n  const cancelSubmission = () => setCreateSubmission(false)\r\n\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Pengajuan Ganti Email\" />\r\n\r\n      {!isCreateSubmission &&\r\n        <CreateSubmission>\r\n          <CreateSubmissionContainer>\r\n            <Form.Item>\r\n              <Empty description={<Typography.Text strong> Sedang tidak ada pengajuan yang aktif </Typography.Text>} />\r\n            </Form.Item>\r\n            <Button type=\"primary\" onClick={createSubmission}> Buat Pengajuan </Button>\r\n          </CreateSubmissionContainer>\r\n        </CreateSubmission>\r\n      }\r\n\r\n      {isCreateSubmission &&\r\n        <PageTransitionComponent direction=\"vertical\">\r\n          <CardComponent elevation=\"e300\">\r\n            <HeaderComponent title=\"Upload Dokumen Persyaratan\" />\r\n            <Form.Item>\r\n              <Alert type=\"warning\" message={\r\n                <Typography.Text strong >\r\n                  Dokumen persyaratan yang diupload untuk pengajuan masih dapat diubah selama belum menekan tombol <b>SUBMIT</b>.\r\n                  Pastikan dokumen yang anda upload sudah sesuai sebelum melakukan <b>SUBMIT</b> pengajuan\r\n            </Typography.Text>\r\n              } />\r\n            </Form.Item>\r\n            <Table columns={columns} dataSource={data} pagination={false} showHeader={false} />\r\n            <div style={{ textAlign: 'center', marginTop: 15 }}>\r\n              <Space>\r\n                <Button type=\"primary\"> SUBMIT </Button>\r\n                <Button type=\"default\" danger onClick={cancelSubmission}> CANCEL </Button>\r\n              </Space>\r\n            </div>\r\n          </CardComponent>\r\n        </PageTransitionComponent>\r\n      }\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(ChangeEmailPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { Layout as AntLayout, Typography, Button, Grid, Row, Col, Menu, Form, Space } from 'antd'\r\nimport styled from 'styled-components'\r\nimport { HeaderComponent, CardComponent, DividerComponent, FieldInputComponent } from 'common/component/index.component'\r\nimport { STYLE } from 'config/index.config'\r\nimport { motion } from 'framer-motion'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst { Sider: AntSider, Header: AntHeader, Content: AntContent, Footer: AntFooter } = AntLayout\r\n\r\nconst { SubMenu } = Menu\r\n\r\nconst SiderWidth = 300\r\n\r\nconst Sider = styled(AntSider)`\r\n  position: fixed;\r\n  height: 100vh;\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 14px;\r\n  padding: 50px;\r\n  /* display: grid; */\r\n  /* grid-template-columns: 300px 1fr; */\r\n  /* grid-template-columns: 1fr; */\r\n  /* grid-template-rows: 1fr repeat(4, auto) 1fr; */\r\n`\r\n\r\nconst SiderContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* align-items: center; */\r\n  justify-content: center;\r\n  height: 100%;\r\n`\r\n\r\nconst Header = styled(AntHeader)`\r\n  background: transparent;\r\n  /* position: absolute; */\r\n`\r\n\r\nconst Content = styled(AntContent)`\r\n  padding: 24px 70px;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  column-gap: 24px;\r\n`\r\n\r\nconst Footer = styled(AntFooter)`\r\n  padding: 0 70px;\r\n  text-align: left;\r\n`\r\n\r\nconst SiderAnimationVariants = {\r\n  hidden: {\r\n    x: -24,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    x: 0,\r\n    opacity: 1,\r\n    transition: {\r\n      easings: \"easeInOut\",\r\n      duration: 0.3\r\n    }\r\n  },\r\n  exit: {\r\n    x: -24,\r\n    opacity: 0,\r\n    transition: {\r\n      easings: \"easeInOut\",\r\n      duration: 0.1\r\n    }\r\n  }\r\n}\r\n\r\nconst PublicPage: FunctionComponent = () => {\r\n  return (\r\n    <>\r\n      <AntLayout>\r\n        <Sider theme=\"light\" width={SiderWidth}>\r\n          <SiderContainer>\r\n            <motion.div\r\n              variants={SiderAnimationVariants}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              exit=\"exit\"\r\n            >\r\n              <div>\r\n                <HeaderComponent title={<Typography.Title level={1}> Digital Revisi </Typography.Title>} />\r\n                <HeaderComponent title=\"Layanan Registrasi, Verifikasi, dan Konsultasi Pelaku Usaha\" />\r\n                <Row gutter={12}>\r\n                  <Col span={12}><Link to=\"/auth/register\">  <Button type=\"primary\" block> Register </Button> </Link> </Col>\r\n                  <Col span={12}><Link to=\"/auth/login\"> <Button type=\"default\" block> Login </Button> </Link> </Col>\r\n                </Row>\r\n              </div>\r\n            </motion.div>\r\n          </SiderContainer>\r\n        </Sider>\r\n        <AntLayout style={{ marginLeft: SiderWidth }}>\r\n          {/* <Header>\r\n            <Menu mode=\"horizontal\" style={{ background: \"transparent\" }}>\r\n              <Menu.Item key=\"mail\">\r\n                Navigation One\r\n              </Menu.Item>\r\n              <Menu.Item key=\"app\" disabled>\r\n                Navigation Two\r\n              </Menu.Item>\r\n              <SubMenu title=\"Navigation Three - Submenu\">\r\n                <Menu.ItemGroup title=\"Item 1\">\r\n                  <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n                  <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n                </Menu.ItemGroup>\r\n                <Menu.ItemGroup title=\"Item 2\">\r\n                  <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n                  <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n                </Menu.ItemGroup>\r\n              </SubMenu>\r\n              <Menu.Item key=\"alipay\">\r\n                <a href=\"https://ant.design\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  Navigation Four - Link\r\n                </a>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Header> */}\r\n          <Content>\r\n            {/* <HeaderComponent title=\"Layanan Registrasi, Verifikasi, dan Konsultasi Pelaku Usaha\" /> */}\r\n\r\n            {/* <div>\r\n              <HeaderComponent title={<Typography.Title level={1}> Digital Revisi </Typography.Title>} />\r\n              <HeaderComponent title=\"Layanan Registrasi, Verifikasi, dan Konsultasi Pelaku Usaha\" />\r\n              <Row gutter={12}>\r\n                <Col span={12}><Link to=\"/auth/register\">  <Button type=\"primary\" block> Register </Button> </Link> </Col>\r\n                <Col span={12}><Link to=\"/auth/login\"> <Button type=\"default\" block> Login </Button> </Link> </Col>\r\n              </Row>\r\n            </div> */}\r\n\r\n            {/* <ContentContainer>\r\n              <CardComponent elevation=\"e300\" style={{ background: STYLE.COLOR.PRIMARY, color: 'white' }}>\r\n                <Space direction=\"vertical\" size={15}>\r\n                  <Typography.Text strong style={{ color: \"white\", fontSize: 16 }} > Pendaftar <br/> Hari Ini </Typography.Text>\r\n                  <DividerComponent color=\"white\" />\r\n                </Space>\r\n              </CardComponent>\r\n\r\n              <CardComponent elevation=\"e300\" style={{ background: STYLE.COLOR.PRIMARY, color: 'white' }}>\r\n                <Space direction=\"vertical\" size={15}>\r\n                  <Typography.Text strong style={{ color: \"white\", fontSize: 16 }} > Pendaftar <br/> Sudah Diverifikasi </Typography.Text>\r\n                  <DividerComponent color=\"white\" />\r\n                </Space>\r\n              </CardComponent>\r\n\r\n\r\n              <CardComponent elevation=\"e300\" style={{ background: STYLE.COLOR.PRIMARY, color: 'white' }}>\r\n                <Space direction=\"vertical\" size={15}>\r\n                  <Typography.Text strong style={{ color: \"white\", fontSize: 16 }} > Pengajuan Hari Ini </Typography.Text>\r\n                  <DividerComponent color=\"white\" />\r\n                </Space>\r\n              </CardComponent>\r\n\r\n              <CardComponent elevation=\"e300\" style={{ background: STYLE.COLOR.PRIMARY, color: 'white' }}>\r\n                <Space direction=\"vertical\" size={15}>\r\n                  <Typography.Text strong style={{ color: \"white\", fontSize: 16 }} > Pengajuan Hari Ini </Typography.Text>\r\n                  <DividerComponent color=\"white\" />\r\n                </Space>\r\n              </CardComponent>\r\n            </ContentContainer> */}\r\n\r\n            {/* <CardComponent elevation=\"e300\">\r\n              <Form>\r\n                <FieldInputComponent name=\"Test\" />\r\n              </Form>\r\n            </CardComponent> */}\r\n          </Content>\r\n          {/* <Footer>\r\n            <Typography.Text strong > Layanan Registrasi, Verifikasi, dan Konsultasi Pelaku Usaha </Typography.Text>\r\n            <br></br>\r\n            <Typography.Text strong > (Digital Revisi) </Typography.Text>\r\n          </Footer> */}\r\n        </AntLayout>\r\n      </AntLayout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(PublicPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { Form, Button, Row, Col } from 'antd'\r\nimport { FieldInputComponent, CardComponent, FieldPasswordComponent } from 'common/component/index.component'\r\nimport { FormProvider, useForm } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from '@hookform/resolvers'\r\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons'\r\nimport { STYLE } from 'config/style.config'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n// form password forget\r\ninterface FormPasswordForget {\r\n  email: string\r\n}\r\n\r\n// form password forget schema\r\nconst FormPasswordForgetSchema: yup.ObjectSchema<FormPasswordForget> = yup.object().shape({\r\n  email: yup.string().required().email().defined(),\r\n}).defined()\r\n\r\nconst FormPasswordForgetComponent: FunctionComponent = () => {\r\n  // use form\r\n  const formPasswordForgetContext = useForm<FormPasswordForget>({\r\n    resolver: yupResolver(FormPasswordForgetSchema),\r\n    mode: 'onChange'\r\n  })\r\n\r\n  // use history\r\n  const history = useHistory()\r\n\r\n  // password forget handler\r\n  const onSubmitPasswordForget = (passwordForgetData: FormPasswordForget) => {\r\n    console.log(passwordForgetData)\r\n    // history.push('/main')\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...formPasswordForgetContext}>\r\n      <Form onSubmitCapture={formPasswordForgetContext.handleSubmit(onSubmitPasswordForget)}>\r\n        <Form.Item>\r\n          <CardComponent elevation=\"e300\">\r\n            <FieldInputComponent name=\"email\" placeholder=\"Email\" prefix={<MailOutlined style={{ color: STYLE.COLOR.PRIMARY }} />} />\r\n          </CardComponent>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block \r\n            // disabled={!formLoginContext.formState.isValid}\r\n          > \r\n            KIRIM \r\n          </Button>\r\n        </Form.Item>\r\n        {/* <Divider /> */}\r\n        <Form.Item>\r\n          {/* <Row>\r\n            <Col span={12}> <Link to=\"/auth/register\"> Belum punya akun? </Link> </Col>\r\n            <Col span={12} style={{ textAlign: 'right' }}> <Link to=\"/password/forget\"> Lupa password? </Link> </Col>\r\n          </Row>\r\n          <br/> */}\r\n          <Row>\r\n            <Col span={24} style={{ textAlign: 'center' }}> <Link to=\"/auth/login\"> Kembali ke Login </Link> </Col>\r\n          </Row>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nexport default memo(FormPasswordForgetComponent)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { HeaderComponent } from 'common/component/index.component'\r\nimport { Typography } from 'antd'\r\nimport FormPasswordForgetComponent from './component/form-password-forget.component'\r\n\r\nconst LoginComponent: FunctionComponent = () => {\r\n  return (\r\n    <>\r\n      <HeaderComponent title=\"Lupa Password\">\r\n        <Typography.Text strong > Kirim email anda untuk jika lupa password </Typography.Text>\r\n      </HeaderComponent>\r\n      \r\n      <FormPasswordForgetComponent />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(LoginComponent)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport AuthComponent from '../component/auth.component'\r\nimport { PageTransitionComponent } from 'common/component/index.component'\r\nimport PasswordForgetComponent from '../component/password-forget/password-forget.component'\r\n\r\nconst PasswordForgetPage: FunctionComponent = () => {\r\n  return (\r\n    <AuthComponent>\r\n      <PageTransitionComponent direction=\"vertical\">\r\n        <PasswordForgetComponent />\r\n      </PageTransitionComponent>\r\n    </AuthComponent>\r\n  )\r\n}\r\n\r\nexport default memo(PasswordForgetPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { Table, Progress } from 'antd'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TableVerificationComponent: FunctionComponent = () => {\r\n  const dataSource = [\r\n    {\r\n      id: 'ID-PENGAJUAN-01-09-2020-1',\r\n      namaPerusahaan: 'PT Perusahaan Ke Satu',\r\n      npwpPerusahaan: '101010101',\r\n      status: '100',\r\n      documents: [  \r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'ID-PENGAJUAN-01-09-2020-2',\r\n      namaPerusahaan: 'PT Perusahaan Ke Dua',\r\n      npwpPerusahaan: '101010101',\r\n      status: '100',\r\n      documents: [  \r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '100'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        }\r\n      ]\r\n    },\r\n  ];\r\n\r\n  const totalDocument = (documents: any) => documents.length\r\n  const activeDocument = (documents: any) => totalDocument(documents.filter((item: any) => item.status === '100'))\r\n\r\n  const progressDocument = (documents: any) => {\r\n    const total = totalDocument(documents)\r\n    const inProgress = activeDocument(documents) \r\n    return Math.round(( (total - inProgress) / total ) * 100)\r\n  }\r\n  \r\n  const columns = [\r\n    {\r\n      title: 'ID Pengajuan',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      render: (submissionId: string) => <Link to={`/main/account/verification/${submissionId}`}> {submissionId} </Link>\r\n    },\r\n    {\r\n      title: 'Perusahaan',\r\n      dataIndex: 'namaPerusahaan',\r\n      key: 'namaPerusahaan',\r\n    },\r\n    // {\r\n    //   title: 'Status',\r\n    //   dataIndex: 'status',\r\n    //   key: 'status',\r\n    // },\r\n    {\r\n      title: 'Progres Verifikasi',\r\n      dataIndex: 'documents',\r\n      key: 'documents',\r\n      render: (documents: any) => <Progress percent={progressDocument(documents)} size=\"small\" status=\"active\" />\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table loading={false} rowKey=\"key\" dataSource={dataSource} columns={columns} size=\"small\" />\r\n  )\r\n}\r\n\r\nexport default memo(TableVerificationComponent)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent, CardComponent } from 'common/component/index.component'\r\nimport TableVerificationComponent from '../component/verification/component/table-verification.component'\r\n\r\nconst VerificationPage: FunctionComponent = () => {\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Verifikasi Pengajuan Pembuatan Akun Baru\" />\r\n\r\n      <CardComponent elevation=\"e300\">\r\n        <TableVerificationComponent />\r\n      </CardComponent>\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(VerificationPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent } from 'common/component/index.component'\r\nimport { Button, Empty, Typography, Space, Form, Table, Tag, Upload as AntUpload, Alert } from 'antd'\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Index',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any, record: any, index: number) => <b>{index + 1}</b>,\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    // width: 370,\r\n    render: (text: any, record: any) => (\r\n      // <Upload {...props} className=\"test\">\r\n      //   <Button>\r\n      //     <UploadOutlined /> Upload\r\n      //   </Button>\r\n      // </Upload>\r\n      <Space>\r\n        <Button type=\"primary\" color=\"green\"> Approve </Button>\r\n        <Button type=\"primary\" danger> Reject </Button>\r\n      </Space>\r\n    ),\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'FORMULIR KEIKUTSERTAAN',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'FORMULIR PENDAFTARAN',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'KTP DIREKTUR',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'NPWP PERUSAHAAN',\r\n  },\r\n  {\r\n    key: '5',\r\n    name: `TDP/ NIB – OSS`,\r\n  },\r\n  {\r\n    key: '6',\r\n    name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  },\r\n  {\r\n    key: '7',\r\n    name: 'IJIN LOKASI (SITU/HOG/IG/UUG) – OSS',\r\n  },\r\n  {\r\n    key: '8',\r\n    name: 'PKP/ SK – NON PKP',\r\n  },\r\n  {\r\n    key: '9',\r\n    name: 'AKTA PENDIRIAN DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  },\r\n  {\r\n    key: '10',\r\n    name: 'AKTA PERUBAHAN TERAKHIR DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  },\r\n  {\r\n    key: '11',\r\n    name: 'DOKUMEN PENDUKUNG LAINNYA',\r\n  },\r\n  // {\r\n  //   key: '12',\r\n  //   name: 'AKTA PENDIRIAN DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  // },\r\n  // {\r\n  //   key: '9',\r\n  //   name: 'AKTA PENDIRIAN DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  // },\r\n];\r\n\r\nconst VerificationApprovalPage: FunctionComponent = () => {\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Approval Pengajuan Pembuatan Akun Baru\" />\r\n\r\n      <Table columns={columns} dataSource={data} pagination={false} showHeader={false} />\r\n      <div style={{ textAlign: 'center', marginTop: 15 }}>\r\n        <Space>\r\n          <Button type=\"primary\"> SUBMIT </Button>\r\n          {/* <Button type=\"default\" danger onClick={cancelSubmission}> CANCEL </Button> */}\r\n        </Space>\r\n      </div>\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(VerificationApprovalPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { Table, Progress } from 'antd'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TableVerificationComponent: FunctionComponent = () => {\r\n  const dataSource = [\r\n    {\r\n      id: 'ID-PENGAJUAN-01-09-2020-1',\r\n      namaPerusahaan: 'PT Perusahaan Ke Satu',\r\n      npwpPerusahaan: '101010101',\r\n      status: '100',\r\n      documents: [  \r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'ID-PENGAJUAN-01-09-2020-2',\r\n      namaPerusahaan: 'PT Perusahaan Ke Dua',\r\n      npwpPerusahaan: '101010101',\r\n      status: '100',\r\n      documents: [  \r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '100'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        }\r\n      ]\r\n    },\r\n  ];\r\n\r\n  const totalDocument = (documents: any) => documents.length\r\n  const activeDocument = (documents: any) => totalDocument(documents.filter((item: any) => item.status === '100'))\r\n\r\n  const progressDocument = (documents: any) => {\r\n    const total = totalDocument(documents)\r\n    const inProgress = activeDocument(documents) \r\n    return Math.round(( (total - inProgress) / total ) * 100)\r\n  }\r\n  \r\n  const columns = [\r\n    {\r\n      title: 'ID Pengajuan',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      render: (submissionId: string) => <Link to={`/main/change-data/verification/${submissionId}`}> {submissionId} </Link>\r\n    },\r\n    {\r\n      title: 'Perusahaan',\r\n      dataIndex: 'namaPerusahaan',\r\n      key: 'namaPerusahaan',\r\n    },\r\n    // {\r\n    //   title: 'Status',\r\n    //   dataIndex: 'status',\r\n    //   key: 'status',\r\n    // },\r\n    {\r\n      title: 'Progres Verifikasi',\r\n      dataIndex: 'documents',\r\n      key: 'documents',\r\n      render: (documents: any) => <Progress percent={progressDocument(documents)} size=\"small\" status=\"active\" />\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table loading={false} rowKey=\"key\" dataSource={dataSource} columns={columns} size=\"small\" />\r\n  )\r\n}\r\n\r\nexport default memo(TableVerificationComponent)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent, CardComponent } from 'common/component/index.component'\r\nimport TableVerificationComponent from '../component/table-verification.component'\r\n\r\nconst VerificationPage: FunctionComponent = () => {\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Verifikasi Pengajuan Ubah Data\" />\r\n\r\n      <CardComponent elevation=\"e300\">\r\n        <TableVerificationComponent />\r\n      </CardComponent>\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(VerificationPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent } from 'common/component/index.component'\r\nimport { Button, Empty, Typography, Space, Form, Table, Tag, Upload as AntUpload, Alert } from 'antd'\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Index',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any, record: any, index: number) => <b>{index + 1}</b>,\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    // width: 370,\r\n    render: (text: any, record: any) => (\r\n      // <Upload {...props} className=\"test\">\r\n      //   <Button>\r\n      //     <UploadOutlined /> Upload\r\n      //   </Button>\r\n      // </Upload>\r\n      <Space>\r\n        <Button type=\"primary\" color=\"green\"> Approve </Button>\r\n        <Button type=\"primary\" danger> Reject </Button>\r\n      </Space>\r\n    ),\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'SURAT PERMOHONAN UBAH DATA PENYEDIA',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'KTP DIREKTUR',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'NPWP PERUSAHAAN',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  },\r\n  {\r\n    key: '5',\r\n    name: `AKTA PERUBAHAN TERAKHIR DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)`,\r\n  },\r\n  {\r\n    key: '6',\r\n    name: 'DOKUMEN PENDUKUNG LAINNYA',\r\n  },\r\n  // {\r\n  //   key: '7',\r\n  //   name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  // },\r\n  // {\r\n  //   key: '8',\r\n  //   name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  // },\r\n];\r\n\r\nconst VerificationApprovalPage: FunctionComponent = () => {\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Approval Pengajuan Ubah Data\" />\r\n\r\n      <Table columns={columns} dataSource={data} pagination={false} showHeader={false} />\r\n      <div style={{ textAlign: 'center', marginTop: 15 }}>\r\n        <Space>\r\n          <Button type=\"primary\"> SUBMIT </Button>\r\n          {/* <Button type=\"default\" danger onClick={cancelSubmission}> CANCEL </Button> */}\r\n        </Space>\r\n      </div>\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(VerificationApprovalPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { Table, Progress } from 'antd'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TableVerificationComponent: FunctionComponent = () => {\r\n  const dataSource = [\r\n    {\r\n      id: 'ID-PENGAJUAN-01-09-2020-1',\r\n      namaPerusahaan: 'PT Perusahaan Ke Satu',\r\n      npwpPerusahaan: '101010101',\r\n      status: '100',\r\n      documents: [  \r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'ID-PENGAJUAN-01-09-2020-2',\r\n      namaPerusahaan: 'PT Perusahaan Ke Dua',\r\n      npwpPerusahaan: '101010101',\r\n      status: '100',\r\n      documents: [  \r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '100'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        }\r\n      ]\r\n    },\r\n  ];\r\n\r\n  const totalDocument = (documents: any) => documents.length\r\n  const activeDocument = (documents: any) => totalDocument(documents.filter((item: any) => item.status === '100'))\r\n\r\n  const progressDocument = (documents: any) => {\r\n    const total = totalDocument(documents)\r\n    const inProgress = activeDocument(documents) \r\n    return Math.round(( (total - inProgress) / total ) * 100)\r\n  }\r\n  \r\n  const columns = [\r\n    {\r\n      title: 'ID Pengajuan',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      render: (submissionId: string) => <Link to={`/main/change-email/verification/${submissionId}`}> {submissionId} </Link>\r\n    },\r\n    {\r\n      title: 'Perusahaan',\r\n      dataIndex: 'namaPerusahaan',\r\n      key: 'namaPerusahaan',\r\n    },\r\n    // {\r\n    //   title: 'Status',\r\n    //   dataIndex: 'status',\r\n    //   key: 'status',\r\n    // },\r\n    {\r\n      title: 'Progres Verifikasi',\r\n      dataIndex: 'documents',\r\n      key: 'documents',\r\n      render: (documents: any) => <Progress percent={progressDocument(documents)} size=\"small\" status=\"active\" />\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table loading={false} rowKey=\"key\" dataSource={dataSource} columns={columns} size=\"small\" />\r\n  )\r\n}\r\n\r\nexport default memo(TableVerificationComponent)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent, CardComponent } from 'common/component/index.component'\r\nimport TableVerificationComponent from '../component/table-verification.component'\r\n\r\nconst VerificationPage: FunctionComponent = () => {\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Verifikasi Pengajuan Ganti Email\" />\r\n\r\n      <CardComponent elevation=\"e300\">\r\n        <TableVerificationComponent />\r\n      </CardComponent>\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(VerificationPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent } from 'common/component/index.component'\r\nimport { Button, Empty, Typography, Space, Form, Table, Tag, Upload as AntUpload, Alert } from 'antd'\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Index',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any, record: any, index: number) => <b>{index + 1}</b>,\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    // width: 200,\r\n    render: (text: any) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    // width: 370,\r\n    render: (text: any, record: any) => (\r\n      // <Upload {...props} className=\"test\">\r\n      //   <Button>\r\n      //     <UploadOutlined /> Upload\r\n      //   </Button>\r\n      // </Upload>\r\n      <Space>\r\n        <Button type=\"primary\" color=\"green\"> Approve </Button>\r\n        <Button type=\"primary\" danger> Reject </Button>\r\n      </Space>\r\n    ),\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'SURAT PERMOHONAN GANTI EMAIL',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'KTP DIREKTUR',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'NPWP PERUSAHAAN',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  },\r\n  {\r\n    key: '5',\r\n    name: `AKTA PERUBAHAN TERAKHIR DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)`,\r\n  },\r\n  {\r\n    key: '6',\r\n    name: 'DOKUMEN PENDUKUNG LAINNYA',\r\n  },\r\n  // {\r\n  //   key: '7',\r\n  //   name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  // },\r\n  // {\r\n  //   key: '8',\r\n  //   name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  // },\r\n];\r\n\r\nconst VerificationApprovalPage: FunctionComponent = () => {\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Approval Pengajuan Ganti Email\" />\r\n\r\n      <Table columns={columns} dataSource={data} pagination={false} showHeader={false} />\r\n      <div style={{ textAlign: 'center', marginTop: 15 }}>\r\n        <Space>\r\n          <Button type=\"primary\"> SUBMIT </Button>\r\n          {/* <Button type=\"default\" danger onClick={cancelSubmission}> CANCEL </Button> */}\r\n        </Space>\r\n      </div>\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(VerificationApprovalPage)\r\n","import React, { FunctionComponent, memo } from 'react'\r\nimport { EditOutlined, EllipsisOutlined, EyeOutlined } from '@ant-design/icons'\r\nimport { Dropdown, Menu } from 'antd'\r\n\r\nconst TableActionComponent: FunctionComponent = () => {\r\n\r\n  // action menu\r\n  const ActionMenu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <EditOutlined style={{ color: 'darkorange' }} /> Edit\r\n      </Menu.Item>\r\n      {/* <Menu.Item key=\"1\">\r\n        <EyeOutlined style={{ color: 'blue' }} /> Detail\r\n      </Menu.Item> */}\r\n      {/* <Menu.Item key=\"1\">\r\n          <a href=\"http://www.taobao.com/\">2nd menu item</a>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"3\">3rd menu item</Menu.Item> */}\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <Dropdown overlay={ActionMenu} trigger={['click']}>\r\n      <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n        <EllipsisOutlined style={{ fontSize: 24 }} />\r\n      </a>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default memo(TableActionComponent)","import React, { memo, FunctionComponent, useEffect } from 'react'\r\nimport { Table, Tag, Space, Button, Tooltip, Menu, Dropdown, notification } from 'antd'\r\nimport { ColumnsType } from 'antd/lib/table';\r\nimport { CardComponent } from 'common/component/index.component';\r\nimport { EditOutlined, EllipsisOutlined, LockOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport TableActionComponent from './table-action.component';\r\nimport { observer } from 'mobx-react';\r\nimport { useServiceStore } from 'store/service/_index-service.store';\r\n\r\nconst dataSource = [\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    status: false,\r\n  },\r\n];\r\n\r\nconst TableServiceComponent: FunctionComponent = () => {\r\n\r\n  // use store\r\n  const { serviceStore } = useServiceStore()\r\n\r\n  const columns: ColumnsType<any> = [\r\n    {\r\n      title: 'No',\r\n      key: 'no',\r\n      render: (value, record, index) => index+1,\r\n      width: 50\r\n    },\r\n    // {\r\n    //   title: 'ID',\r\n    //   dataIndex: 'id',\r\n    //   key: 'id',\r\n    // },\r\n    {\r\n      title: 'Nama Layanan',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Deskripsi Layanan',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n      render: (description) => <span style={{ color: 'rgba(0,0,0,0.3)' }}> <i> {description || `Tidak ada deskripsi`} </i> </span>\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'active',\r\n      key: 'active',\r\n      render: (isActive) => <Tag color={isActive ? 'green' : 'red'}> {isActive ? 'Active' : 'Inactive'} </Tag>,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      width: 150,\r\n      render: (text, record) => (<TableActionComponent />)\r\n    },\r\n  ];\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    serviceStore.fetchServices()\r\n    // onInit()\r\n  }, [])\r\n\r\n  // const onInit = async () => {\r\n  //   const result = await serviceStore.fetchServices()\r\n  //   !result && (\r\n  //     notification.error({\r\n  //       message: 'Error',\r\n  //       description: 'Terjadi gangguan pada server',\r\n  //       placement: 'bottomRight'\r\n  //     })\r\n  //   )\r\n  // }\r\n\r\n  return (\r\n    <CardComponent>\r\n      <Table dataSource={serviceStore.getServices} columns={columns} size=\"small\" />\r\n    </CardComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(TableServiceComponent))\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { Form, Button } from 'antd'\r\nimport { FieldInputComponent } from 'common/component/index.component'\r\nimport { FormProvider, useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers'\r\nimport * as yup from 'yup'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\nimport { useModalFormService } from './modal-form-service.component'\r\n\r\n// form layout\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 6,\r\n    span: 24\r\n  },\r\n};\r\n\r\n// form service\r\ninterface FormService {\r\n  name: string\r\n  description?: string\r\n}\r\n\r\n// form service schema\r\nconst FormServiceSchema: yup.ObjectSchema<FormService> = yup.object().shape({\r\n  name: yup.string().required().defined(),\r\n  description: yup.string(),\r\n}).defined()\r\n\r\n\r\nconst FormServiceComponent: FunctionComponent = () => {\r\n  // use store\r\n  const { serviceStore } = useServiceStore()\r\n\r\n  // use form service modal\r\n  const modalFormService = useModalFormService()\r\n\r\n  // use form\r\n  const formServiceContext = useForm<FormService>({\r\n    resolver: yupResolver(FormServiceSchema),\r\n    mode: 'onChange',\r\n  })\r\n\r\n  // submit handler\r\n  const onSubmitRole = async (serviceData: FormService) => {\r\n    const result = await serviceStore.createService(serviceData)\r\n    result && modalFormService.close()\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...formServiceContext}>\r\n      <Form onSubmitCapture={formServiceContext.handleSubmit(onSubmitRole)} {...layout} layout=\"horizontal\">\r\n        <FieldInputComponent required label=\"Nama Service\" name=\"name\" placeholder=\"Nama Service\" />\r\n        <FieldInputComponent label=\"Deskripsi Service\" name=\"description\" placeholder=\"Deskripsi Service\" />\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block\r\n          // disabled={!formRegisterContext.formState.isValid}\r\n          >\r\n            SUBMIT\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nexport default memo(observer(FormServiceComponent))\r\n","import React, { memo, FunctionComponent, ReactNode, createContext, useContext } from 'react'\r\nimport ModalComponent, { ModalStore } from 'common/component/modal/modal.component'\r\nimport { observer } from 'mobx-react'\r\nimport { useStore } from 'store/index.store'\r\nimport { observable, action, computed } from 'mobx'\r\nimport FormServiceComponent from './form-service.component'\r\n\r\nexport class ModalFormServiceStore {\r\n  @observable show: boolean = false\r\n  @observable data: any\r\n\r\n  @action\r\n  open(data?: any) {\r\n    this.show = true\r\n    this.data = data\r\n  }\r\n\r\n  @action\r\n  close() {\r\n    this.show = false\r\n  }\r\n\r\n  @computed\r\n  get isOpen() {\r\n    return this.show\r\n  }\r\n\r\n  @computed\r\n  get getData() {\r\n    return this.data\r\n  }\r\n}\r\n// create context\r\nconst context = createContext(new ModalFormServiceStore)\r\n// use context\r\nexport const useModalFormService = () => useContext(context)\r\n\r\nconst ModalFormServiceComponent: FunctionComponent = () => {\r\n  // use modal form service\r\n  const modalFormService = useModalFormService()\r\n\r\n  // close modal\r\n  const closeModalFormService = () => modalFormService.close()\r\n\r\n  return (\r\n    <ModalComponent\r\n      title=\"Form Service\"\r\n      visible={modalFormService.isOpen}\r\n      onCancel={closeModalFormService}\r\n      footer={null}\r\n    >\r\n      <FormServiceComponent />\r\n    </ModalComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(ModalFormServiceComponent))\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { HeaderComponent, PageTransitionComponent } from 'common/component/index.component'\r\nimport { Typography, Button } from 'antd'\r\nimport TableServiceComponent from '../component/table-service.component'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport { observer } from 'mobx-react'\r\nimport ModalFormServiceComponent, { useModalFormService } from '../component/modal-form-service.component'\r\n\r\nconst ServicePage: FunctionComponent = () => {\r\n  // use modal form service\r\n  const modalFormService = useModalFormService()\r\n\r\n  // open modal\r\n  const openModalFormService = () => modalFormService.open()\r\n\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent\r\n        title=\"Layanan\"\r\n        extra={[\r\n          <Button key=\"extra:1\" type=\"primary\" icon={<PlusOutlined />} onClick={openModalFormService}> Create Service </Button>\r\n        ]}\r\n      />\r\n\r\n      {/* TABLE SERVICE */}\r\n      <TableServiceComponent />\r\n\r\n      {/* MODAL CREATE OR EDIT USER */}\r\n      <ModalFormServiceComponent />\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(ServicePage)\r\n","import React, { FunctionComponent, memo } from 'react'\r\nimport { EditOutlined, EllipsisOutlined, EyeOutlined } from '@ant-design/icons'\r\nimport { Dropdown, Menu } from 'antd'\r\n\r\nconst TableActionComponent: FunctionComponent = () => {\r\n\r\n  // action menu\r\n  const ActionMenu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <EditOutlined style={{ color: 'darkorange' }} /> Edit\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <EyeOutlined style={{ color: 'blue' }} /> Detail\r\n      </Menu.Item>\r\n      {/* <Menu.Item key=\"1\">\r\n          <a href=\"http://www.taobao.com/\">2nd menu item</a>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"3\">3rd menu item</Menu.Item> */}\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <Dropdown overlay={ActionMenu} trigger={['click']}>\r\n      <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n        <EllipsisOutlined style={{ fontSize: 24 }} />\r\n      </a>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default memo(TableActionComponent)","import React, { memo, FunctionComponent, useEffect } from 'react'\r\nimport { Table, Tag } from 'antd'\r\nimport { ColumnsType } from 'antd/lib/table';\r\nimport { CardComponent } from 'common/component/index.component';\r\nimport TableActionComponent from './table-action.component';\r\nimport { useServiceStore } from 'store/service/_index-service.store';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst dataSource = [\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'admin',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'helpdesk',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'verifikator',\r\n    status: false,\r\n  },\r\n];\r\n\r\nconst TableProviderComponent: FunctionComponent = () => {\r\n\r\n  // use store\r\n  const { providerStore } = useServiceStore()\r\n\r\n  const columns: ColumnsType<any> = [\r\n    {\r\n      title: 'No',\r\n      key: 'no',\r\n      render: (value, record, index) => index+1,\r\n      width: 50\r\n    },\r\n    // {\r\n    //   title: 'ID',\r\n    //   dataIndex: 'id',\r\n    //   key: 'id',\r\n    // },\r\n    {\r\n      title: 'Nama',\r\n      dataIndex: 'info',\r\n      key: 'info',\r\n      render: (info) => info?.name\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Role',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      render: (role) => <Tag> {role?.name} </Tag>\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'active',\r\n      key: 'active',\r\n      render: (isActive) => <Tag color={isActive ? 'green' : 'red'}> {isActive ? 'Active' : 'Inactive'} </Tag>,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      width: 150,\r\n      render: () => (<TableActionComponent />)\r\n    },\r\n  ];\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    providerStore.fetchProviders()\r\n  }, [])\r\n  \r\n  return (\r\n    <CardComponent>\r\n      <Table dataSource={providerStore.getProviders} columns={columns} size=\"small\" />\r\n    </CardComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(TableProviderComponent))\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent } from 'common/component/index.component'\r\nimport TableProviderComponent from '../component/table-provider.component'\r\n\r\nconst ProviderPage: FunctionComponent = () => {\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Penyedia\" />\r\n\r\n      <TableProviderComponent />\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(ProviderPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent } from 'common/component/index.component'\r\nimport styled from 'styled-components'\r\nimport { Button, Empty, Typography, Space, Form } from 'antd'\r\n\r\nconst CreateSubmission = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst CreateSubmissionContainer = styled.div`\r\n  width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst ConsultOnlinePage: FunctionComponent = () => {\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Konsultasi Online\" />\r\n\r\n      {/* <CreateSubmission>\r\n        <CreateSubmissionContainer>\r\n          <Form.Item>\r\n            <Empty description={<Typography.Text strong> Sedang tidak ada pengajuan yang aktif </Typography.Text>} />\r\n          </Form.Item>\r\n          <Button type=\"primary\"> Buat Pengajuan </Button>\r\n        </CreateSubmissionContainer>\r\n      </CreateSubmission> */}\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(ConsultOnlinePage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent } from 'common/component/index.component'\r\n\r\nconst VerificationPage: FunctionComponent = () => {\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Verifikasi Konsultasi Online\" />\r\n\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(VerificationPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent } from 'common/component/index.component'\r\nimport styled from 'styled-components'\r\nimport { Button, Empty, Typography, Space, Form } from 'antd'\r\n\r\nconst CreateSubmission = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst CreateSubmissionContainer = styled.div`\r\n  width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst ConsultF2FPage: FunctionComponent = () => {\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Konsultasi Tatap Muka\" />\r\n\r\n      <CreateSubmission>\r\n        <CreateSubmissionContainer>\r\n          <Form.Item>\r\n            <Empty description={<Typography.Text strong> Sedang tidak ada pengajuan yang aktif </Typography.Text>} />\r\n          </Form.Item>\r\n          <Button type=\"primary\"> Buat Pengajuan </Button>\r\n        </CreateSubmissionContainer>\r\n      </CreateSubmission>\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(ConsultF2FPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { Table, Progress, Tag } from 'antd'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TableVerificationComponent: FunctionComponent = () => {\r\n  const dataSource = [\r\n    {\r\n      id: 'ID-PENGAJUAN-01-09-2020-1',\r\n      namaPerusahaan: 'PT Perusahaan Ke Satu',\r\n      npwpPerusahaan: '101010101',\r\n      temaKonsultasi: 'LPSE',\r\n      tglKonsultasi: '01-09-2020',\r\n      status: '100',\r\n      documents: [\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'ID-PENGAJUAN-01-09-2020-2',\r\n      namaPerusahaan: 'PT Perusahaan Ke Dua',\r\n      npwpPerusahaan: '101010101',\r\n      temaKonsultasi: 'LPSE',\r\n      tglKonsultasi: '01-09-2020',\r\n      status: '100',\r\n      documents: [\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '100'\r\n        },\r\n        {\r\n          id: '101010',\r\n          context: 'document',\r\n          contextName: 'document Pengajuan',\r\n          file: './data/data/data',\r\n          status: '200'\r\n        }\r\n      ]\r\n    },\r\n  ];\r\n\r\n  const totalDocument = (documents: any) => documents.length\r\n  const activeDocument = (documents: any) => totalDocument(documents.filter((item: any) => item.status === '100'))\r\n\r\n  const progressDocument = (documents: any) => {\r\n    const total = totalDocument(documents)\r\n    const inProgress = activeDocument(documents)\r\n    return Math.round(((total - inProgress) / total) * 100)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'ID Pengajuan',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      // render: (submissionId: string) => <Link to={`/main/change-email/verification/${submissionId}`}> {submissionId} </Link>\r\n      render: (submissionId: string) => <a> {submissionId} </a>\r\n    },\r\n    {\r\n      title: 'Perusahaan',\r\n      dataIndex: 'namaPerusahaan',\r\n      key: 'namaPerusahaan',\r\n    },\r\n    {\r\n      title: 'Tema Konsultasi',\r\n      dataIndex: 'temaKonsultasi',\r\n      key: 'temaKonsultasi',\r\n    },\r\n    {\r\n      title: 'Tanggal Konsultasi',\r\n      dataIndex: 'tglKonsultasi',\r\n      key: 'tglKonsultasi',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status: any) => <Tag color={status == 100 ? 'green' : 'red'}> {status == 100 ? 'Approve' : 'Reject'} </Tag>\r\n    },\r\n    // {\r\n    //   title: 'Action',\r\n    //   dataIndex: 'documents',\r\n    //   key: 'documents',\r\n    //   render: (documents: any) => <Progress percent={progressDocument(documents)} size=\"small\" status=\"active\" />\r\n    // },\r\n  ];\r\n\r\n  return (\r\n    <Table loading={false} rowKey=\"key\" dataSource={dataSource} columns={columns} size=\"small\" />\r\n  )\r\n}\r\n\r\nexport default memo(TableVerificationComponent)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent, CardComponent } from 'common/component/index.component'\r\nimport TableVerificationComponent from '../component/table-verification.component'\r\n\r\nconst VerificationPage: FunctionComponent = () => {\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Verifikasi Pengajuan Konsultasi Tatap Muka\" />\r\n\r\n      <CardComponent elevation=\"e300\">\r\n        <TableVerificationComponent />\r\n      </CardComponent>\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(VerificationPage)\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { Form, Button } from 'antd'\r\nimport { FieldInputComponent } from 'common/component/index.component'\r\nimport { FormProvider, useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers'\r\nimport * as yup from 'yup'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\nimport { observer } from 'mobx-react'\r\nimport { useModalFormRole } from './modal-form-role.component'\r\n\r\n// form layout\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 6,\r\n    span: 24\r\n  },\r\n};\r\n\r\n// form role\r\ninterface FormRole {\r\n  name: string\r\n  description?: string\r\n}\r\n\r\n// form role schema\r\nconst FormRoleSchema: yup.ObjectSchema<FormRole> = yup.object().shape({\r\n  name: yup.string().required().defined(),\r\n  description: yup.string(),\r\n}).defined()\r\n\r\n\r\nconst FormRoleComponent: FunctionComponent = () => {\r\n  // use service store\r\n  const { roleStore } = useServiceStore()\r\n\r\n  // use form role modal\r\n  const modalFormRole = useModalFormRole()\r\n\r\n  // use form\r\n  const formRoleContext = useForm<FormRole>({\r\n    resolver: yupResolver(FormRoleSchema),\r\n    mode: 'onChange',\r\n  })\r\n\r\n  // submit handler\r\n  const onSubmitRole = async (roleData: FormRole) => {\r\n    const result = await roleStore.createRole(roleData)\r\n    result && modalFormRole.close()\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...formRoleContext}>\r\n      <Form onSubmitCapture={formRoleContext.handleSubmit(onSubmitRole)} {...layout} layout=\"horizontal\">\r\n        <FieldInputComponent required label=\"Nama Role\" name=\"name\" placeholder=\"Nama Role\" />\r\n        <FieldInputComponent label=\"Deskripsi Role\" name=\"description\" placeholder=\"Deskripsi Role\" />\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block\r\n          // disabled={!formRegisterContext.formState.isValid}\r\n          >\r\n            SUBMIT\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nexport default memo(observer(FormRoleComponent))\r\n","import React, { memo, FunctionComponent, ReactNode, createContext, useContext } from 'react'\r\nimport ModalComponent, { ModalStore } from 'common/component/modal/modal.component'\r\nimport { observer } from 'mobx-react'\r\nimport { useStore } from 'store/index.store'\r\nimport { observable, action, computed } from 'mobx'\r\nimport FormRoleComponent from './form-role.component'\r\n\r\nexport class ModalFormRoleStore {\r\n  @observable show: boolean = false\r\n  @observable data: any\r\n\r\n  @action\r\n  open(data?: any) {\r\n    this.show = true\r\n    this.data = data\r\n  }\r\n\r\n  @action\r\n  close() {\r\n    this.show = false\r\n  }\r\n\r\n  @computed\r\n  get isOpen() {\r\n    return this.show\r\n  }\r\n\r\n  @computed\r\n  get getData() {\r\n    return this.data\r\n  }\r\n}\r\n// create context\r\nconst context = createContext(new ModalFormRoleStore)\r\n// use context\r\nexport const useModalFormRole = () => useContext(context)\r\n\r\nconst ModalFormRoleComponent: FunctionComponent = () => {\r\n  // use modal form role\r\n  const modalFormRole = useModalFormRole()\r\n\r\n  // close modal\r\n  const closeModalFormRole = () => modalFormRole.close()\r\n\r\n  return (\r\n    <ModalComponent\r\n      title=\"Form Role\"\r\n      visible={modalFormRole.isOpen}\r\n      onCancel={closeModalFormRole}\r\n      footer={null}\r\n    >\r\n      <FormRoleComponent />\r\n    </ModalComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(ModalFormRoleComponent))\r\n","import React, { FunctionComponent, memo } from 'react'\r\nimport { EditOutlined, EllipsisOutlined, EyeOutlined } from '@ant-design/icons'\r\nimport { Dropdown, Menu } from 'antd'\r\n\r\nconst TableActionComponent: FunctionComponent = () => {\r\n\r\n  // action menu\r\n  const ActionMenu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <EditOutlined style={{ color: 'darkorange' }} /> Edit\r\n      </Menu.Item>\r\n      {/* <Menu.Item key=\"1\">\r\n        <EyeOutlined style={{ color: 'blue' }} /> Detail\r\n      </Menu.Item> */}\r\n      {/* <Menu.Item key=\"1\">\r\n          <a href=\"http://www.taobao.com/\">2nd menu item</a>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"3\">3rd menu item</Menu.Item> */}\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <Dropdown overlay={ActionMenu} trigger={['click']}>\r\n      <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n        <EllipsisOutlined style={{ fontSize: 24 }} />\r\n      </a>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default memo(TableActionComponent)","import React, { memo, FunctionComponent, useEffect } from 'react'\r\nimport { Table, Tag, Space, Button, Tooltip } from 'antd'\r\nimport { ColumnsType } from 'antd/lib/table';\r\nimport { CardComponent } from 'common/component/index.component';\r\nimport { useModalFormRole } from './modal-form-role.component';\r\nimport TableActionComponent from './table-action.component';\r\nimport { useServiceStore } from 'store/service/_index-service.store';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst dataSource = [\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'admin',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'helpdesk',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'verifikator',\r\n    status: false,\r\n  },\r\n];\r\n\r\n\r\n\r\nconst TableRoleComponent: FunctionComponent = () => {\r\n  // use modal form role\r\n  const modalFormRole = useModalFormRole()\r\n\r\n  // open modal form role\r\n  const openModalFormRole = () => modalFormRole.open()\r\n\r\n  // use service store\r\n  const { roleStore } = useServiceStore()\r\n\r\n  const columns: ColumnsType<any> = [\r\n    {\r\n      title: 'No',\r\n      key: 'no',\r\n      render: (value, record, index) => index+1,\r\n      width: 50\r\n    },\r\n    // {\r\n    //   title: 'ID',\r\n    //   dataIndex: 'id',\r\n    //   key: 'id',\r\n    // },\r\n    {\r\n      title: 'Nama Role',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Deskripsi Role',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n      render: (description) => <span style={{ color: 'rgba(0,0,0,0.3)' }}> <i> {description || `Tidak ada deskripsi`} </i> </span>\r\n    },\r\n    // {\r\n    //   title: 'Role',\r\n    //   dataIndex: 'role',\r\n    //   key: 'role',\r\n    //   render: (role) => <Tag> {role} </Tag>\r\n    // },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'active',\r\n      key: 'active',\r\n      render: (isActive) => <Tag color={isActive ? 'green' : 'red'}> {isActive ? 'Active' : 'Inactive'} </Tag>,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      width: 150,\r\n      render: () => (<TableActionComponent />)\r\n    },\r\n  ];\r\n  \r\n  // use effect\r\n  useEffect(() => {\r\n    roleStore.fetchRoles()\r\n  }, [])\r\n\r\n  return (\r\n    <CardComponent>\r\n      <Table dataSource={roleStore.getRoles} columns={columns} size=\"small\" />\r\n    </CardComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(TableRoleComponent))\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { HeaderComponent, PageTransitionComponent } from 'common/component/index.component'\r\nimport { Button } from 'antd'\r\nimport TableRoleComponent from '../component/table-role.component'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport ModalFormRoleComponent, { useModalFormRole } from '../component/modal-form-role.component'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst RolePage: FunctionComponent = () => {\r\n  // use modal form role\r\n  const modalFormRole = useModalFormRole()\r\n\r\n  // open modal\r\n  const openModalFormRole = () => modalFormRole.open()\r\n\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent\r\n        title=\"Role\"\r\n        extra={[\r\n          <Button key=\"extra:1\" type=\"primary\" icon={<PlusOutlined />} onClick={openModalFormRole}> Create Role </Button>\r\n        ]}\r\n      />\r\n\r\n      <TableRoleComponent />\r\n\r\n      {/* MODAL CREATE OR EDIT ROLE */}\r\n      <ModalFormRoleComponent />\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(RolePage))\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { Form, Button } from 'antd'\r\nimport { FieldInputComponent } from 'common/component/index.component'\r\nimport { FormProvider, useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers'\r\nimport * as yup from 'yup'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\nimport { useModalFormSubmissionType } from './modal-form-submission-type.component'\r\n\r\n// form layout\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 6,\r\n    span: 24\r\n  },\r\n};\r\n\r\n// form submission\r\ninterface FormSubmissionType {\r\n  name: string\r\n  description?: string\r\n}\r\n\r\n// form submission type schema\r\nconst FormSubmissionTypeSchema: yup.ObjectSchema<FormSubmissionType> = yup.object().shape({\r\n  name: yup.string().required().defined(),\r\n  description: yup.string(),\r\n}).defined()\r\n\r\n\r\nconst FormSubmissionTypeComponent: FunctionComponent = () => {\r\n  // use store\r\n  const { submissionStore } = useServiceStore()\r\n\r\n  // use modal form submission type\r\n  const modalFormSubmissionType = useModalFormSubmissionType()\r\n\r\n  // use form\r\n  const formSubmissionTypeContext = useForm<FormSubmissionType>({\r\n    resolver: yupResolver(FormSubmissionTypeSchema),\r\n    mode: 'onChange',\r\n  })\r\n\r\n  // submit handler\r\n  const onSubmitSubmissionType = async (submissionTypeData: FormSubmissionType) => {\r\n    const result = await submissionStore.createSubmissionType(submissionTypeData)\r\n    result && modalFormSubmissionType.close()\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...formSubmissionTypeContext}>\r\n      <Form onSubmitCapture={formSubmissionTypeContext.handleSubmit(onSubmitSubmissionType)} {...layout} layout=\"horizontal\">\r\n        <FieldInputComponent required label=\"Nama Jenis Pengajuan\" name=\"name\" placeholder=\"Nama Jenis Pengajuan\" />\r\n        <FieldInputComponent label=\"Deskripsi Jenis Pengajuan\" name=\"description\" placeholder=\"Deskripsi Jenis Pengajuan\" />\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block\r\n          // disabled={!formRegisterContext.formState.isValid}\r\n          >\r\n            SUBMIT\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nexport default memo(observer(FormSubmissionTypeComponent))\r\n","import React, { memo, FunctionComponent, ReactNode, createContext, useContext } from 'react'\r\nimport ModalComponent, { ModalStore } from 'common/component/modal/modal.component'\r\nimport { observer } from 'mobx-react'\r\nimport { useStore } from 'store/index.store'\r\nimport { observable, action, computed } from 'mobx'\r\nimport FormSubmissionTypeComponent from './form-submission-type.component'\r\n\r\nexport class ModalFormSubmissionTypeStore {\r\n  @observable show: boolean = false\r\n  @observable data: any\r\n\r\n  @action\r\n  open(data?: any) {\r\n    this.show = true\r\n    this.data = data\r\n  }\r\n\r\n  @action\r\n  close() {\r\n    this.show = false\r\n  }\r\n\r\n  @computed\r\n  get isOpen() {\r\n    return this.show\r\n  }\r\n\r\n  @computed\r\n  get getData() {\r\n    return this.data\r\n  }\r\n}\r\n// create context\r\nconst context = createContext(new ModalFormSubmissionTypeStore)\r\n// use context\r\nexport const useModalFormSubmissionType = () => useContext(context)\r\n\r\nconst ModalFormSubmissionTypeComponent: FunctionComponent = () => {\r\n  // use modal form submissionType\r\n  const modalFormSubmissionType = useModalFormSubmissionType()\r\n\r\n  // close modal\r\n  const closeModalFormSubmissionType = () => modalFormSubmissionType.close()\r\n\r\n  return (\r\n    <ModalComponent\r\n      title=\"Form Jenis Pengajuan\"\r\n      visible={modalFormSubmissionType.isOpen}\r\n      onCancel={closeModalFormSubmissionType}\r\n      footer={null}\r\n      // width={1000}\r\n    >\r\n      <FormSubmissionTypeComponent />\r\n    </ModalComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(ModalFormSubmissionTypeComponent))\r\n","import React, { FunctionComponent, memo } from 'react'\r\nimport { EditOutlined, EllipsisOutlined, EyeOutlined, FileOutlined } from '@ant-design/icons'\r\nimport { Dropdown, Menu } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// interface props \r\ninterface TableActionComponentProps {\r\n  id: string | number\r\n}\r\n\r\nconst TableActionComponent: FunctionComponent<TableActionComponentProps> = ({ id }) => {\r\n\r\n  // action menu\r\n  const ActionMenu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <EditOutlined style={{ color: 'darkorange' }} /> Edit\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <Link to={`/main/submission/type/requirement/${id}`}> <FileOutlined style={{ color: 'blue' }} /> Set Dokumen Kebutuhan </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <EyeOutlined style={{ color: 'blue' }} /> Detail\r\n      </Menu.Item>\r\n      {/* <Menu.Item key=\"1\">\r\n          <a href=\"http://www.taobao.com/\">2nd menu item</a>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"3\">3rd menu item</Menu.Item> */}\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <Dropdown overlay={ActionMenu} trigger={['click']} placement=\"bottomRight\">\r\n      <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n        <EllipsisOutlined style={{ fontSize: 24 }} />\r\n      </a>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default memo(TableActionComponent)","import React, { memo, FunctionComponent, useEffect } from 'react'\r\nimport { Table, Tag, Space, Button, Tooltip } from 'antd'\r\nimport { ColumnsType } from 'antd/lib/table';\r\nimport { CardComponent } from 'common/component/index.component';\r\nimport { useModalFormSubmissionType } from './modal-form-submission-type.component';\r\nimport TableSubmissionTypeActionComponent from './table-submission-type-action.component';\r\nimport { useServiceStore } from 'store/service/_index-service.store';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst dataSource = [\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'admin',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'helpdesk',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'verifikator',\r\n    status: false,\r\n  },\r\n];\r\n\r\n\r\nconst TableSubmissionTypeComponent: FunctionComponent = () => {\r\n  // use store\r\n  const { submissionStore } = useServiceStore()\r\n\r\n  // use modal form submission type\r\n  const modalFormSubmissionType = useModalFormSubmissionType()\r\n\r\n  // open modal form submission type\r\n  const openModalFormSubmissionType = () => modalFormSubmissionType.open()\r\n\r\n  const columns: ColumnsType<any> = [\r\n    {\r\n      title: 'No',\r\n      key: 'no',\r\n      render: (value, record, index) => index+1,\r\n      width: 50\r\n    },\r\n    // {\r\n    //   title: 'ID',\r\n    //   dataIndex: 'id',\r\n    //   key: 'id',\r\n    // },\r\n    {\r\n      title: 'Nama Jenis Pengajuan',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Deskripsi Jenis Pengajuan',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n      render: (description) => <span style={{ color: 'rgba(0,0,0,0.3)' }}> <i> {description || `Tidak ada deskripsi`} </i> </span>\r\n    },\r\n    // {\r\n    //   title: 'Role',\r\n    //   dataIndex: 'role',\r\n    //   key: 'role',\r\n    //   render: (role) => <Tag> {role} </Tag>\r\n    // },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'active',\r\n      key: 'active',\r\n      render: (isActive) => <Tag color={isActive ? 'green' : 'red'}> {isActive ? 'Active' : 'Inactive'} </Tag>,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      width: 150,\r\n      render: (value, record, index) => (<TableSubmissionTypeActionComponent id={record.id} />)\r\n    },\r\n  ];\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    submissionStore.fetchSubmissionTypes()\r\n  }, [])\r\n\r\n  return (\r\n    <CardComponent>\r\n      <Table dataSource={submissionStore.getSubmissionTypes} columns={columns} size=\"small\" />\r\n    </CardComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(TableSubmissionTypeComponent))\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { HeaderComponent, PageTransitionComponent } from 'common/component/index.component'\r\nimport { Button } from 'antd'\r\nimport TableSubmissionTypeComponent from '../component/table-submission-type.component'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport ModalFormSubmissionType, { useModalFormSubmissionType } from '../component/modal-form-submission-type.component'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst SubmissionTypePage: FunctionComponent = () => {\r\n  // use modal form submission type\r\n  const modalFormSubmissionType = useModalFormSubmissionType()\r\n\r\n  // open modal\r\n  const openModalFormSubmissionType = () => modalFormSubmissionType.open()\r\n\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent\r\n        title=\"Jenis Pengajuan\"\r\n        extra={[\r\n          <Button key=\"extra:1\" type=\"primary\" icon={<PlusOutlined />} onClick={openModalFormSubmissionType}> Create Jenis Pengajuan </Button>\r\n        ]}\r\n      />\r\n\r\n      <TableSubmissionTypeComponent />\r\n\r\n      {/* MODAL CREATE OR EDIT SUBMISSION TYPE */}\r\n      <ModalFormSubmissionType />\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(SubmissionTypePage))\r\n","import React, { memo, FunctionComponent, useState } from 'react'\r\nimport { Form, Button, Checkbox, Typography, Upload } from 'antd'\r\nimport { FieldInputComponent } from 'common/component/index.component'\r\nimport { Controller, FormProvider, useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers'\r\nimport * as yup from 'yup'\r\nimport { UploadOutlined } from '@ant-design/icons'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useModalFormSubmissionTypeRequirement } from './modal-form-submission-type-requirement.component'\r\n\r\n// form layout\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 6,\r\n    span: 24\r\n  },\r\n};\r\n\r\n// form submission type requirement\r\ninterface FormSubmissionTypeRequirement {\r\n  name: string\r\n  description?: string\r\n  template?: string\r\n  isRequired?: boolean\r\n}\r\n\r\n// form submission type schema\r\nconst FormSubmissionTypeRequirementSchema: yup.ObjectSchema<FormSubmissionTypeRequirement> = yup.object().shape({\r\n  name: yup.string().required().defined(),\r\n  description: yup.string(),\r\n  template: yup.string(),\r\n  isRequired: yup.boolean()\r\n}).defined()\r\n\r\n\r\n\r\nconst FormSubmissionTypeRequirementComponent: FunctionComponent = () => {\r\n  // state\r\n  const [fileList, setFileList] = useState<any>([])\r\n\r\n  // use param\r\n  const { submissionTypeId } = useParams<{ submissionTypeId: string }>()\r\n\r\n  // use modal form submission type requirement\r\n  const modalFormSubmissionTypeRequirement = useModalFormSubmissionTypeRequirement()\r\n\r\n  // upload props\r\n  const uploadProps = {\r\n    // action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    accept: '.pdf',\r\n    multiple: false,\r\n    beforeUpload: (file: any) => {\r\n      // this.setState(state => ({\r\n      //   fileList: [...state.fileList, file],\r\n      // }));\r\n      setFileList([file])\r\n      return false;\r\n    },\r\n    onRemove: (file: any) => {\r\n      setFileList([])\r\n    },\r\n    fileList\r\n  };\r\n\r\n  // use service store\r\n  const { submissionStore } = useServiceStore()\r\n\r\n  // use form\r\n  const formSubmissionTypeRequirementContext = useForm<FormSubmissionTypeRequirement>({\r\n    resolver: yupResolver(FormSubmissionTypeRequirementSchema),\r\n    mode: 'onChange',\r\n  })\r\n\r\n  // submit handler\r\n  const onSubmitSubmissionType = (submissionTypeRequirementData: FormSubmissionTypeRequirement) => {\r\n    // console.log(submissionTypeRequirementData)\r\n    // console.log(fileList)\r\n    const formData = new FormData()\r\n    formData.append(\"name\", submissionTypeRequirementData.name)\r\n    formData.append(\"description\", submissionTypeRequirementData.description || '')\r\n    formData.append(\"template\", fileList[0])\r\n    formData.append(\"isRequired\", submissionTypeRequirementData.isRequired ? 'true' : 'false')\r\n\r\n    const result = submissionStore.createSubmissionTypeRequirement(submissionTypeId, formData)\r\n    result && modalFormSubmissionTypeRequirement.close()\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...formSubmissionTypeRequirementContext}>\r\n      <Form onSubmitCapture={formSubmissionTypeRequirementContext.handleSubmit(onSubmitSubmissionType)} {...layout} layout=\"horizontal\">\r\n        <FieldInputComponent required label=\"Nama Dokumen\" name=\"name\" placeholder=\"Nama Dokumen\" />\r\n        <FieldInputComponent label=\"Deskripsi Dokumen\" name=\"description\" placeholder=\"Deskripsi Dokumen\" />\r\n        <Form.Item\r\n          label=\"Template file\"\r\n          validateStatus={formSubmissionTypeRequirementContext.errors?.isRequired?.message && 'error'}\r\n          help={formSubmissionTypeRequirementContext.errors?.isRequired?.message}\r\n        >\r\n          <Upload {...uploadProps} className=\"test\" ref={formSubmissionTypeRequirementContext.register} name=\"template\">\r\n            <Button>\r\n              <UploadOutlined /> Upload\r\n            </Button>\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Wajib upload\"\r\n          validateStatus={formSubmissionTypeRequirementContext.errors?.isRequired?.message && 'error'}\r\n          help={formSubmissionTypeRequirementContext.errors?.isRequired?.message}\r\n        >\r\n          <Controller\r\n            name=\"isRequired\"\r\n            control={formSubmissionTypeRequirementContext.control}\r\n            render={({ onChange, onBlur, value }) => (\r\n              <Checkbox onChange={e => { onChange(e.target.checked) }} checked={value}> <Typography.Text strong > Ya </Typography.Text>  </Checkbox>\r\n            )}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block\r\n          // disabled={!formRegisterContext.formState.isValid}\r\n          >\r\n            SUBMIT\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nexport default memo(observer(FormSubmissionTypeRequirementComponent))\r\n","import React, { memo, FunctionComponent, ReactNode, createContext, useContext } from 'react'\r\nimport ModalComponent, { ModalStore } from 'common/component/modal/modal.component'\r\nimport { observer } from 'mobx-react'\r\nimport { useStore } from 'store/index.store'\r\nimport { observable, action, computed } from 'mobx'\r\nimport FormSubmissionTypeRequirementComponent from './form-submission-type-requirement.component'\r\n\r\nexport class ModalFormSubmissionTypeRequirementStore {\r\n  @observable show: boolean = false\r\n  @observable data: any\r\n\r\n  @action\r\n  open(data?: any) {\r\n    this.show = true\r\n    this.data = data\r\n  }\r\n\r\n  @action\r\n  close() {\r\n    this.show = false\r\n  }\r\n\r\n  @computed\r\n  get isOpen() {\r\n    return this.show\r\n  }\r\n\r\n  @computed\r\n  get getData() {\r\n    return this.data\r\n  }\r\n}\r\n// create context\r\nconst context = createContext(new ModalFormSubmissionTypeRequirementStore)\r\n// use context\r\nexport const useModalFormSubmissionTypeRequirement = () => useContext(context)\r\n\r\nconst ModalFormSubmissionTypeRequirementComponent: FunctionComponent = () => {\r\n  // use modal form submissionType\r\n  const modalFormSubmissionTypeRequirement = useModalFormSubmissionTypeRequirement()\r\n\r\n  // close modal\r\n  const closeModalFormSubmissionTypeRequirement = () => modalFormSubmissionTypeRequirement.close()\r\n\r\n  return (\r\n    <ModalComponent\r\n      title=\"Form Dokumen Kebutuhan\"\r\n      visible={modalFormSubmissionTypeRequirement.isOpen}\r\n      onCancel={closeModalFormSubmissionTypeRequirement}\r\n      footer={null}\r\n      // width={1000}\r\n    >\r\n      <FormSubmissionTypeRequirementComponent />\r\n    </ModalComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(ModalFormSubmissionTypeRequirementComponent))\r\n","import React, { FunctionComponent, memo } from 'react'\r\nimport { EditOutlined, EllipsisOutlined, EyeOutlined, FileOutlined } from '@ant-design/icons'\r\nimport { Dropdown, Menu } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// interface props \r\ninterface TableActionComponentProps {\r\n  id: string | number\r\n}\r\n\r\nconst TableActionComponent: FunctionComponent<TableActionComponentProps> = ({ id }) => {\r\n\r\n  // action menu\r\n  const ActionMenu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <EditOutlined style={{ color: 'darkorange' }} /> Edit\r\n      </Menu.Item>\r\n      {/* <Menu.Item key=\"1\">\r\n        <Link to={`/main/submission/type/requirement/${id}`}> <FileOutlined style={{ color: 'blue' }} /> Set Dokumen Kebutuhan </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <EyeOutlined style={{ color: 'blue' }} /> Detail\r\n      </Menu.Item> */}\r\n      {/* <Menu.Item key=\"1\">\r\n          <a href=\"http://www.taobao.com/\">2nd menu item</a>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"3\">3rd menu item</Menu.Item> */}\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <Dropdown overlay={ActionMenu} trigger={['click']} placement=\"bottomRight\">\r\n      <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n        <EllipsisOutlined style={{ fontSize: 24 }} />\r\n      </a>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default memo(TableActionComponent)","import React, { memo, FunctionComponent, useEffect } from 'react'\r\nimport { Table, Tag, Space, Button, Tooltip } from 'antd'\r\nimport { ColumnsType } from 'antd/lib/table';\r\nimport { CardComponent } from 'common/component/index.component';\r\nimport { useModalFormSubmissionType } from './modal-form-submission-type.component';\r\nimport TableSubmissionTypeActionComponent from './table-submission-type-requirement-action.component';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useServiceStore } from 'store/service/_index-service.store';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst dataSource = [\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'admin',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'helpdesk',\r\n    status: true,\r\n  },\r\n  {\r\n    id: '1',\r\n    nama: 'Mike',\r\n    email: 'Mike@email.com',\r\n    role: 'verifikator',\r\n    status: false,\r\n  },\r\n];\r\n\r\n\r\nconst TableSubmissionTypeRequirementComponent: FunctionComponent = () => {\r\n  // use param\r\n  const { submissionTypeId } = useParams<{ submissionTypeId: string }>()\r\n\r\n  // use service store\r\n  const { submissionStore } = useServiceStore()\r\n\r\n  // use modal form submission type\r\n  const modalFormSubmissionType = useModalFormSubmissionType()\r\n\r\n  // open modal form submission type\r\n  const openModalFormSubmissionType = () => modalFormSubmissionType.open()\r\n\r\n  const columns: ColumnsType<any> = [\r\n    {\r\n      title: 'No',\r\n      key: 'no',\r\n      render: (value, record, index) => index+1,\r\n      width: 50\r\n    },\r\n    // {\r\n    //   title: 'ID',\r\n    //   dataIndex: 'id',\r\n    //   key: 'id',\r\n    // },\r\n    {\r\n      title: 'Nama Dokumen',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Deskripsi Dokumen',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n    },\r\n    {\r\n      title: 'Template',\r\n      dataIndex: 'template',\r\n      key: 'template',\r\n      render: (template) => <a href={`${process.env.REACT_APP_API_URL}/submission/storage/template/${template}`} target=\"_blank\"> {template} </a>\r\n    },\r\n    {\r\n      title: 'Wajib Upload',\r\n      dataIndex: 'required',\r\n      key: 'required',\r\n      render: (isRequired) => <Tag color={isRequired ? 'green' : 'red'}> {isRequired ? 'Ya' : 'Tidak'} </Tag>,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      width: 150,\r\n      render: (value, record, index) => (<TableSubmissionTypeActionComponent id={record.id} />)\r\n    },\r\n  ];\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    submissionStore.fetchSubmissionTypeRequirements(submissionTypeId)\r\n    return () => {\r\n      submissionStore.dispatchSubmissionTypeRequirementsData()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <CardComponent>\r\n      <Table dataSource={submissionStore.getSubmissionTypeRequirements} columns={columns} size=\"small\" />\r\n    </CardComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(TableSubmissionTypeRequirementComponent))\r\n","import React, { memo, FunctionComponent } from 'react'\r\nimport { HeaderComponent, PageTransitionComponent } from 'common/component/index.component'\r\nimport { Button } from 'antd'\r\n// import TableSubmissionTypeComponent from '../component/table-submission-type.component'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport ModalFormSubmissionTypeRequirement, { useModalFormSubmissionTypeRequirement } from '../component/modal-form-submission-type-requirement.component'\r\nimport { observer } from 'mobx-react'\r\nimport TableSubmissionTypeRequirementComponent from '../component/table-submission-type-requirement.component'\r\n\r\nconst SubmissionTypeRequirementPage: FunctionComponent = () => {\r\n  // // use modal form submission type\r\n  const modalFormSubmissionTypeRequirement = useModalFormSubmissionTypeRequirement()\r\n\r\n  // // open modal\r\n  const openModalFormSubmissionTypeRequirement = () => modalFormSubmissionTypeRequirement.open()\r\n\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent\r\n        title=\"Dokumen Kebutuhan Pengajuan\"\r\n        extra={[\r\n          <Button key=\"extra:1\" type=\"primary\" icon={<PlusOutlined />} onClick={openModalFormSubmissionTypeRequirement}> Add Dokumen </Button>\r\n        ]}\r\n      />\r\n\r\n      <TableSubmissionTypeRequirementComponent />\r\n\r\n      {/* MODAL CREATE OR EDIT SUBMISSION TYPE */}\r\n      <ModalFormSubmissionTypeRequirement />\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(SubmissionTypeRequirementPage))\r\n","import React, { memo, FunctionComponent, useEffect, useState, Fragment } from 'react'\r\nimport { CardComponent, HeaderComponent, PageTransitionComponent } from 'common/component/index.component'\r\nimport { Alert, Button, Form, Space, Table, Tag, Typography, Upload as AntUpload } from 'antd'\r\n// import TableRoleComponent from '../component/table-role.component'\r\nimport { PlusOutlined, UploadOutlined } from '@ant-design/icons'\r\n// import ModalFormRoleComponent, { useModalFormRole } from '../component/modal-form-role.component'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport CreateSubmissionComponent from 'common/component/submission/create-submission.component'\r\nimport styled from 'styled-components'\r\n\r\nconst Upload = styled(AntUpload)`\r\n  display: grid;\r\n  grid-template-columns: 120px 250px;\r\n`\r\n\r\n\r\n\r\nconst SubmissionPage: FunctionComponent = () => {\r\n  // use modal form role\r\n  // const modalFormRole = useModalFormRole()\r\n\r\n  // open modal\r\n  // const openModalFormRole = () => modalFormRole.open()\r\n\r\n  // use service store\r\n  const { authStore } = useServiceStore()\r\n\r\n  // use state\r\n  const [user, setUser] = useState<any>()\r\n\r\n  // use param\r\n  const param = useParams<{ submissionTypeId: string }>()\r\n\r\n  // use service store\r\n  const { submissionStore } = useServiceStore()\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Index',\r\n      key: 'name',\r\n      width: 50,\r\n      render: (text: any, record: any, index: number) => <b>{index + 1}</b>,\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      // width: 200,\r\n      render: (text: any, record: any, index: number) => (\r\n        <Fragment>\r\n          {record?.required && <span style={{ color: 'red', fontWeight: 'bold' }}> * </span>}\r\n          {record?.template ? <a href={`${process.env.REACT_APP_API_URL}/submission/storage/template/${record?.template}`} target=\"_blank\"> {text} </a> : <span> {text} </span>}\r\n        </Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 200,\r\n      render: (isActive: any) => {\r\n        switch (isActive) {\r\n          // case 100:\r\n          //   return (<Tag> Belum Diverifikasi </Tag>)\r\n          //   break;\r\n          // case 103:\r\n          //   return (<Tag color=\"green\"> Approve </Tag>)\r\n          //   break;\r\n          case 102:\r\n            return (<Tag color=\"red\"> Reject </Tag>)\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n    },\r\n    // {\r\n    //   title: 'Status',\r\n    //   dataIndex: 'helpdeskStatus',\r\n    //   key: 'helpdeskStatus',\r\n    //   width: 200,\r\n    //   render: (isActive: any) => {\r\n    //     switch (isActive) {\r\n    //       case 100:\r\n    //         return (<Tag> Belum Diverifikasi Helpdesk </Tag>)\r\n    //         break;\r\n    //       case 103:\r\n    //         return (<Tag color=\"green\"> Approve Helpdesk </Tag>)\r\n    //         break;\r\n    //       case 102:\r\n    //         return (<Tag color=\"red\"> Reject Helpdesk </Tag>)\r\n    //         break;\r\n    //       default:\r\n    //         break;\r\n    //     }\r\n    //   },\r\n    // },\r\n    // {\r\n    //   title: 'Status',\r\n    //   dataIndex: 'verifikatorStatus',\r\n    //   key: 'verifikatorStatus',\r\n    //   width: 200,\r\n    //   render: (isActive: any) => {\r\n    //     switch (isActive) {\r\n    //       case 100:\r\n    //         return (<Tag> Belum Diverifikasi Verifikator </Tag>)\r\n    //         break;\r\n    //       case 103:\r\n    //         return (<Tag color=\"green\"> Approve Verifikator </Tag>)\r\n    //         break;\r\n    //       case 102:\r\n    //         return (<Tag color=\"red\"> Reject Verifikator </Tag>)\r\n    //         break;\r\n    //       default:\r\n    //         break;\r\n    //     }\r\n    //   },\r\n    // },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 370,\r\n      render: (text: any, record: any, index: number) => {\r\n        const Upload = styled(AntUpload)`\r\n          display: grid;\r\n          grid-template-columns: 120px 250px;\r\n        `\r\n        const props = {\r\n          action: `${process.env.REACT_APP_API_URL}/submission/requirement/${record.id}`,\r\n          // method: 'Put',\r\n          multiple: false,\r\n          accept: '.pdf',\r\n          data: {\r\n            test: '1',\r\n            test2: '2'\r\n          }\r\n          // beforeUpload: \r\n        };\r\n\r\n        return (\r\n          <div>\r\n            {submissionStore?.getActiveSubmission?.status == 100 && (record.status == 100 || record.status == 102) && (\r\n              <Upload {...props} className=\"test\">\r\n                <Button>\r\n                  <UploadOutlined /> Upload\r\n              </Button>\r\n              </Upload>\r\n            )}\r\n            {submissionStore?.getActiveSubmission?.status == 101 && record.status == 100 && (\r\n              <a href={`${process.env.REACT_APP_API_URL}/submission/storage/submission/${record?.file}`} target=\"_blank\"> {record.file} </a>\r\n            )}\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n  ];\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    init()\r\n  }, [param.submissionTypeId])\r\n\r\n  const init = async () => {\r\n    const user = `${await authStore.getUser()}`\r\n    const parse = JSON.parse(user)\r\n    setUser(parse)\r\n    // console.log(parse)\r\n    submissionStore.fetchActiveSubmission(param.submissionTypeId, parse.id)\r\n  }\r\n\r\n  // create submission\r\n  const createSubmission = () => {\r\n    submissionStore.createSubmission(param.submissionTypeId, user.id)\r\n  }\r\n\r\n  // submit submission\r\n  const submitSubmission = () => {\r\n    submissionStore.submitSubmission(submissionStore?.getActiveSubmission?.id, param.submissionTypeId, user.id)\r\n  }\r\n\r\n  // cancel submission\r\n  const cancelSubmission = () => {\r\n    submissionStore.cancelSubmission(submissionStore?.getActiveSubmission?.id, param.submissionTypeId, user.id)\r\n  }\r\n\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent\r\n        title=\"Pengajuan Registrasi dan Verifikasi\"\r\n      // extra={[\r\n      //   <Button key=\"extra:1\" type=\"primary\" icon={<PlusOutlined />}> Create Submission </Button>\r\n      // ]}\r\n      />\r\n\r\n      {/* CREATE SUBMISSION BUTTON */}\r\n      {!submissionStore?.getActiveSubmission && <CreateSubmissionComponent onCreate={createSubmission} />}\r\n\r\n      {/* <TableRoleComponent />\r\n\r\n      {/* MODAL CREATE OR EDIT ROLE */}\r\n      {/* <ModalFormRoleComponent /> */}\r\n      {/* {console.log('active submission', submissionStore?.getActiveSubmission?.submissionRequirements)} */}\r\n      {submissionStore?.getActiveSubmission && (\r\n        <PageTransitionComponent direction=\"vertical\">\r\n          <CardComponent elevation=\"e300\">\r\n            <HeaderComponent title=\"Upload Dokumen Persyaratan\" />\r\n            <Form.Item>\r\n              <Alert type=\"warning\" message={\r\n                <Typography.Text strong >\r\n                  Dokumen persyaratan yang diupload untuk pengajuan masih dapat diubah selama belum menekan tombol <b>SUBMIT</b>.\r\n                  Pastikan dokumen yang anda upload sudah sesuai sebelum melakukan <b>SUBMIT</b> pengajuan\r\n                </Typography.Text>\r\n              } />\r\n            </Form.Item>\r\n            <Table columns={columns} dataSource={submissionStore?.getActiveSubmission?.submissionRequirements} pagination={false} showHeader={false} />\r\n            <div style={{ textAlign: 'center', marginTop: 15 }}>\r\n              {submissionStore?.getActiveSubmission.status !== 101 && (\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={submitSubmission}> SUBMIT </Button>\r\n                  <Button type=\"default\" danger onClick={cancelSubmission}> CANCEL </Button>\r\n                </Space>\r\n              )}\r\n            </div>\r\n          </CardComponent>\r\n        </PageTransitionComponent>\r\n      )}\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(SubmissionPage))\r\n","import { RouteConfig } from \"react-router-config\";\r\nimport AppRoot from \"App.root\";\r\nimport LoginPage from \"module/auth/page/login.page\";\r\nimport RegisterPage from \"module/auth/page/register.page\";\r\nimport MainPage from \"module/main/page/main.page\";\r\nimport UserPage from \"module/user/page/user.page\";\r\nimport AccountPage from \"module/account/page/account.page\";\r\nimport ChangeDataPage from \"module/change-data/page/change-data.page\";\r\nimport ChangeEmailPage from \"module/change-email/page/change-email.page\";\r\nimport PublicPage from \"module/public/page/public.page\";\r\nimport PasswordForgetPage from \"module/auth/page/password-forget.page\";\r\nimport { default as VerificationAccountPage } from \"module/account/page/verification.page\";\r\nimport { default as VerificationApprovalAccountPage } from \"module/account/page/verification-approval.page\";\r\nimport { default as VerificationChangeDataPage } from \"module/change-data/page/verification.page\";\r\nimport { default as VerificationApprovalChangeDataPage } from \"module/change-data/page/verification-approval.page\";\r\nimport { default as VerificationChangeEmailPage } from \"module/change-email/page/verification.page\";\r\nimport { default as VerificationApprovalChangeEmailPage } from \"module/change-email/page/verification-approval.page\";\r\nimport ServicePage from \"module/service/page/service.page\";\r\nimport ProviderPage from \"module/provider/page/provider.page\";\r\nimport ConsultOnlinePage from \"module/consult-online/page/consult-online.page\";\r\nimport { default as VerificationConsultationOnlinePage } from \"module/consult-online/page/verification.page\";\r\nimport ConsultF2FPage from \"module/consult-f2f/page/consult-f2f.page\";\r\nimport { default as VerificationConsultationF2FPage } from \"module/consult-f2f/page/verification.page\";\r\nimport RolePage from \"module/role/page/role.page\";\r\nimport SubmissionTypePage from \"module/submission/page/submission-type.page\";\r\nimport SubmissionTypeRequirementPage from \"module/submission/page/submission-type-requirement.page\";\r\nimport SubmissionPage from \"module/submission/page/submission.page\";\r\nimport SubmissionApprovalPage from \"module/submission/page/submission-approval.page\";\r\nimport SubmissionApprovalVerificationPage from \"module/submission/page/submission-approval-verification.page\";\r\n\r\nexport const ROUTE: RouteConfig = {\r\n  component: AppRoot,\r\n  routes: [\r\n    // {\r\n    //   path: '/',\r\n    //   exact: true,\r\n    //   component: PublicPage\r\n    // },\r\n    {\r\n      path: '/auth/login',\r\n      exact: true,\r\n      component: LoginPage\r\n    },\r\n    {\r\n      path: '/auth/password/forget',\r\n      exact: true,\r\n      component: PasswordForgetPage\r\n    },\r\n    // {\r\n    //   path: '/password/reset',\r\n    //   exact: true,\r\n    //   component: PasswordResetPage\r\n    // },\r\n    {\r\n      path: '/auth/register',\r\n      exact: true,\r\n      component: RegisterPage\r\n    },\r\n    {\r\n      path: '/main',\r\n      exact: false,\r\n      component: MainPage,\r\n      routes: [\r\n\r\n        // user\r\n        {\r\n          path: '/main/user',\r\n          exact: true,\r\n          component: UserPage\r\n        },\r\n\r\n        // role\r\n        {\r\n          path: '/main/role',\r\n          exact: true,\r\n          component: RolePage\r\n        },\r\n\r\n        // penyedia\r\n        {\r\n          path: '/main/provider',\r\n          exact: true,\r\n          component: ProviderPage\r\n        },\r\n        // {\r\n        //   path: '/main/role',\r\n        //   exact: true,\r\n        //   component: RolePage\r\n        // },\r\n        // {\r\n        //   path: '/main/permission',\r\n        //   exact: true,\r\n        //   component: PermissionPage\r\n        // },\r\n        // {\r\n        //   path: '/main/access-control',\r\n        //   exact: true,\r\n        //   component: AccessControlPage\r\n        // },\r\n        // {\r\n        //   path: '/main/scheduler',\r\n        //   exact: true,\r\n        //   component: SchedulerPage\r\n        // },\r\n\r\n        // layanan\r\n        {\r\n          path: '/main/service',\r\n          exact: true,\r\n          component: ServicePage\r\n        },\r\n\r\n        // submission type\r\n        {\r\n          path: '/main/submission/type',\r\n          exact: true,\r\n          component: SubmissionTypePage\r\n        },\r\n        // submission type requirement\r\n        {\r\n          path: '/main/submission/type/requirement/:submissionTypeId',\r\n          exact: true,\r\n          component: SubmissionTypeRequirementPage\r\n        },\r\n        // submission\r\n        {\r\n          path: '/main/submission/:submissionTypeId',\r\n          exact: true,\r\n          component: SubmissionPage\r\n        },\r\n        // submission approval\r\n        {\r\n          path: '/main/submission/verification/:submissionTypeId',\r\n          exact: true,\r\n          component: SubmissionApprovalPage\r\n        },\r\n\r\n        // submission approval verification\r\n        {\r\n          path: '/main/submission/verification/:submissionTypeId/:submissionId',\r\n          exact: true,\r\n          component: SubmissionApprovalVerificationPage\r\n        },\r\n\r\n\r\n        // pembuatan akun baru\r\n        {\r\n          path: '/main/account',\r\n          exact: true,\r\n          component: AccountPage\r\n        },\r\n        {\r\n          path: '/main/account/verification',\r\n          exact: true,\r\n          component: VerificationAccountPage\r\n        },\r\n        {\r\n          path: '/main/account/verification/:submissionId',\r\n          exact: true,\r\n          component: VerificationApprovalAccountPage\r\n        },\r\n        // ubah data\r\n        {\r\n          path: '/main/change-data',\r\n          exact: true,\r\n          component: ChangeDataPage\r\n        },\r\n        {\r\n          path: '/main/change-data/verification',\r\n          exact: true,\r\n          component: VerificationChangeDataPage\r\n        },\r\n        {\r\n          path: '/main/change-data/verification/:submisionId',\r\n          exact: true,\r\n          component: VerificationApprovalChangeDataPage\r\n        },\r\n        // ganti email\r\n        {\r\n          path: '/main/change-email',\r\n          exact: true,\r\n          component: ChangeEmailPage\r\n        },\r\n        {\r\n          path: '/main/change-email/verification',\r\n          exact: true,\r\n          component: VerificationChangeEmailPage\r\n        },\r\n        {\r\n          path: '/main/change-email/verification/:submissionId',\r\n          exact: true,\r\n          component: VerificationApprovalChangeEmailPage\r\n        },\r\n        // konsultasi online\r\n        {\r\n          path: '/main/consultation/online',\r\n          exact: true,\r\n          component: ConsultOnlinePage\r\n        },\r\n        {\r\n          path: '/main/consultation/online/verification',\r\n          exact: true,\r\n          component: VerificationConsultationOnlinePage\r\n        },\r\n        // {\r\n        //   path: '/main/change-email/verification/:submissionId',\r\n        //   exact: true,\r\n        //   component: VerificationApprovalChangeEmailPage\r\n        // },\r\n        // konsultasi tatap muka\r\n        {\r\n          path: '/main/consultation/ftf',\r\n          exact: true,\r\n          component: ConsultF2FPage\r\n        },\r\n        {\r\n          path: '/main/consultation/ftf/verification',\r\n          exact: true,\r\n          component: VerificationConsultationF2FPage\r\n        },\r\n        // {\r\n        //   path: '/main/change-email/verification/:submissionId',\r\n        //   exact: true,\r\n        //   component: VerificationApprovalChangeEmailPage\r\n        // },\r\n\r\n\r\n        // {\r\n        //   path: '/main/pengajuan/ganti-email',\r\n        //   exact: true,\r\n        //   component: PengajuanGantiEmailPage\r\n        // },\r\n        // {\r\n        //   path: '/main/verifikasi/ganti-email',\r\n        //   exact: true,\r\n        //   component: VerifikasiListPengajuanGantiEmailPage\r\n        // },\r\n        // {\r\n        //   path: '/main/verifikasi/ganti-email/:id',\r\n        //   exact: true,\r\n        //   component: VerifikasiPengajuanGantiEmailPage\r\n        // },\r\n        // {\r\n        //   path: '*',\r\n        //   // exact: true,\r\n        //   component: DefaultPage\r\n        // },\r\n      ]\r\n    },\r\n    {\r\n      path: '/',\r\n      exact: true,\r\n      component: PublicPage\r\n    },\r\n    // {\r\n    //   path: '*',\r\n    //   // exact: true,\r\n    //   component: DefaultPage\r\n    // },\r\n  ]\r\n}","import React, { memo, FunctionComponent, useState, useEffect } from 'react'\r\nimport { CardComponent, HeaderComponent, PageTransitionComponent } from 'common/component/index.component'\r\nimport { Alert, Button, Form, Space, Table, Typography, Upload as AntUpload } from 'antd'\r\n// import TableRoleComponent from '../component/table-role.component'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\n// import ModalFormRoleComponent, { useModalFormRole } from '../component/modal-form-role.component'\r\nimport { observer } from 'mobx-react'\r\nimport { useServiceStore } from 'store/service/_index-service.store'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nconst SubmissionApprovalPage: FunctionComponent = () => {\r\n  // use modal form role\r\n  // const modalFormRole = useModalFormRole()\r\n\r\n  // open modal\r\n  // const openModalFormRole = () => modalFormRole.open()\r\n\r\n  // use service store\r\n  const { authStore } = useServiceStore()\r\n\r\n  // use state\r\n  const [user, setUser] = useState<any>()\r\n\r\n  // use param\r\n  const param = useParams<{ submissionTypeId: string }>()\r\n\r\n  // use service store\r\n  const { submissionStore } = useServiceStore()\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    init()\r\n  }, [param.submissionTypeId])\r\n\r\n  const init = async () => {\r\n    const user = `${await authStore.getUser()}`\r\n    const parse = JSON.parse(user)\r\n    setUser(parse)\r\n    // console.log(parse)\r\n    if (parse?.role?.name == 'Helpdesk') {\r\n      submissionStore.fetchSubmissionVerificationHelpdesk(param.submissionTypeId)\r\n    } else {\r\n      submissionStore.fetchSubmissionVerificationVerifikator(param.submissionTypeId)\r\n    }\r\n  }\r\n\r\n\r\n  // const columns = [\r\n  //   {\r\n  //     title: 'Index',\r\n  //     key: 'index',\r\n  //     // width: 200,\r\n  //     render: (text: any, record: any, index: number) => <b>{index + 1}</b>,\r\n  //   },\r\n  //   {\r\n  //     title: 'ID Pengajuan',\r\n  //     dataIndex: 'id',\r\n  //     key: 'id',\r\n  //     // width: 200,\r\n  //     render: (id: any) => <a>{id}</a>,\r\n  //   },\r\n  //   {\r\n  //     title: 'Name',\r\n  //     dataIndex: 'name',\r\n  //     key: 'name',\r\n  //     // width: 200,\r\n  //     render: (text: any) => <span>{text}</span>,\r\n  //   },\r\n  //   {\r\n  //     title: 'Action',\r\n  //     key: 'action',\r\n  //     // width: 370,\r\n  //     render: (text: any, record: any) => (\r\n  //       // <Upload {...props} className=\"test\">\r\n  //       //   <Button>\r\n  //       //     <UploadOutlined /> Upload\r\n  //       //   </Button>\r\n  //       // </Upload>\r\n  //       <Space>\r\n  //         <Button type=\"primary\" color=\"green\"> Approve </Button>\r\n  //         <Button type=\"primary\" danger> Reject </Button>\r\n  //       </Space>\r\n  //     ),\r\n  //   },\r\n  // ];\r\n\r\n  const columns = [\r\n    {\r\n      title: 'ID Pengajuan',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      render: (submissionId: string) => <Link to={`/main/submission/verification/${param.submissionTypeId}/${submissionId}`}> {submissionId} </Link>\r\n    },\r\n    {\r\n      title: 'Perusahaan',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    // {\r\n    //   title: 'Status',\r\n    //   dataIndex: 'status',\r\n    //   key: 'status',\r\n    // },\r\n    // {\r\n    //   title: 'Progres Verifikasi',\r\n    //   dataIndex: 'documents',\r\n    //   key: 'documents',\r\n    //   render: (documents: any) => <Progress percent={progressDocument(documents)} size=\"small\" status=\"active\" />\r\n    // },\r\n  ];\r\n\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent\r\n        title=\"Verifikasi Pengajuan\"\r\n      // extra={[\r\n      //   <Button key=\"extra:1\" type=\"primary\" icon={<PlusOutlined />}> Verifikasi Pengajuan </Button>\r\n      // ]}\r\n      />\r\n\r\n      {/* <TableRoleComponent />\r\n\r\n      {/* MODAL CREATE OR EDIT ROLE */}\r\n      {/* <ModalFormRoleComponent /> */}\r\n\r\n      <CardComponent elevation=\"e300\">\r\n        <Table columns={columns} dataSource={submissionStore.getSubmissionApprovalData} />\r\n      </CardComponent>\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(SubmissionApprovalPage))\r\n","import React, { memo, FunctionComponent, useState, useEffect } from 'react'\r\nimport { PageTransitionComponent, HeaderComponent } from 'common/component/index.component'\r\nimport { Button, Empty, Typography, Space, Form, Table, Tag, Upload as AntUpload, Alert } from 'antd'\r\nimport { observer } from 'mobx-react';\r\nimport { useServiceStore } from 'store/service/_index-service.store';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'FORMULIR KEIKUTSERTAAN',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'FORMULIR PENDAFTARAN',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'KTP DIREKTUR',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'NPWP PERUSAHAAN',\r\n  },\r\n  {\r\n    key: '5',\r\n    name: `TDP/ NIB – OSS`,\r\n  },\r\n  {\r\n    key: '6',\r\n    name: 'IJIN USAHA (SIUP/IUJK/IUI/TDI/PAK/PAB/DLL) – OSS',\r\n  },\r\n  {\r\n    key: '7',\r\n    name: 'IJIN LOKASI (SITU/HOG/IG/UUG) – OSS',\r\n  },\r\n  {\r\n    key: '8',\r\n    name: 'PKP/ SK – NON PKP',\r\n  },\r\n  {\r\n    key: '9',\r\n    name: 'AKTA PENDIRIAN DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  },\r\n  {\r\n    key: '10',\r\n    name: 'AKTA PERUBAHAN TERAKHIR DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  },\r\n  {\r\n    key: '11',\r\n    name: 'DOKUMEN PENDUKUNG LAINNYA',\r\n  },\r\n  // {\r\n  //   key: '12',\r\n  //   name: 'AKTA PENDIRIAN DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  // },\r\n  // {\r\n  //   key: '9',\r\n  //   name: 'AKTA PENDIRIAN DAN SK PENGUKUHAN KEMENKUMHAM SESUAI UU NO 40 TAHUN 2007 (UNTUK PT) ATAU AHU (UNTUK CV)',\r\n  // },\r\n];\r\n\r\nconst SubmissionApprovalVerificationPage: FunctionComponent = () => {\r\n  // use service store\r\n  const { authStore } = useServiceStore()\r\n\r\n  // use history\r\n  const history = useHistory()\r\n\r\n  // use state\r\n  const [user, setUser] = useState<any>()\r\n\r\n  // use param\r\n  const param = useParams<{ submissionTypeId: string, submissionId: string }>()\r\n\r\n  // use service store\r\n  const { submissionStore } = useServiceStore()\r\n\r\n  // approve\r\n  const approve = (submissionRequirementId: string) => {\r\n    submissionStore.approveRequirement(param.submissionTypeId, param.submissionId, submissionRequirementId)\r\n  }\r\n\r\n  // reject\r\n  const reject = (submissionRequirementId: string) => {\r\n    submissionStore.rejectRequirement(param.submissionTypeId, param.submissionId, submissionRequirementId)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Index',\r\n      key: 'name',\r\n      width: 50,\r\n      render: (text: any, record: any, index: number) => <b>{index + 1}</b>,\r\n    },\r\n    {\r\n      title: 'Nama Dokumen',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      // width: 200,\r\n      render: (name: any, record: any, index: number) => <span>{name}</span>\r\n    },\r\n    {\r\n      title: 'Dokumen Upload',\r\n      dataIndex: 'file',\r\n      key: 'file',\r\n      width: 200,\r\n      render: (file: any, record: any, index: number) => (file ? <a href={`${process.env.REACT_APP_API_URL}/submission/storage/submission/${file}`} target=\"_blank\"> {file} </a> : 'Belum upload')\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      // width: 200,\r\n      render: (isActive: any) => {\r\n        switch (isActive) {\r\n          case 100:\r\n            return (<Tag> Belum Diverifikasi </Tag>)\r\n            break;\r\n          case 103:\r\n            return (<Tag color=\"green\"> Approve </Tag>)\r\n            break;\r\n          case 102:\r\n            return (<Tag color=\"red\"> Reject </Tag>)\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      width: 200,\r\n      render: (text: any, record: any) => (\r\n        // <Upload {...props} className=\"test\">\r\n        //   <Button>\r\n        //     <UploadOutlined /> Upload\r\n        //   </Button>\r\n        // </Upload>\r\n        <Space>\r\n          <Button type=\"primary\" color=\"green\" onClick={() => approve(record.id)}> Approve </Button>\r\n          <Button type=\"primary\" danger onClick={() => reject(record.id)}> Reject </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // use effect\r\n  useEffect(() => {\r\n    init()\r\n  }, [])\r\n\r\n  const init = async () => {\r\n    const user = `${await authStore.getUser()}`\r\n    const parse = JSON.parse(user)\r\n    setUser(parse)\r\n    submissionStore.fetchSubmissionApprovalRequirement(param.submissionTypeId, param.submissionId)\r\n    // // console.log(parse)\r\n    // if (parse?.role?.name == 'Helpdesk') {\r\n    //   submissionStore.fetchSubmissionVerificationHelpdesk(param.submissionTypeId)\r\n    // } else {\r\n    //   submissionStore.fetchSubmissionVerificationVerifikator(param.submissionTypeId)\r\n    // }\r\n  }\r\n\r\n  // submit approva\r\n  const submitApproval = () => {\r\n    if (user.role.name == 'Helpdesk') {\r\n      submissionStore.submitApprovalHelpdesk(param.submissionId)\r\n    } else {\r\n      submissionStore.submitApprovalVerifikator(param.submissionId)\r\n    }\r\n    // console.log(parse)\r\n    if (user?.role?.name == 'Helpdesk') {\r\n      submissionStore.fetchSubmissionVerificationHelpdesk(param.submissionTypeId)\r\n    } else {\r\n      submissionStore.fetchSubmissionVerificationVerifikator(param.submissionTypeId)\r\n    }\r\n    history.push(`/main/submission/verification/${param.submissionTypeId}`)\r\n  }\r\n\r\n  return (\r\n    <PageTransitionComponent direction=\"horizontal\">\r\n      <HeaderComponent title=\"Approval Pengajuan\" />\r\n      {console.log(submissionStore?.getSubmissionApprovalData)}\r\n      <Table columns={columns} dataSource={submissionStore?.getSubmissionApprovalRequirement} pagination={false} showHeader={false} />\r\n      <div style={{ textAlign: 'center', marginTop: 15 }}>\r\n        <Space>\r\n          <Button type=\"primary\" onClick={submitApproval}> SUBMIT </Button>\r\n          {/* <Button type=\"default\" danger onClick={cancelSubmission}> CANCEL </Button> */}\r\n        </Space>\r\n      </div>\r\n    </PageTransitionComponent>\r\n  )\r\n}\r\n\r\nexport default memo(observer(SubmissionApprovalVerificationPage))\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\n// import './App.css';\r\nimport { useLocation, Switch } from 'react-router-dom';\r\nimport { AnimatePresence } from 'framer-motion'\r\nimport { renderRoutes } from 'react-router-config';\r\nimport { ROUTE } from 'config/index.config'\r\n\r\nfunction App() {\r\n  // use location\r\n  const location = useLocation() \r\n\r\n  return (\r\n    // <AnimatePresence exitBeforeEnter initial={false}>\r\n      <Switch location={location}>\r\n        {renderRoutes([ROUTE])}\r\n      </Switch>\r\n    // </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { ENV } from 'config/index.config'\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n  // </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nif (ENV.NODE_ENV === 'production') {\r\n  serviceWorker.register();\r\n} else {\r\n  serviceWorker.unregister();\r\n}\r\n"],"sourceRoot":""}